{
    "astropy__astropy-12907": {
        "astropy/modeling/separable.py": [
            "separability_matrix",
            "_coord_matrix",
            "_cstack",
            "_cdot",
            "_separable"
        ],
        "astropy/modeling/core.py": [
            "CompoundModel",
            "CompoundModel._make_leaflist",
            "CompoundModel.traverse_postorder",
            "CompoundModel._format_expression",
            "CompoundModel._format_components",
            "CompoundModel._set_sub_models_and_parameter_units"
        ],
        "astropy/modeling/models.py": []
    },
    "astropy__astropy-14182": {
        "astropy/io/ascii/rst.py": [
            "RST",
            "SimpleRSTHeader",
            "SimpleRSTData"
        ],
        "astropy/io/ascii/ui.py": [
            "get_writer",
            "write"
        ],
        "astropy/io/ascii/core.py": [
            "_get_writer"
        ]
    },
    "astropy__astropy-14365": {
        "astropy/io/ascii/qdp.py": [
            "_line_type",
            "_get_type_from_list_of_lines",
            "_get_lines_from_file",
            "_interpret_err_lines",
            "_get_tables_from_qdp_file",
            "_understand_err_col",
            "_read_table_qdp",
            "_write_table_qdp",
            "QDPSplitter",
            "QDPHeader",
            "QDPData",
            "QDP"
        ],
        "astropy/io/ascii/core.py": [],
        "astropy/io/ascii/connect.py": []
    },
    "astropy__astropy-14995": {
        "astropy/nddata/nddata.py": [
            "NDData"
        ],
        "astropy/nddata/nddata_withmixins.py": [
            "NDDataRef"
        ],
        "astropy/nddata/mixins/ndarithmetic.py": [
            "NDArithmeticMixin",
            "NDArithmeticMixin._arithmetic",
            "NDArithmeticMixin._arithmetic_mask",
            "NDArithmeticMixin.multiply"
        ]
    },
    "astropy__astropy-6938": {
        "astropy/io/fits/fitsrec.py": [
            "FITS_rec._scale_back_ascii"
        ],
        "astropy/io/fits/column.py": [],
        "astropy/io/fits/setup_package.py": []
    },
    "astropy__astropy-7746": {
        "astropy/wcs/wcs.py": [
            "WCS.wcs_pix2world",
            "WCS._array_converter",
            "WCS._return_list_of_arrays"
        ],
        "astropy/wcs/utils.py": [],
        "astropy/wcs/docstrings.py": []
    },
    "django__django-10914": {
        "django/core/files/storage.py": [
            "FileSystemStorage"
        ],
        "django/conf/global_settings.py": [],
        "django/core/files/uploadhandler.py": []
    },
    "django__django-10924": {
        "django/db/models/fields/files.py": [
            "FileField"
        ],
        "django/db/migrations/serializer.py": [
            "ModelFieldSerializer"
        ],
        "django/db/migrations/writer.py": [
            "MigrationWriter"
        ]
    },
    "django__django-11001": {
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_order_by"
        ],
        "django/db/models/expressions.py": [
            "RawSQL"
        ],
        "django/db/models/sql/query.py": []
    },
    "django__django-11019": {
        "django/forms/widgets.py": [
            "Media",
            "Media.__add__",
            "Media.merge"
        ],
        "django/forms/forms.py": [
            "BaseForm.media"
        ],
        "django/forms/formsets.py": []
    },
    "django__django-11039": {
        "django/db/migrations/executor.py": [
            "MigrationExecutor.collect_sql"
        ],
        "django/core/management/commands/sqlmigrate.py": [
            "Command.handle"
        ],
        "django/db/backends/base/features.py": []
    },
    "django__django-11049": {
        "django/forms/fields.py": [
            "DurationField"
        ],
        "django/db/models/fields/__init__.py": [
            "DurationField"
        ],
        "django/utils/duration.py": []
    },
    "django__django-11099": {
        "django/contrib/auth/validators.py": [
            "ASCIIUsernameValidator",
            "UnicodeUsernameValidator"
        ],
        "django/core/validators.py": [],
        "django/contrib/auth/migrations/0008_alter_user_username_max_length.py": []
    },
    "django__django-11133": {
        "django/http/response.py": [
            "HttpResponse.content",
            "HttpResponse.__init__",
            "HttpResponse.write",
            "HttpResponse.getvalue",
            "HttpResponse.__repr__",
            "HttpResponse.serialize",
            "HttpResponseBase.make_bytes"
        ],
        "django/http/__init__.py": [],
        "django/db/backends/postgresql/base.py": []
    },
    "django__django-11179": {
        "django/db/models/deletion.py": [
            "delete"
        ],
        "django/db/models/base.py": [
            "Model.delete"
        ],
        "django/db/models/query.py": []
    },
    "django__django-11283": {
        "django/contrib/auth/migrations/0011_update_proxy_permissions.py": [
            "update_proxy_model_permissions",
            "revert_proxy_model_permissions"
        ],
        "django/contrib/auth/models.py": [
            "PermissionManager",
            "Permission",
            "Group",
            "PermissionsMixin",
            "AbstractUser",
            "User",
            "AnonymousUser"
        ],
        "django/contrib/auth/apps.py": [
            "AuthConfig"
        ]
    },
    "django__django-11422": {
        "django/utils/autoreload.py": [
            "iter_all_python_module_files",
            "iter_modules_and_files",
            "common_roots",
            "sys_path_directories",
            "get_child_arguments",
            "trigger_reload",
            "restart_with_reloader",
            "BaseReloader",
            "StatReloader",
            "WatchmanReloader",
            "get_reloader",
            "start_django",
            "run_with_reloader"
        ],
        "django/core/management/__init__.py": [
            "execute_from_command_line"
        ],
        "django/core/management/base.py": [
            "BaseCommand"
        ]
    },
    "django__django-11564": {
        "django/conf/global_settings.py": [],
        "django/template/defaulttags.py": [
            "URLNode"
        ],
        "django/contrib/staticfiles/storage.py": [
            "StaticFilesStorage",
            "HashedFilesMixin",
            "ManifestFilesMixin",
            "ManifestStaticFilesStorage"
        ]
    },
    "django__django-11583": {
        "django/utils/autoreload.py": [
            "iter_all_python_module_files",
            "iter_modules_and_files",
            "start_django",
            "run_with_reloader",
            "BaseReloader",
            "StatReloader"
        ],
        "django/core/management/commands/runserver.py": [
            "Command.run",
            "Command.inner_run"
        ],
        "django/utils/_os.py": []
    },
    "django__django-11620": {
        "django/views/debug.py": [
            "technical_404_response"
        ],
        "django/urls/resolvers.py": [
            "URLResolver.resolve"
        ],
        "django/urls/converters.py": [
            "PathConverter"
        ]
    },
    "django__django-11630": {
        "django/db/models/base.py": [
            "ModelBase",
            "Model"
        ],
        "django/db/models/options.py": [
            "Options"
        ],
        "django/db/models/fields/__init__.py": [
            "Field"
        ]
    },
    "django__django-11742": {
        "django/db/models/fields/__init__.py": [
            "Field",
            "Field.__init__",
            "Field._check_choices",
            "Field.check",
            "CharField._check_max_length_attribute"
        ],
        "django/db/models/fields/mixins.py": [],
        "django/db/models/fields/related.py": []
    },
    "django__django-11797": {
        "django/db/models/query.py": [
            "QuerySet.filter",
            "QuerySet._filter_or_exclude",
            "QuerySet.__getitem__"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_filter",
            "Query.add_q",
            "Query.build_filter",
            "Query.build_where",
            "Query._add_q",
            "Query.set_group_by"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_group_by",
            "SQLCompiler.as_sql"
        ]
    },
    "django__django-11815": {
        "django/db/migrations/serializer.py": [
            "EnumSerializer"
        ],
        "django/db/migrations/writer.py": [
            "MigrationWriter"
        ],
        "django/db/migrations/autodetector.py": [
            "deep_deconstruct"
        ]
    },
    "django__django-11848": {
        "django/utils/http.py": [
            "parse_http_date"
        ],
        "django/conf/global_settings.py": [],
        "django/utils/dates.py": []
    },
    "django__django-11905": {
        "django/db/models/lookups.py": [
            "IsNull"
        ],
        "django/db/models/fields/related_lookups.py": [
            "RelatedIsNull"
        ],
        "django/db/models/query.py": []
    },
    "django__django-11910": {
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector._detect_changes",
            "MigrationAutodetector._prepare_field_lists",
            "MigrationAutodetector._generate_added_field",
            "MigrationAutodetector.generate_altered_fields"
        ],
        "django/db/migrations/operations/fields.py": [
            "RenameField",
            "AlterField"
        ],
        "django/db/models/fields/related.py": [
            "ForeignKey.deconstruct",
            "ForeignKey.contribute_to_class",
            "ForeignKey.contribute_to_related_class",
            "ForeignKey.resolve_related_fields"
        ]
    },
    "django__django-11964": {
        "django/db/models/enums.py": [
            "TextChoices"
        ],
        "django/db/models/fields/__init__.py": [
            "Field.to_python",
            "Field.get_prep_value",
            "Field.value_from_object",
            "CharField.to_python",
            "CharField.get_prep_value",
            "CharField.value_from_object",
            "IntegerField.to_python",
            "IntegerField.get_prep_value",
            "IntegerField.value_from_object"
        ],
        "django/db/models/fields/mixins.py": []
    },
    "django__django-11999": {
        "django/db/models/base.py": [
            "Model._get_FIELD_display"
        ],
        "django/db/models/fields/__init__.py": [
            "Field"
        ],
        "django/db/models/fields/related.py": []
    },
    "django__django-12113": {
        "django/db/backends/sqlite3/base.py": [
            "DatabaseWrapper",
            "SQLiteCursorWrapper"
        ],
        "django/db/backends/utils.py": [
            "CursorWrapper",
            "CursorDebugWrapper"
        ],
        "django/db/backends/sqlite3/creation.py": [
            "DatabaseCreation"
        ]
    },
    "django__django-12125": {
        "django/db/migrations/state.py": [
            "ProjectState",
            "ModelState"
        ],
        "django/db/migrations/serializer.py": [
            "DeconstructableSerializer",
            "ModelFieldSerializer"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector"
        ]
    },
    "django__django-12184": {
        "django/urls/resolvers.py": [
            "ResolverMatch",
            "URLPattern",
            "URLResolver"
        ],
        "django/core/handlers/base.py": [
            "BaseHandler"
        ],
        "django/core/handlers/exception.py": [
            "convert_exception_to_response",
            "response_for_exception",
            "get_exception_response",
            "handle_uncaught_exception"
        ]
    },
    "django__django-12284": {
        "django/db/models/base.py": [
            "Model._get_FIELD_display"
        ],
        "django/db/models/fields/__init__.py": [
            "Field.get_choices"
        ],
        "django/db/models/options.py": []
    },
    "django__django-12286": {
        "django/conf/locale/__init__.py": [],
        "django/conf/locale/de/__init__.py": [],
        "django/conf/locale/de/formats.py": []
    },
    "django__django-12308": {
        "django/contrib/admin/utils.py": [
            "display_for_field"
        ],
        "django/contrib/admin/widgets.py": [
            "AdminTextareaWidget"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin"
        ]
    },
    "django__django-12453": {
        "django/db/backends/base/creation.py": [
            "BaseDatabaseCreation.deserialize_db_from_string"
        ],
        "django/db/transaction.py": [
            "atomic"
        ],
        "django/core/serializers/base.py": []
    },
    "django__django-12470": {
        "django/db/models/query.py": [
            "QuerySet.order_by",
            "QuerySet.all"
        ],
        "django/db/models/base.py": [
            "Model"
        ],
        "django/db/models/options.py": [
            "Options"
        ]
    },
    "django__django-12497": {
        "django/db/models/fields/related.py": [
            "create_many_to_many_intermediary_model",
            "ManyToManyField"
        ],
        "django/db/models/fields/reverse_related.py": [
            "ManyToManyRel"
        ],
        "django/db/models/fields/related_descriptors.py": []
    },
    "django__django-12589": {
        "django/db/models/query.py": [
            "QuerySet.annotate"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_group_by",
            "SQLCompiler.as_sql"
        ],
        "django/db/models/sql/query.py": [
            "Query.set_group_by"
        ]
    },
    "django__django-12700": {
        "django/views/debug.py": [
            "SafeExceptionReporterFilter"
        ],
        "django/views/defaults.py": [],
        "django/views/__init__.py": []
    },
    "django__django-12708": {
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor._delete_composed_index",
            "BaseDatabaseSchemaEditor.alter_index_together",
            "BaseDatabaseSchemaEditor.alter_unique_together"
        ],
        "django/db/migrations/operations/models.py": [
            "AlterIndexTogether",
            "AlterUniqueTogether"
        ],
        "django/db/models/options.py": [
            "Options.total_unique_constraints"
        ]
    },
    "django__django-12747": {
        "django/db/models/deletion.py": [
            "Collector"
        ],
        "django/db/models/query.py": [
            "QuerySet.delete"
        ],
        "django/db/models/manager.py": []
    },
    "django__django-12856": {
        "django/db/models/constraints.py": [
            "UniqueConstraint"
        ],
        "django/db/models/options.py": [
            "Options._prepare",
            "Options.total_unique_constraints"
        ],
        "django/db/migrations/questioner.py": [
            "MigrationQuestioner"
        ]
    },
    "django__django-12908": {
        "django/db/models/query.py": [
            "QuerySet.union",
            "QuerySet.distinct"
        ],
        "django/db/models/sql/query.py": [
            "Query.combine",
            "Query.add_distinct_fields"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_combinator_sql",
            "SQLCompiler.get_distinct"
        ]
    },
    "django__django-12915": {
        "django/contrib/staticfiles/handlers.py": [
            "StaticFilesHandlerMixin",
            "ASGIStaticFilesHandler"
        ],
        "django/core/handlers/asgi.py": [
            "ASGIHandler"
        ],
        "django/core/handlers/base.py": [
            "BaseHandler.get_response_async"
        ]
    },
    "django__django-12983": {
        "django/utils/text.py": [
            "slugify"
        ],
        "django/utils/html.py": [],
        "django/utils/http.py": []
    },
    "django__django-13028": {
        "django/db/models/sql/query.py": [
            "Query.check_filterable",
            "Query.build_filter",
            "Query._add_q"
        ],
        "django/db/models/query.py": [
            "QuerySet.filter",
            "QuerySet._filter_or_exclude"
        ],
        "django/db/models/manager.py": []
    },
    "django__django-13033": {
        "django/db/models/query.py": [
            "QuerySet.order_by"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_ordering",
            "Query.clear_ordering",
            "Query.setup_joins",
            "Query.trim_joins"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_order_by",
            "SQLCompiler.find_ordering_name"
        ]
    },
    "django__django-13158": {
        "django/forms/models.py": [
            "ModelMultipleChoiceField"
        ],
        "django/db/models/query.py": [
            "QuerySet.none",
            "QuerySet.union"
        ],
        "django/db/models/query_utils.py": []
    },
    "django__django-13220": {
        "django/core/exceptions.py": [
            "ValidationError"
        ],
        "django/core/validators.py": [
            "RegexValidator.__eq__",
            "EmailValidator.__eq__",
            "BaseValidator.__eq__",
            "DecimalValidator.__eq__",
            "FileExtensionValidator.__eq__",
            "ProhibitNullCharactersValidator.__eq__"
        ],
        "django/forms/fields.py": []
    },
    "django__django-13230": {
        "django/contrib/syndication/views.py": [
            "Feed",
            "Feed.get_feed"
        ],
        "django/utils/feedgenerator.py": [
            "SyndicationFeed.add_item",
            "Rss201rev2Feed.add_item_elements",
            "Atom1Feed.add_item_elements"
        ],
        "django/contrib/syndication/__init__.py": []
    },
    "django__django-13265": {
        "django/db/migrations/operations/models.py": [
            "AlterOrderWithRespectTo",
            "AddIndex"
        ],
        "django/db/migrations/autodetector.py": [
            "generate_altered_order_with_respect_to",
            "generate_added_indexes"
        ],
        "django/db/migrations/operations/special.py": []
    },
    "django__django-13315": {
        "django/forms/models.py": [
            "apply_limit_choices_to_to_formfield",
            "ModelChoiceField",
            "ModelMultipleChoiceField"
        ],
        "django/db/models/fields/related.py": [
            "ForeignKey"
        ],
        "django/forms/fields.py": []
    },
    "django__django-13321": {
        "django/contrib/sessions/backends/base.py": [
            "SessionBase._get_session",
            "SessionBase.decode",
            "SessionBase._legacy_decode"
        ],
        "django/core/signing.py": [
            "loads",
            "Signer.unsign",
            "TimestampSigner.unsign"
        ],
        "django/contrib/auth/__init__.py": [
            "_get_user_session_key",
            "get_user"
        ]
    },
    "django__django-13401": {
        "django/db/models/fields/__init__.py": [
            "Field.__eq__",
            "Field.__lt__",
            "Field.__hash__"
        ],
        "django/db/models/fields/related.py": [],
        "django/db/models/fields/mixins.py": []
    },
    "django__django-13447": {
        "django/contrib/admin/views/main.py": [
            "ChangeList"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin",
            "ModelAdmin._build_app_dict"
        ],
        "django/contrib/admin/views/__init__.py": []
    },
    "django__django-13448": {
        "django/db/backends/base/creation.py": [
            "BaseDatabaseCreation.create_test_db",
            "BaseDatabaseCreation.serialize_db_to_string",
            "BaseDatabaseCreation.get_objects"
        ],
        "django/db/backends/utils.py": [
            "CursorWrapper.execute",
            "CursorWrapper._execute",
            "CursorWrapper._execute_with_wrappers"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.execute_sql"
        ]
    },
    "django__django-13551": {
        "django/contrib/auth/tokens.py": [
            "PasswordResetTokenGenerator"
        ],
        "django/contrib/auth/models.py": [
            "AbstractUser"
        ],
        "django/contrib/auth/views.py": [
            "PasswordResetConfirmView"
        ]
    },
    "django__django-13590": {
        "django/db/models/sql/query.py": [
            "Query.resolve_lookup_value"
        ],
        "django/db/models/query_utils.py": [
            "PathInfo"
        ],
        "django/db/models/fields/related_lookups.py": []
    },
    "django__django-13658": {
        "django/core/management/__init__.py": [
            "ManagementUtility",
            "execute_from_command_line"
        ],
        "django/bin/django-admin.py": [],
        "django/__main__.py": []
    },
    "django__django-13660": {
        "django/core/management/__init__.py": [
            "execute_from_command_line"
        ],
        "django/core/management/base.py": [
            "BaseCommand"
        ],
        "django/__main__.py": []
    },
    "django__django-13710": {
        "django/contrib/admin/options.py": [
            "InlineModelAdmin",
            "InlineModelAdmin.__init__"
        ],
        "django/contrib/admin/forms.py": [],
        "django/contrib/admin/views/main.py": []
    },
    "django__django-13757": {
        "django/db/models/fields/json.py": [
            "KeyTransformIsNull"
        ],
        "django/db/models/lookups.py": [
            "IsNull"
        ],
        "django/db/backends/sqlite3/operations.py": [
            "DatabaseOperations.convert_jsonfield_value"
        ]
    },
    "django__django-13768": {
        "django/dispatch/dispatcher.py": [
            "Signal.send_robust"
        ],
        "django/conf/global_settings.py": [],
        "django/core/signals.py": []
    },
    "django__django-13925": {
        "django/db/models/base.py": [
            "ModelBase",
            "Model"
        ],
        "django/db/models/fields/__init__.py": [
            "AutoField",
            "BigAutoField",
            "SmallAutoField"
        ],
        "django/conf/global_settings.py": []
    },
    "django__django-13933": {
        "django/forms/models.py": [
            "ModelChoiceField",
            "ModelMultipleChoiceField"
        ],
        "django/forms/fields.py": [
            "ChoiceField"
        ],
        "django/forms/forms.py": []
    },
    "django__django-13964": {
        "django/db/models/fields/related.py": [
            "ForeignObject",
            "ForeignKey"
        ],
        "django/db/models/fields/__init__.py": [
            "Field"
        ],
        "django/db/models/base.py": [
            "Model"
        ]
    },
    "django__django-14016": {
        "django/db/models/query_utils.py": [
            "Q"
        ],
        "django/db/models/query.py": [
            "QuerySet.__or__"
        ],
        "django/db/models/expressions.py": [
            "CombinedExpression",
            "Subquery"
        ]
    },
    "django__django-14017": {
        "django/db/models/query_utils.py": [
            "Q.__and__",
            "Q._combine"
        ],
        "django/db/models/expressions.py": [
            "Combinable.__rand__"
        ],
        "django/db/models/query.py": []
    },
    "django__django-14155": {
        "django/urls/resolvers.py": [
            "ResolverMatch",
            "ResolverMatch.__init__",
            "ResolverMatch.__repr__"
        ],
        "django/urls/utils.py": [
            "get_callable"
        ],
        "django/urls/exceptions.py": []
    },
    "django__django-14238": {
        "django/db/models/options.py": [
            "Options._get_default_pk_class"
        ],
        "django/db/models/base.py": [
            "ModelBase"
        ],
        "django/db/models/fields/__init__.py": [
            "AutoFieldMeta"
        ]
    },
    "django__django-14382": {
        "django/core/management/templates.py": [
            "TemplateCommand.handle",
            "TemplateCommand.validate_name"
        ],
        "django/core/management/commands/startapp.py": [
            "Command.handle"
        ],
        "django/core/management/commands/__init__.py": []
    },
    "django__django-14411": {
        "django/contrib/admin/widgets.py": [
            "ReadOnlyPasswordHashWidget"
        ],
        "django/contrib/admin/utils.py": [
            "label_for_field"
        ],
        "django/contrib/admin/forms.py": []
    },
    "django__django-14534": {
        "django/forms/boundfield.py": [
            "BoundField.subwidgets",
            "BoundWidget.id_for_label"
        ],
        "django/forms/widgets.py": [
            "Widget.subwidgets",
            "ChoiceWidget.options",
            "ChoiceWidget.create_option",
            "CheckboxSelectMultiple.use_required_attribute",
            "CheckboxSelectMultiple.value_omitted_from_data"
        ],
        "django/forms/fields.py": []
    },
    "django__django-14580": {
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector"
        ],
        "django/db/migrations/writer.py": [
            "OperationWriter",
            "MigrationWriter"
        ],
        "django/db/migrations/serializer.py": [
            "Serializer"
        ]
    },
    "django__django-14608": {
        "django/forms/formsets.py": [
            "BaseFormSet.non_form_errors",
            "BaseFormSet.full_clean"
        ],
        "django/forms/utils.py": [
            "ErrorList"
        ],
        "django/forms/forms.py": [
            "BaseForm"
        ]
    },
    "django__django-14667": {
        "django/db/models/query.py": [
            "QuerySet.defer",
            "QuerySet.only"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_deferred_loading",
            "Query.add_immediate_loading",
            "Query.clear_deferred_loading",
            "Query.get_loaded_field_names"
        ],
        "django/db/models/fields/__init__.py": []
    },
    "django__django-14672": {
        "django/db/models/fields/reverse_related.py": [
            "ManyToManyRel",
            "ManyToManyRel.__init__",
            "ManyToManyRel.identity"
        ],
        "django/db/models/fields/related.py": [
            "make_hashable"
        ],
        "django/db/models/base.py": []
    },
    "django__django-14730": {
        "django/db/models/fields/related.py": [
            "ManyToManyField",
            "ManyToManyField.__init__",
            "ManyToManyField.check",
            "ManyToManyField._check_ignored_options"
        ],
        "django/db/models/fields/related_descriptors.py": [],
        "django/db/models/fields/__init__.py": []
    },
    "django__django-14752": {
        "django/contrib/admin/views/autocomplete.py": [
            "AutocompleteJsonView.get",
            "AutocompleteJsonView.serialize_result"
        ],
        "django/contrib/admin/utils.py": [],
        "django/contrib/admin/__init__.py": []
    },
    "django__django-14787": {
        "django/utils/decorators.py": [
            "method_decorator",
            "_update_method_wrapper",
            "_multi_decorate"
        ],
        "django/utils/functional.py": [
            "LazyObject",
            "SimpleLazyObject"
        ],
        "django/utils/inspect.py": [
            "_get_func_parameters",
            "_get_callable_parameters",
            "get_func_args",
            "get_func_full_args",
            "func_accepts_kwargs",
            "func_accepts_var_args",
            "method_has_no_args",
            "func_supports_parameter"
        ]
    },
    "django__django-14855": {
        "django/contrib/admin/helpers.py": [
            "AdminReadonlyField"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin.response_add"
        ],
        "django/contrib/admin/sites.py": [
            "AdminSite"
        ]
    },
    "django__django-14915": {
        "django/forms/models.py": [
            "ModelChoiceIteratorValue"
        ],
        "django/forms/widgets.py": [
            "ChoiceWidget.create_option"
        ],
        "django/forms/utils.py": []
    },
    "django__django-14997": {
        "django/db/backends/sqlite3/schema.py": [
            "DatabaseSchemaEditor._remake_table",
            "DatabaseSchemaEditor.add_constraint"
        ],
        "django/db/backends/sqlite3/base.py": [
            "DatabaseWrapper"
        ],
        "django/db/migrations/operations/fields.py": [
            "AlterField.database_forwards"
        ]
    },
    "django__django-14999": {
        "django/db/migrations/operations/models.py": [
            "RenameModel",
            "RenameModel.database_forwards",
            "RenameModel.database_backwards"
        ],
        "django/db/backends/sqlite3/schema.py": [
            "DatabaseSchemaEditor.alter_db_table"
        ],
        "django/db/backends/postgresql/schema.py": [
            "DatabaseSchemaEditor.alter_db_table"
        ]
    },
    "django__django-15061": {
        "django/forms/widgets.py": [
            "MultiWidget",
            "ChoiceWidget.id_for_label"
        ],
        "django/forms/fields.py": [],
        "django/forms/__init__.py": []
    },
    "django__django-15202": {
        "django/forms/fields.py": [
            "URLField"
        ],
        "django/core/validators.py": [
            "URLValidator"
        ],
        "django/http/request.py": []
    },
    "django__django-15213": {
        "django/db/models/expressions.py": [
            "ExpressionWrapper",
            "ExpressionWrapper.as_sql",
            "Combinable",
            "Combinable.__invert__",
            "CombinedExpression",
            "CombinedExpression.as_sql"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.compile",
            "SQLCompiler.as_sql"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_q",
            "Query.build_where",
            "Query.add_filter"
        ]
    },
    "django__django-15252": {
        "django/db/migrations/recorder.py": [
            "MigrationRecorder"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor.apply_migration",
            "MigrationExecutor.record_migration",
            "MigrationExecutor.unapply_migration"
        ],
        "django/db/backends/base/creation.py": [
            "BaseDatabaseCreation.create_test_db",
            "BaseDatabaseCreation._create_test_db",
            "BaseDatabaseCreation.clone_test_db",
            "BaseDatabaseCreation._clone_test_db"
        ]
    },
    "django__django-15320": {
        "django/db/models/expressions.py": [
            "Subquery",
            "Subquery.__init__",
            "Subquery.as_sql"
        ],
        "django/db/models/sql/query.py": [
            "Query"
        ],
        "django/db/models/sql/compiler.py": []
    },
    "django__django-15347": {
        "django/contrib/messages/storage/base.py": [
            "Message",
            "BaseStorage.add"
        ],
        "django/contrib/messages/storage/cookie.py": [
            "MessageEncoder",
            "MessageDecoder"
        ],
        "django/contrib/messages/storage/session.py": [
            "SessionStorage.serialize_messages",
            "SessionStorage.deserialize_messages"
        ]
    },
    "django__django-15388": {
        "django/conf/__init__.py": [
            "LazySettings",
            "Settings",
            "UserSettingsHolder"
        ],
        "django/utils/autoreload.py": [
            "trigger_reload",
            "restart_with_reloader",
            "BaseReloader",
            "StatReloader",
            "WatchmanReloader",
            "get_reloader",
            "start_django",
            "run_with_reloader"
        ],
        "django/core/management/commands/runserver.py": [
            "Command"
        ]
    },
    "django__django-15400": {
        "django/utils/functional.py": [
            "SimpleLazyObject"
        ],
        "django/utils/decorators.py": [],
        "django/utils/__init__.py": []
    },
    "django__django-15498": {
        "django/middleware/http.py": [
            "ConditionalGetMiddleware"
        ],
        "django/http/request.py": [
            "HttpRequest.get"
        ],
        "django/http/response.py": []
    },
    "django__django-15695": {
        "django/db/migrations/operations/models.py": [
            "RenameIndex"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor.rename_index"
        ],
        "django/db/backends/postgresql/operations.py": [
            "DatabaseOperations.quote_name"
        ]
    },
    "django__django-15738": {
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector._detect_changes",
            "MigrationAutodetector._generate_removed_altered_foo_together",
            "MigrationAutodetector.generate_removed_altered_unique_together",
            "MigrationAutodetector.generate_altered_unique_together"
        ],
        "django/db/migrations/operations/models.py": [
            "AlterUniqueTogether"
        ],
        "django/db/migrations/operations/fields.py": []
    },
    "django__django-15781": {
        "django/core/management/base.py": [
            "DjangoHelpFormatter",
            "BaseCommand"
        ],
        "django/core/management/__init__.py": [
            "execute_from_command_line"
        ],
        "django/core/management/commands/__init__.py": []
    },
    "django__django-15789": {
        "django/utils/html.py": [
            "json_script"
        ],
        "django/template/defaultfilters.py": [
            "json_script"
        ],
        "django/utils/safestring.py": []
    },
    "django__django-15790": {
        "django/template/library.py": [
            "import_library"
        ],
        "django/template/engine.py": [
            "get_template_libraries"
        ],
        "django/template/defaulttags.py": []
    },
    "django__django-15814": {
        "django/db/models/sql/query.py": [
            "Query.names_to_path",
            "Query.setup_joins"
        ],
        "django/db/models/query.py": [
            "QuerySet.only"
        ],
        "django/db/models/fields/related.py": [
            "ForeignKey",
            "OneToOneField",
            "ManyToManyField"
        ]
    },
    "django__django-15819": {
        "django/db/models/fields/related.py": [
            "RelatedField._check_clashes",
            "RelatedField.contribute_to_class",
            "ForeignObject.contribute_to_class",
            "ForeignObject.contribute_to_related_class",
            "ForeignKey.contribute_to_related_class",
            "ManyToManyField.contribute_to_related_class"
        ],
        "django/db/models/fields/reverse_related.py": [
            "ForeignObjectRel.get_accessor_name"
        ],
        "django/core/management/commands/inspectdb.py": [
            "Command.handle_inspection",
            "Command.normalize_col_name"
        ]
    },
    "django__django-15851": {
        "django/db/backends/postgresql/client.py": [
            "DatabaseClient.runshell"
        ],
        "django/core/management/commands/dbshell.py": [
            "Command.handle"
        ],
        "django/db/backends/postgresql/base.py": []
    },
    "django__django-15902": {
        "django/forms/formsets.py": [
            "ManagementForm",
            "BaseFormSet",
            "formset_factory"
        ],
        "django/forms/forms.py": [
            "BaseForm",
            "Form"
        ],
        "django/forms/renderers.py": [
            "get_default_renderer",
            "BaseRenderer",
            "DjangoDivFormRenderer",
            "Jinja2DivFormRenderer",
            "TemplatesSetting"
        ]
    },
    "django__django-15996": {
        "django/db/migrations/serializer.py": [
            "EnumSerializer",
            "Serializer._registry"
        ],
        "django/db/models/enums.py": [
            "ChoicesMeta",
            "Choices",
            "IntegerChoices",
            "TextChoices"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector"
        ]
    },
    "django__django-16041": {
        "django/forms/formsets.py": [
            "BaseFormSet",
            "BaseFormSet.empty_form"
        ],
        "django/forms/models.py": [
            "modelformset_factory"
        ],
        "django/forms/utils.py": []
    },
    "django__django-16046": {
        "django/utils/numberformat.py": [
            "format"
        ],
        "django/contrib/admin/views/main.py": [
            "ChangeList"
        ],
        "django/contrib/admin/templatetags/admin_list.py": [
            "items_for_result"
        ]
    },
    "django__django-16139": {
        "django/contrib/auth/forms.py": [
            "UserChangeForm"
        ],
        "django/contrib/auth/admin.py": [
            "UserAdmin"
        ],
        "django/contrib/auth/views.py": []
    },
    "django__django-16229": {
        "django/forms/models.py": [
            "BaseModelForm",
            "ModelForm"
        ],
        "django/forms/forms.py": [
            "BaseForm"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin",
            "InlineModelAdmin",
            "TabularInline"
        ]
    },
    "django__django-16255": {
        "django/contrib/sitemaps/__init__.py": [
            "Sitemap.get_latest_lastmod",
            "GenericSitemap.get_latest_lastmod"
        ],
        "django/contrib/sitemaps/views.py": [],
        "django/contrib/sitemaps/management/__init__.py": []
    },
    "django__django-16379": {
        "django/core/cache/backends/filebased.py": [
            "FileBasedCache.has_key",
            "FileBasedCache._is_expired"
        ],
        "django/core/cache/backends/base.py": [
            "BaseCache.get_or_set"
        ],
        "django/core/cache/backends/__init__.py": []
    },
    "django__django-16400": {
        "django/core/management/commands/migrate.py": [
            "Command.handle"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor.migrate",
            "MigrationExecutor.apply_migration",
            "MigrationExecutor.record_migration"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor"
        ]
    },
    "django__django-16408": {
        "django/db/models/query.py": [
            "QuerySet.select_related",
            "QuerySet.annotate",
            "QuerySet._merge_known_related_objects"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_select_related",
            "Query.add_filtered_relation",
            "Query.setup_joins",
            "Query.trim_joins",
            "Query.build_filtered_relation_q",
            "Query.build_filter",
            "Query.add_q",
            "Query._add_q",
            "Query.resolve_ref",
            "Query.get_initial_alias",
            "Query.join",
            "Query.join_parent_model",
            "Query.promote_joins",
            "Query.demote_joins",
            "Query.change_aliases",
            "Query.bump_prefix",
            "Query.table_alias",
            "Query.ref_alias",
            "Query.unref_alias",
            "Query.reset_refcounts",
            "Query.check_alias",
            "Query.add_annotation",
            "Query.resolve_expression",
            "Query.get_group_by_cols",
            "Query.as_sql",
            "Query.solve_lookup_type",
            "Query.check_query_object_type",
            "Query.check_related_objects",
            "Query.check_filterable",
            "Query.build_lookup",
            "Query.try_transform",
            "Query.add_filter",
            "Query.build_where",
            "Query.clear_where",
            "Query.set_empty",
            "Query.is_empty",
            "Query.set_limits",
            "Query.clear_limits",
            "Query.is_sliced",
            "Query.has"
        ],
        "django/db/models/fields/related.py": []
    },
    "django__django-16527": {
        "django/contrib/admin/templatetags/admin_modify.py": [
            "submit_row"
        ],
        "django/contrib/admin/options.py": [
            "BaseModelAdmin.has_add_permission",
            "BaseModelAdmin.has_change_permission",
            "ModelAdmin.render_change_form"
        ],
        "django/contrib/admin/views/main.py": []
    },
    "django__django-16595": {
        "django/db/migrations/optimizer.py": [
            "MigrationOptimizer.optimize",
            "MigrationOptimizer.optimize_inner"
        ],
        "django/db/migrations/operations/fields.py": [
            "FieldOperation.is_same_field_operation",
            "AlterField.reduce"
        ],
        "django/db/migrations/operations/models.py": []
    },
    "django__django-16816": {
        "django/contrib/admin/checks.py": [
            "ModelAdminChecks._check_list_display"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin.get_list_display"
        ],
        "django/contrib/admin/templatetags/admin_list.py": [
            "result_headers"
        ]
    },
    "django__django-16820": {
        "django/db/migrations/operations/models.py": [
            "AlterIndexTogether",
            "AddIndex",
            "RemoveIndex",
            "RenameIndex"
        ],
        "django/db/migrations/autodetector.py": [
            "generate_removed_altered_index_together",
            "generate_altered_index_together"
        ],
        "django/db/migrations/loader.py": []
    },
    "django__django-16873": {
        "django/template/defaultfilters.py": [
            "join"
        ],
        "django/utils/safestring.py": [
            "mark_safe"
        ],
        "django/template/base.py": [
            "render_value_in_context"
        ]
    },
    "django__django-16910": {
        "django/db/models/query.py": [
            "QuerySet.only",
            "QuerySet.select_related"
        ],
        "django/db/models/sql/query.py": [
            "Query._get_only_select_mask",
            "Query.add_select_related",
            "Query.get_select_mask",
            "Query.set_select",
            "Query.add_fields",
            "Query.add_select_col",
            "Query.clear_select_fields",
            "Query.clear_select_clause"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_related_selections",
            "SQLCompiler.get_default_columns"
        ]
    },
    "django__django-17051": {
        "django/db/models/query.py": [
            "QuerySet.bulk_create",
            "QuerySet._insert",
            "QuerySet._check_bulk_create_options"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLInsertCompiler"
        ],
        "django/db/backends/postgresql/base.py": [
            "DatabaseWrapper"
        ]
    },
    "django__django-17087": {
        "django/db/models/fields/__init__.py": [
            "Field.deconstruct"
        ],
        "django/db/migrations/writer.py": [
            "MigrationWriter.serialize"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector.deep_deconstruct"
        ]
    },
    "matplotlib__matplotlib-18869": {
        "lib/matplotlib/__init__.py": [
            "__getattr__"
        ],
        "lib/matplotlib/pyplot.py": [
            "_setup_pyplot_info_docstrings"
        ],
        "lib/matplotlib/rcsetup.py": []
    },
    "matplotlib__matplotlib-22711": {
        "lib/matplotlib/widgets.py": [
            "RangeSlider.__init__",
            "RangeSlider.set_val"
        ],
        "examples/widgets/range_slider.py": [
            "update"
        ],
        "examples/widgets/slider_demo.py": [
            "update"
        ]
    },
    "matplotlib__matplotlib-22835": {
        "lib/matplotlib/artist.py": [
            "Artist.format_cursor_data"
        ],
        "lib/matplotlib/colors.py": [
            "BoundaryNorm",
            "BoundaryNorm.inverse"
        ],
        "lib/matplotlib/axes/_base.py": []
    },
    "matplotlib__matplotlib-23299": {
        "lib/matplotlib/_pylab_helpers.py": [
            "Gcf"
        ],
        "lib/matplotlib/pyplot.py": [
            "get_backend",
            "rc_context"
        ],
        "lib/matplotlib/backends/backend_qt.py": []
    },
    "matplotlib__matplotlib-23314": {
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D.set_visible",
            "Axes3D.draw"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.add_subplot",
            "Figure.subplots"
        ],
        "lib/mpl_toolkits/mplot3d/art3d.py": []
    },
    "matplotlib__matplotlib-23476": {
        "lib/matplotlib/figure.py": [
            "Figure.__setstate__",
            "Figure.__getstate__",
            "Figure.set_dpi",
            "Figure.get_dpi",
            "Figure._set_dpi",
            "Figure._get_dpi"
        ],
        "lib/matplotlib/backend_bases.py": [
            "new_figure_manager_given_figure"
        ],
        "lib/matplotlib/backends/backend_macosx.py": [
            "FigureCanvasMac"
        ]
    },
    "matplotlib__matplotlib-23562": {
        "lib/mpl_toolkits/mplot3d/art3d.py": [
            "Poly3DCollection",
            "Poly3DCollection.get_facecolor",
            "Poly3DCollection.set_facecolor",
            "Poly3DCollection.set_3d_properties"
        ],
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D.plot_surface"
        ],
        "lib/mpl_toolkits/mplot3d/axis3d.py": []
    },
    "matplotlib__matplotlib-23563": {
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D.plot"
        ],
        "lib/mpl_toolkits/mplot3d/art3d.py": [
            "Line3D",
            "Line3D.__init__",
            "Line3D.set_3d_properties",
            "Line3D.set_data_3d",
            "Line3D.draw"
        ],
        "lib/mpl_toolkits/mplot3d/proj3d.py": []
    },
    "matplotlib__matplotlib-23913": {
        "lib/matplotlib/legend.py": [
            "Legend",
            "Legend.__init__",
            "Legend.set_draggable"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.legend"
        ],
        "lib/matplotlib/pyplot.py": [
            "legend"
        ]
    },
    "matplotlib__matplotlib-23964": {
        "lib/matplotlib/backends/backend_ps.py": [
            "RendererPS.draw_text"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.savefig"
        ],
        "lib/matplotlib/text.py": [
            "Text.draw",
            "Annotation.draw"
        ]
    },
    "matplotlib__matplotlib-23987": {
        "lib/matplotlib/figure.py": [
            "Figure.subplots_adjust",
            "Figure.set_layout_engine",
            "Figure.get_layout_engine",
            "Figure.set_constrained_layout",
            "Figure.get_constrained_layout",
            "Figure.set_constrained_layout_pads",
            "Figure.get_constrained_layout_pads",
            "Figure.execute_constrained_layout"
        ],
        "lib/matplotlib/_constrained_layout.py": [
            "do_constrained_layout"
        ],
        "lib/matplotlib/layout_engine.py": [
            "ConstrainedLayoutEngine"
        ]
    },
    "matplotlib__matplotlib-24149": {
        "lib/matplotlib/axes/_axes.py": [
            "Axes.bar",
            "Axes._convert_dx"
        ],
        "lib/matplotlib/cbook/__init__.py": [
            "_safe_first_finite"
        ],
        "lib/matplotlib/figure.py": []
    },
    "matplotlib__matplotlib-24265": {
        "lib/matplotlib/style/core.py": [
            "_remove_blacklisted_style_params",
            "_apply_style",
            "use",
            "context",
            "load_base_library",
            "iter_user_libraries",
            "update_user_library",
            "read_style_directory",
            "update_nested_dict",
            "reload_library"
        ],
        "lib/matplotlib/__init__.py": [
            "rc_params",
            "rc_params_from_file",
            "rcdefaults",
            "rc_file_defaults",
            "rc_file",
            "rc_context"
        ],
        "lib/matplotlib/rcsetup.py": []
    },
    "matplotlib__matplotlib-24334": {
        "lib/matplotlib/axis.py": [
            "Axis.set_ticks",
            "Axis.set_ticklabels",
            "Axis._set_ticklabels"
        ],
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase.set_xticks",
            "_AxesBase.set_yticks",
            "_AxesBase.set_xticklabels",
            "_AxesBase.set_yticklabels"
        ],
        "lib/matplotlib/axes/_axes.py": []
    },
    "matplotlib__matplotlib-24970": {
        "lib/matplotlib/colors.py": [
            "Colormap.__call__",
            "Colormap._set_extremes",
            "Colormap._init",
            "Colormap.set_bad",
            "Colormap.set_under",
            "Colormap.set_over",
            "Colormap.set_extremes",
            "Colormap.with_extremes",
            "Colormap.resampled",
            "Colormap.reversed",
            "LinearSegmentedColormap._init",
            "ListedColormap._init"
        ],
        "lib/matplotlib/pyplot.py": [
            "get_cmap"
        ],
        "lib/matplotlib/cm.py": [
            "_get_cmap",
            "ScalarMappable.to_rgba"
        ]
    },
    "matplotlib__matplotlib-25079": {
        "lib/matplotlib/colors.py": [
            "LogNorm"
        ],
        "lib/matplotlib/cm.py": [
            "ScalarMappable",
            "ScalarMappable.set_norm",
            "ScalarMappable.changed"
        ],
        "lib/matplotlib/collections.py": [
            "Collection.update_scalarmappable"
        ]
    },
    "matplotlib__matplotlib-25311": {
        "lib/matplotlib/legend.py": [
            "DraggableLegend",
            "Legend.__init__",
            "Legend.set_draggable"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.__getstate__",
            "Figure.__setstate__"
        ],
        "lib/matplotlib/backends/backend_qt.py": [
            "FigureCanvasQT"
        ]
    },
    "matplotlib__matplotlib-25332": {
        "lib/matplotlib/figure.py": [
            "Figure.align_labels",
            "Figure.__getstate__",
            "Figure.__setstate__"
        ],
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase.__getstate__",
            "_AxesBase.__setstate__"
        ],
        "lib/matplotlib/axis.py": [
            "Axis.__getstate__",
            "Axis.__setstate__"
        ]
    },
    "matplotlib__matplotlib-25433": {
        "lib/matplotlib/widgets.py": [
            "LockDraw",
            "Widget",
            "AxesWidget",
            "Button",
            "SliderBase",
            "Slider",
            "RangeSlider"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.clf",
            "Figure.draw"
        ],
        "lib/matplotlib/pyplot.py": [
            "clf",
            "draw"
        ]
    },
    "matplotlib__matplotlib-25442": {
        "lib/matplotlib/figure.py": [
            "Figure",
            "Figure.set_canvas"
        ],
        "lib/matplotlib/offsetbox.py": [
            "DraggableBase",
            "DraggableBase.canvas",
            "DraggableBase.disconnect",
            "DraggableBase._check_still_parented"
        ],
        "lib/matplotlib/cbook.py": []
    },
    "matplotlib__matplotlib-25498": {
        "lib/matplotlib/colorbar.py": [
            "Colorbar.update_normal",
            "Colorbar.update_bruteforce",
            "Colorbar._process_values"
        ],
        "lib/matplotlib/colors.py": [
            "Normalize.inverse",
            "LogNorm.inverse"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.colorbar"
        ]
    },
    "matplotlib__matplotlib-26011": {
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase.set_xlim"
        ],
        "lib/matplotlib/axis.py": [
            "Axis.set_view_interval",
            "XAxis.set_view_interval",
            "YAxis.set_view_interval"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.subplots"
        ]
    },
    "matplotlib__matplotlib-26020": {
        "lib/mpl_toolkits/axes_grid1/axes_grid.py": [
            "_tick_only",
            "Grid.set_label_mode",
            "Grid"
        ],
        "lib/mpl_toolkits/axes_grid1/mpl_axes.py": [
            "Axes",
            "SimpleAxisArtist"
        ],
        "lib/mpl_toolkits/axes_grid1/axes_divider.py": [
            "AxesDivider"
        ]
    },
    "mwaskom__seaborn-2848": {
        "seaborn/axisgrid.py": [
            "PairGrid",
            "PairGrid.map",
            "PairGrid._map_bivariate",
            "PairGrid._plot_bivariate"
        ],
        "seaborn/relational.py": [
            "scatterplot",
            "_ScatterPlotter"
        ],
        "seaborn/regression.py": []
    },
    "mwaskom__seaborn-3010": {
        "seaborn/_stats/regression.py": [
            "PolyFit"
        ],
        "seaborn/_core/plot.py": [
            "Plot.add",
            "Plot._plot",
            "Plotter._compute_stats"
        ],
        "seaborn/_core/groupby.py": [
            "GroupBy.apply"
        ]
    },
    "mwaskom__seaborn-3190": {
        "seaborn/_core/plot.py": [
            "Plot._plot",
            "Plotter._setup_scales"
        ],
        "seaborn/_core/scales.py": [
            "ContinuousBase",
            "Nominal"
        ],
        "seaborn/_core/properties.py": [
            "Color"
        ]
    },
    "mwaskom__seaborn-3407": {
        "seaborn/axisgrid.py": [
            "pairplot",
            "PairGrid.__init__",
            "PairGrid.map_diag"
        ],
        "seaborn/utils.py": [
            "_normalize_kwargs"
        ],
        "seaborn/_core/data.py": [
            "PlotData"
        ]
    },
    "pallets__flask-4045": {
        "src/flask/blueprints.py": [
            "Blueprint"
        ],
        "src/flask/app.py": [
            "Flask.register_blueprint"
        ],
        "src/flask/__init__.py": []
    },
    "pallets__flask-4992": {
        "src/flask/config.py": [
            "Config.from_file"
        ],
        "docs/conf.py": [
            "setup"
        ],
        "examples/tutorial/flaskr/__init__.py": [
            "create_app"
        ]
    },
    "pallets__flask-5063": {
        "src/flask/cli.py": [
            "routes_command"
        ],
        "src/flask/app.py": [
            "Flask.iter_blueprints",
            "Flask.url_map_class",
            "Flask.url_rule_class"
        ],
        "src/flask/blueprints.py": [
            "Blueprint",
            "BlueprintSetupState"
        ]
    },
    "psf__requests-1963": {
        "requests/sessions.py": [
            "SessionRedirectMixin.resolve_redirects"
        ],
        "requests/models.py": [
            "PreparedRequest.copy"
        ],
        "requests/utils.py": []
    },
    "psf__requests-2148": {
        "requests/exceptions.py": [
            "ConnectionError"
        ],
        "requests/packages/urllib3/exceptions.py": [
            "ProtocolError"
        ],
        "requests/models.py": [
            "Response",
            "Response.iter_content",
            "Response.iter_lines",
            "Response.content",
            "Response.text"
        ]
    },
    "psf__requests-2317": {
        "requests/sessions.py": [
            "Session.request"
        ],
        "requests/compat.py": [],
        "requests/__init__.py": []
    },
    "psf__requests-2674": {
        "requests/exceptions.py": [
            "RequestException",
            "HTTPError",
            "ConnectionError",
            "ProxyError",
            "SSLError",
            "Timeout",
            "ConnectTimeout",
            "ReadTimeout",
            "URLRequired",
            "TooManyRedirects",
            "MissingSchema",
            "InvalidSchema",
            "InvalidURL",
            "ChunkedEncodingError",
            "ContentDecodingError",
            "StreamConsumedError",
            "RetryError"
        ],
        "requests/sessions.py": [
            "Session",
            "Session.request",
            "Session.send"
        ],
        "requests/adapters.py": [
            "HTTPAdapter",
            "HTTPAdapter.send"
        ]
    },
    "psf__requests-3362": {
        "requests/models.py": [
            "Response.iter_content",
            "Response.text"
        ],
        "requests/utils.py": [
            "stream_decode_response_unicode"
        ],
        "requests/sessions.py": []
    },
    "psf__requests-863": {
        "requests/models.py": [
            "Request.__init__",
            "Request.register_hook",
            "Request.send"
        ],
        "requests/hooks.py": [
            "dispatch_hook"
        ],
        "requests/sessions.py": [
            "Session.__init__",
            "Session.request"
        ]
    },
    "pydata__xarray-3364": {
        "xarray/core/concat.py": [
            "concat",
            "_dataset_concat",
            "_dataarray_concat"
        ],
        "xarray/core/merge.py": [
            "merge",
            "merge_core",
            "merge_coords",
            "merge_data_and_coords"
        ],
        "xarray/core/dataset.py": [
            "Dataset.merge",
            "Dataset.combine_first"
        ]
    },
    "pydata__xarray-4094": {
        "xarray/core/variable.py": [
            "Variable"
        ],
        "xarray/core/dataset.py": [
            "Dataset.to_stacked_array",
            "Dataset._unstack_once",
            "Dataset.unstack"
        ],
        "xarray/core/merge.py": [
            "merge"
        ]
    },
    "pydata__xarray-4248": {
        "xarray/core/formatting.py": [
            "summarize_variable",
            "summarize_coord",
            "summarize_datavar",
            "dataset_repr"
        ],
        "xarray/core/dataset.py": [
            "Dataset"
        ],
        "xarray/core/coordinates.py": [
            "DatasetCoordinates"
        ]
    },
    "pydata__xarray-4493": {
        "xarray/core/dataset.py": [
            "Dataset.update",
            "Dataset._replace_vars_and_dims",
            "Dataset._replace_with_new_dims",
            "Dataset._replace"
        ],
        "xarray/core/dataarray.py": [
            "DataArray._to_temp_dataset",
            "DataArray._from_temp_dataset"
        ],
        "xarray/core/variable.py": [
            "Variable.chunk",
            "Variable.copy"
        ]
    },
    "pydata__xarray-5131": {
        "xarray/core/groupby.py": [
            "DatasetGroupBy.__repr__"
        ],
        "xarray/core/formatting.py": [
            "dataset_repr"
        ],
        "xarray/core/dataset.py": []
    },
    "pylint-dev__pylint-5859": {
        "pylint/lint/pylinter.py": [
            "PyLinter.__init__",
            "PyLinter.set_option",
            "PyLinter.process_tokens"
        ],
        "pylint/constants.py": [],
        "pylint/utils/utils.py": [
            "_splitstrip",
            "_unquote",
            "_check_csv"
        ]
    },
    "pylint-dev__pylint-6506": {
        "pylint/config/exceptions.py": [
            "_UnrecognizedOptionError"
        ],
        "pylint/config/config_initialization.py": [
            "_config_initialization"
        ],
        "pylint/lint/run.py": [
            "Run"
        ]
    },
    "pylint-dev__pylint-7080": {
        "pylint/lint/pylinter.py": [
            "PyLinter._discover_files",
            "PyLinter.check",
            "PyLinter._iterate_file_descrs"
        ],
        "pylint/config/arguments_manager.py": [
            "_ArgumentsManager._parse_configuration_file",
            "_ArgumentsManager.load_config_file",
            "_ArgumentsManager.load_configuration"
        ],
        "pylint/config/config_file_parser.py": [
            "_ConfigurationFileParser._parse_toml_file",
            "_ConfigurationFileParser.parse_config_file"
        ]
    },
    "pylint-dev__pylint-7114": {
        "pylint/lint/expand_modules.py": [
            "expand_modules"
        ],
        "pylint/lint/pylinter.py": [
            "PyLinter._discover_files",
            "PyLinter._expand_files",
            "PyLinter.set_current_module",
            "PyLinter.get_ast"
        ],
        "pylint/lint/utils.py": []
    },
    "pylint-dev__pylint-7228": {
        "pylint/lint/run.py": [
            "Run"
        ],
        "pylint/constants.py": [],
        "pylint/__init__.py": [
            "run_pylint"
        ]
    },
    "pylint-dev__pylint-7993": {
        "pylint/reporters/text.py": [
            "TextReporter.write_message",
            "TextReporter.handle_message"
        ],
        "pylint/constants.py": [],
        "pylint/lint/pylinter.py": [
            "PyLinter.set_reporter",
            "PyLinter._load_reporter_by_name"
        ]
    },
    "pytest-dev__pytest-11143": {
        "src/_pytest/assertion/rewrite.py": [
            "_rewrite_test",
            "rewrite_asserts",
            "AssertionRewriter.run",
            "AssertionRewriter.is_rewrite_disabled"
        ],
        "src/_pytest/runner.py": [
            "from_call"
        ],
        "src/_pytest/assertion/util.py": []
    },
    "pytest-dev__pytest-11148": {
        "src/_pytest/logging.py": [
            "DatetimeFormatter",
            "ColoredLevelFormatter",
            "PercentStyleMultiline",
            "LogCaptureHandler",
            "LogCaptureFixture",
            "LoggingPlugin",
            "_FileHandler",
            "_LiveLoggingStreamHandler",
            "_LiveLoggingNullHandler"
        ],
        "src/_pytest/config/findpaths.py": [
            "_parse_ini_config",
            "load_config_dict_from_file",
            "locate_config",
            "get_common_ancestor",
            "get_dirs_from_args",
            "determine_setup",
            "is_fs_root"
        ],
        "src/_pytest/config/argparsing.py": [
            "Parser",
            "ArgumentError",
            "Argument",
            "OptionGroup",
            "MyOptionParser",
            "DropShorterLongHelpFormatter"
        ]
    },
    "pytest-dev__pytest-5103": {
        "src/_pytest/assertion/rewrite.py": [
            "AssertionRewritingHook",
            "rewrite_asserts",
            "AssertionRewriter",
            "AssertionRewriter.visit_Assert",
            "AssertionRewriter.visit_Call_35",
            "AssertionRewriter.visit_Call_legacy"
        ],
        "src/_pytest/assertion/util.py": [
            "isiterable",
            "assertrepr_compare",
            "_compare_eq_iterable"
        ],
        "src/_pytest/assertion/__init__.py": []
    },
    "pytest-dev__pytest-5221": {
        "src/_pytest/fixtures.py": [
            "pytest_sessionstart",
            "fixture",
            "yield_fixture",
            "FixtureManager"
        ],
        "src/_pytest/terminal.py": [
            "pytest_addoption",
            "TerminalReporter"
        ],
        "src/_pytest/main.py": [
            "pytest_addoption"
        ]
    },
    "pytest-dev__pytest-5227": {
        "src/_pytest/logging.py": [
            "ColoredLevelFormatter",
            "LogCaptureHandler",
            "LogCaptureFixture",
            "LoggingPlugin",
            "_LiveLoggingStreamHandler"
        ],
        "src/pytest.py": [],
        "doc/en/conf.py": []
    },
    "pytest-dev__pytest-5413": {
        "src/_pytest/python_api.py": [
            "RaisesContext"
        ],
        "src/_pytest/outcomes.py": [
            "OutcomeException"
        ],
        "src/_pytest/reports.py": []
    },
    "pytest-dev__pytest-5495": {
        "src/_pytest/assertion/rewrite.py": [
            "rewrite_asserts",
            "_call_reprcompare"
        ],
        "src/_pytest/assertion/util.py": [
            "assertrepr_compare",
            "_compare_eq_sequence"
        ],
        "src/_pytest/_io/saferepr.py": [
            "saferepr"
        ]
    },
    "pytest-dev__pytest-5692": {
        "src/_pytest/junitxml.py": [
            "LogXML",
            "LogXML.__init__",
            "LogXML.pytest_sessionfinish",
            "LogXML.to_xml"
        ],
        "src/_pytest/reports.py": [
            "TestReport",
            "CollectReport"
        ],
        "src/_pytest/main.py": [
            "pytest_sessionstart",
            "pytest_sessionfinish"
        ]
    },
    "pytest-dev__pytest-6116": {
        "src/_pytest/main.py": [
            "pytest_addoption"
        ],
        "src/_pytest/terminal.py": [
            "pytest_addoption"
        ],
        "src/_pytest/helpconfig.py": [
            "pytest_addoption"
        ]
    },
    "pytest-dev__pytest-7168": {
        "src/_pytest/python.py": [
            "Function.repr_failure"
        ],
        "src/_pytest/reports.py": [
            "TestReport.from_item_and_call"
        ],
        "src/_pytest/_io/saferepr.py": [
            "saferepr",
            "SafeRepr.repr",
            "SafeRepr.repr_instance"
        ]
    },
    "pytest-dev__pytest-7220": {
        "src/_pytest/fixtures.py": [
            "FixtureRequest"
        ],
        "src/_pytest/monkeypatch.py": [
            "MonkeyPatch"
        ],
        "src/_pytest/nodes.py": [
            "get_fslocation_from_item",
            "Node"
        ]
    },
    "pytest-dev__pytest-7373": {
        "src/_pytest/mark/evaluate.py": [
            "cached_eval",
            "MarkEvaluator.istrue",
            "MarkEvaluator._istrue"
        ],
        "src/_pytest/mark/structures.py": [
            "Mark",
            "MarkDecorator"
        ],
        "src/_pytest/mark/expression.py": []
    },
    "pytest-dev__pytest-7432": {
        "src/_pytest/skipping.py": [
            "pytest_runtest_makereport"
        ],
        "src/_pytest/reports.py": [
            "TestReport"
        ],
        "src/_pytest/runner.py": [
            "pytest_runtest_makereport"
        ]
    },
    "pytest-dev__pytest-7490": {
        "src/_pytest/skipping.py": [
            "evaluate_xfail_marks",
            "pytest_runtest_call",
            "pytest_runtest_makereport"
        ],
        "src/_pytest/nodes.py": [
            "Node.add_marker"
        ],
        "src/_pytest/mark/structures.py": [
            "Mark",
            "MarkDecorator"
        ]
    },
    "pytest-dev__pytest-8365": {
        "src/_pytest/tmpdir.py": [
            "TempPathFactory",
            "TempdirFactory",
            "get_user",
            "pytest_configure",
            "tmpdir_factory",
            "tmp_path_factory",
            "_mk_tmp",
            "tmpdir",
            "tmp_path"
        ],
        "src/_pytest/pathlib.py": [
            "ensure_reset_dir",
            "make_numbered_dir",
            "make_numbered_dir_with_cleanup"
        ],
        "src/_pytest/main.py": [
            "validate_basetemp"
        ]
    },
    "pytest-dev__pytest-8906": {
        "src/_pytest/skipping.py": [
            "pytest_runtest_setup",
            "pytest_runtest_call",
            "pytest_runtest_makereport"
        ],
        "src/_pytest/outcomes.py": [
            "Skipped",
            "skip"
        ],
        "doc/en/example/multipython.py": []
    },
    "pytest-dev__pytest-9359": {
        "src/_pytest/python.py": [
            "pytest_pyfunc_call",
            "Function"
        ],
        "src/_pytest/assertion/rewrite.py": [
            "AssertionRewritingHook",
            "rewrite_asserts",
            "AssertionRewriter.visit_Assert"
        ],
        "src/_pytest/assertion/util.py": [
            "format_explanation"
        ]
    },
    "scikit-learn__scikit-learn-10297": {
        "sklearn/linear_model/ridge.py": [
            "RidgeClassifierCV",
            "RidgeClassifierCV.__init__",
            "RidgeClassifierCV.fit",
            "_BaseRidgeCV",
            "_BaseRidgeCV.__init__",
            "_BaseRidgeCV.fit"
        ],
        "sklearn/linear_model/__init__.py": [],
        "sklearn/model_selection/_validation.py": [
            "cross_val_predict",
            "_fit_and_predict"
        ]
    },
    "scikit-learn__scikit-learn-10508": {
        "sklearn/preprocessing/label.py": [
            "LabelEncoder",
            "LabelEncoder.transform"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "column_or_1d"
        ],
        "sklearn/preprocessing/data.py": []
    },
    "scikit-learn__scikit-learn-10949": {
        "sklearn/exceptions.py": [
            "DataConversionWarning"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "as_float_array"
        ],
        "sklearn/utils/estimator_checks.py": [
            "check_dtype_object"
        ]
    },
    "scikit-learn__scikit-learn-11040": {
        "sklearn/neighbors/base.py": [
            "NeighborsBase.__init__",
            "KNeighborsMixin.kneighbors",
            "KNeighborsMixin.kneighbors_graph"
        ],
        "sklearn/neighbors/regression.py": [
            "KNeighborsRegressor",
            "RadiusNeighborsRegressor"
        ],
        "sklearn/neighbors/classification.py": [
            "KNeighborsClassifier",
            "RadiusNeighborsClassifier"
        ]
    },
    "scikit-learn__scikit-learn-11281": {
        "sklearn/mixture/gaussian_mixture.py": [
            "GaussianMixture"
        ],
        "sklearn/mixture/bayesian_mixture.py": [
            "BayesianGaussianMixture"
        ],
        "sklearn/mixture/gmm.py": [
            "_GMMBase",
            "GMM"
        ]
    },
    "scikit-learn__scikit-learn-12471": {
        "sklearn/preprocessing/_encoders.py": [
            "OneHotEncoder",
            "OneHotEncoder.transform",
            "OneHotEncoder._transform_new",
            "OneHotEncoder._legacy_transform"
        ],
        "sklearn/preprocessing/data.py": [
            "MinMaxScaler",
            "StandardScaler",
            "MaxAbsScaler",
            "RobustScaler",
            "PolynomialFeatures",
            "Normalizer",
            "Binarizer",
            "KernelCenterer",
            "QuantileTransformer",
            "PowerTransformer"
        ],
        "sklearn/preprocessing/__init__.py": []
    },
    "scikit-learn__scikit-learn-13142": {
        "sklearn/mixture/gaussian_mixture.py": [
            "GaussianMixture"
        ],
        "sklearn/mixture/base.py": [
            "BaseMixture.fit",
            "BaseMixture.fit_predict",
            "BaseMixture.predict"
        ],
        "sklearn/mixture/__init__.py": []
    },
    "scikit-learn__scikit-learn-13241": {
        "sklearn/decomposition/kernel_pca.py": [
            "KernelPCA",
            "KernelPCA.fit_transform",
            "KernelPCA._fit_transform"
        ],
        "sklearn/decomposition/pca.py": [
            "PCA",
            "PCA.fit_transform"
        ],
        "sklearn/decomposition/incremental_pca.py": [
            "IncrementalPCA",
            "IncrementalPCA.fit"
        ]
    },
    "scikit-learn__scikit-learn-13439": {
        "sklearn/pipeline.py": [
            "Pipeline"
        ],
        "sklearn/__init__.py": [],
        "scikit-learn/setup.py": []
    },
    "scikit-learn__scikit-learn-13496": {
        "sklearn/ensemble/iforest.py": [
            "IsolationForest"
        ],
        "sklearn/ensemble/forest.py": [
            "BaseForest",
            "RandomForestClassifier",
            "RandomForestRegressor",
            "ExtraTreesClassifier",
            "ExtraTreesRegressor",
            "RandomTreesEmbedding"
        ],
        "sklearn/ensemble/bagging.py": [
            "BaseBagging",
            "BaggingClassifier",
            "BaggingRegressor"
        ]
    },
    "scikit-learn__scikit-learn-13497": {
        "sklearn/feature_selection/mutual_info_.py": [
            "_estimate_mi",
            "mutual_info_regression",
            "mutual_info_classif"
        ],
        "sklearn/utils/estimator_checks.py": [],
        "sklearn/impute.py": []
    },
    "scikit-learn__scikit-learn-13584": {
        "sklearn/utils/_pprint.py": [
            "_safe_repr",
            "_changed_params",
            "_EstimatorPrettyPrinter"
        ],
        "sklearn/linear_model/logistic.py": [
            "LogisticRegressionCV"
        ],
        "sklearn/utils/__init__.py": []
    },
    "scikit-learn__scikit-learn-13779": {
        "sklearn/ensemble/voting.py": [
            "_parallel_fit_estimator",
            "_BaseVoting.fit",
            "VotingClassifier.fit",
            "VotingRegressor.fit",
            "_BaseVoting.set_params"
        ],
        "sklearn/utils/validation.py": [],
        "sklearn/ensemble/__init__.py": []
    },
    "scikit-learn__scikit-learn-14087": {
        "sklearn/linear_model/logistic.py": [
            "LogisticRegressionCV",
            "LogisticRegressionCV.fit"
        ],
        "sklearn/model_selection/_validation.py": [
            "cross_val_score",
            "cross_val_predict",
            "_fit_and_score",
            "_fit_and_predict"
        ],
        "sklearn/utils/validation.py": []
    },
    "scikit-learn__scikit-learn-14092": {
        "sklearn/neighbors/nca.py": [
            "NeighborhoodComponentsAnalysis"
        ],
        "sklearn/utils/validation.py": [
            "check_scalar"
        ],
        "sklearn/model_selection/_search.py": [
            "GridSearchCV"
        ]
    },
    "scikit-learn__scikit-learn-14894": {
        "sklearn/svm/base.py": [
            "BaseLibSVM._sparse_fit",
            "BaseLibSVM.fit",
            "BaseLibSVM._validate_targets",
            "BaseLibSVM._warn_from_fit_status",
            "BaseLibSVM._dense_fit",
            "BaseLibSVM._sparse_predict",
            "BaseLibSVM._compute_kernel",
            "BaseLibSVM._decision_function",
            "BaseLibSVM._dense_decision_function",
            "BaseLibSVM._sparse_decision_function",
            "BaseLibSVM._validate_for_predict",
            "BaseLibSVM.coef_",
            "BaseLibSVM._get_coef",
            "BaseLibSVM.n_support_"
        ],
        "sklearn/svm/classes.py": [
            "SVR",
            "SVR.fit"
        ],
        "sklearn/svm/__init__.py": []
    },
    "scikit-learn__scikit-learn-14983": {
        "sklearn/model_selection/_split.py": [
            "RepeatedKFold",
            "RepeatedStratifiedKFold"
        ],
        "sklearn/utils/_pprint.py": [
            "_EstimatorPrettyPrinter._pprint_estimator"
        ],
        "sklearn/model_selection/__init__.py": []
    },
    "scikit-learn__scikit-learn-15512": {
        "sklearn/cluster/_affinity_propagation.py": [
            "affinity_propagation",
            "AffinityPropagation"
        ],
        "sklearn/cluster/__init__.py": [],
        "sklearn/cluster/setup.py": []
    },
    "scikit-learn__scikit-learn-15535": {
        "sklearn/metrics/cluster/_supervised.py": [
            "mutual_info_score",
            "check_clusterings",
            "contingency_matrix"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "column_or_1d",
            "as_float_array"
        ],
        "sklearn/metrics/__init__.py": []
    },
    "scikit-learn__scikit-learn-25500": {
        "sklearn/calibration.py": [
            "CalibratedClassifierCV",
            "_fit_classifier_calibrator_pair",
            "_get_prediction_method",
            "_compute_predictions",
            "_fit_calibrator",
            "_CalibratedClassifier"
        ],
        "sklearn/_config.py": [
            "set_config",
            "config_context"
        ],
        "sklearn/isotonic.py": [
            "IsotonicRegression"
        ]
    },
    "scikit-learn__scikit-learn-25570": {
        "sklearn/compose/_column_transformer.py": [
            "ColumnTransformer._iter",
            "ColumnTransformer._add_prefix_for_feature_names_out",
            "ColumnTransformer._hstack",
            "ColumnTransformer.fit_transform"
        ],
        "sklearn/utils/_set_output.py": [
            "_wrap_in_pandas_container"
        ],
        "sklearn/base.py": []
    },
    "scikit-learn__scikit-learn-25638": {
        "sklearn/utils/multiclass.py": [
            "unique_labels",
            "type_of_target"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "column_or_1d"
        ],
        "sklearn/utils/__init__.py": []
    },
    "scikit-learn__scikit-learn-25747": {
        "sklearn/pipeline.py": [
            "FeatureUnion",
            "FeatureUnion.fit_transform",
            "FeatureUnion.transform",
            "FeatureUnion._hstack"
        ],
        "sklearn/compose/_column_transformer.py": [
            "ColumnTransformer.fit_transform",
            "ColumnTransformer.transform",
            "ColumnTransformer._hstack"
        ],
        "sklearn/compose/__init__.py": []
    },
    "sphinx-doc__sphinx-10325": {
        "sphinx/ext/autodoc/directive.py": [
            "AutodocDirective"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "inherited_members_option",
            "ModuleDocumenter",
            "ClassDocumenter"
        ],
        "sphinx/ext/autodoc/importer.py": []
    },
    "sphinx-doc__sphinx-10451": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints",
            "insert_field_list",
            "modify_field_list",
            "augment_descriptions_with_types",
            "setup"
        ],
        "sphinx/ext/autodoc/directive.py": [
            "DummyOptionSpec",
            "DocumenterBridge",
            "process_documenter_options",
            "parse_generated_content",
            "AutodocDirective"
        ],
        "sphinx/util/docstrings.py": [
            "separate_metadata",
            "extract_metadata",
            "prepare_docstring",
            "prepare_commentdoc"
        ]
    },
    "sphinx-doc__sphinx-11445": {
        "sphinx/environment/__init__.py": [
            "BuildEnvironment"
        ],
        "sphinx/parsers.py": [
            "RSTParser"
        ],
        "sphinx/application.py": [
            "Sphinx"
        ]
    },
    "sphinx-doc__sphinx-7686": {
        "sphinx/ext/autosummary/generate.py": [
            "generate_autosummary_content",
            "generate_autosummary_docs"
        ],
        "sphinx/ext/autosummary/__init__.py": [
            "Autosummary",
            "get_documenter"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "get_module_members",
            "get_object_members"
        ]
    },
    "sphinx-doc__sphinx-7738": {
        "sphinx/ext/napoleon/docstring.py": [
            "GoogleDocstring",
            "NumpyDocstring"
        ],
        "sphinx/ext/napoleon/__init__.py": [
            "_process_docstring"
        ],
        "sphinx/util/docstrings.py": [
            "prepare_docstring"
        ]
    },
    "sphinx-doc__sphinx-7975": {
        "sphinx/environment/adapters/indexentries.py": [
            "IndexEntries"
        ],
        "sphinx/writers/html.py": [
            "HTMLTranslator"
        ],
        "sphinx/environment/collectors/indexentries.py": [
            "IndexEntriesCollector"
        ]
    },
    "sphinx-doc__sphinx-8273": {
        "sphinx/builders/manpage.py": [
            "ManualPageBuilder"
        ],
        "sphinx/writers/manpage.py": [
            "ManualPageWriter",
            "ManualPageTranslator"
        ],
        "sphinx/util/fileutil.py": [
            "copy_asset_file",
            "copy_asset"
        ]
    },
    "sphinx-doc__sphinx-8282": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints",
            "insert_field_list",
            "modify_field_list",
            "setup"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "Documenter",
            "FunctionDocumenter",
            "ClassDocumenter"
        ],
        "sphinx/ext/autodoc/directive.py": [
            "AutodocDirective"
        ]
    },
    "sphinx-doc__sphinx-8435": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints",
            "insert_field_list",
            "modify_field_list",
            "setup"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "identity",
            "members_option",
            "members_set_option",
            "exclude_members_option",
            "inherited_members_option",
            "member_order_option",
            "annotation_option",
            "bool_option",
            "merge_special_members_option",
            "merge_members_option",
            "cut_lines",
            "between",
            "Options",
            "ObjectMember",
            "Documenter",
            "ModuleDocumenter",
            "ModuleLevelDocumenter",
            "ClassLevelDocumenter",
            "DocstringSignatureMixin",
            "DocstringStripSignatureMixin",
            "FunctionDocumenter",
            "SingledispatchFunctionDocumenter",
            "DecoratorDocumenter",
            "ClassDocumenter",
            "ExceptionDocumenter",
            "DataDocumenter",
            "DataDeclarationDocumenter",
            "GenericAliasDocumenter",
            "TypeVarDocumenter",
            "MethodDocumenter",
            "SingledispatchMethodDocumenter"
        ],
        "sphinx/ext/autodoc/directive.py": []
    },
    "sphinx-doc__sphinx-8474": {
        "sphinx/builders/latex/__init__.py": [
            "LaTeXBuilder"
        ],
        "sphinx/builders/latex/nodes.py": [
            "captioned_literal_block",
            "footnotemark",
            "footnotetext",
            "math_reference",
            "thebibliography"
        ],
        "sphinx/builders/latex/util.py": [
            "ExtBabel"
        ]
    },
    "sphinx-doc__sphinx-8506": {
        "sphinx/directives/patches.py": [
            "Code",
            "MathDirective",
            "setup"
        ],
        "sphinx/util/rst.py": [],
        "sphinx/parsers.py": [
            "RSTParser",
            "setup"
        ]
    },
    "sphinx-doc__sphinx-8595": {
        "sphinx/ext/autodoc/__init__.py": [
            "ModuleDocumenter",
            "Documenter.get_object_members",
            "Documenter.filter_members"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "import_object",
            "get_object_members"
        ],
        "sphinx/ext/autodoc/directive.py": [
            "AutodocDirective"
        ]
    },
    "sphinx-doc__sphinx-8627": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints",
            "insert_field_list",
            "modify_field_list",
            "setup"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "mangle",
            "unmangle",
            "import_module",
            "import_object",
            "get_module_members",
            "_getmro",
            "_getannotations",
            "get_object_members",
            "get_class_members"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "identity",
            "_All",
            "_Empty",
            "members_option",
            "members_set_option",
            "exclude_members_option",
            "inherited_members_option",
            "member_order_option",
            "annotation_option",
            "bool_option",
            "merge_special_members_option",
            "merge_members_option",
            "cut_lines",
            "between",
            "Options",
            "ObjectMember",
            "Documenter",
            "ModuleDocumenter",
            "ModuleLevelDocumenter",
            "ClassLevelDocumenter",
            "DocstringSignatureMixin",
            "DocstringStripSignatureMixin",
            "FunctionDocumenter",
            "DecoratorDocument"
        ]
    },
    "sphinx-doc__sphinx-8713": {
        "sphinx/ext/napoleon/docstring.py": [
            "_parse_other_parameters_section",
            "_parse_parameters_section"
        ],
        "sphinx/ext/napoleon/__init__.py": [
            "Config"
        ],
        "sphinx/config.py": []
    },
    "sphinx-doc__sphinx-8721": {
        "sphinx/ext/viewcode.py": [
            "collect_pages",
            "setup",
            "should_generate_module_page"
        ],
        "sphinx/builders/epub3.py": [
            "Epub3Builder",
            "setup"
        ],
        "sphinx/builders/_epub_base.py": [
            "EpubBuilder"
        ]
    },
    "sphinx-doc__sphinx-8801": {
        "sphinx/ext/autodoc/__init__.py": [
            "Documenter",
            "ClassDocumenter",
            "AttributeDocumenter"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "get_class_members"
        ],
        "sphinx/ext/autodoc/directive.py": []
    },
    "sympy__sympy-11400": {
        "sympy/printing/ccode.py": [
            "CCodePrinter._print_Function"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter._print_Function"
        ],
        "sympy/functions/elementary/miscellaneous.py": [
            "IdentityFunction",
            "MinMaxBase",
            "Max",
            "Min"
        ]
    },
    "sympy__sympy-11870": {
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "exptrigsimp",
            "_trigsimp",
            "__trigsimp"
        ],
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "sin",
            "sinc"
        ]
    },
    "sympy__sympy-11897": {
        "sympy/printing/latex.py": [
            "LatexPrinter",
            "latex"
        ],
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter",
            "pretty"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-12171": {
        "sympy/printing/mathematica.py": [
            "MCodePrinter._print_Derivative",
            "MCodePrinter._print_Float"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-12236": {
        "sympy/polys/partfrac.py": [
            "apart",
            "apart_undetermined_coeffs",
            "apart_full_decomposition",
            "apart_list",
            "apart_list_full_decomposition",
            "assemble_partfrac_list"
        ],
        "sympy/integrals/rationaltools.py": [],
        "sympy/integrals/integrals.py": []
    },
    "sympy__sympy-12419": {
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixExpr",
            "Identity",
            "ZeroMatrix"
        ],
        "sympy/assumptions/refine.py": [
            "refine",
            "refine_MatMul"
        ],
        "sympy/matrices/expressions/matmul.py": [
            "MatMul"
        ]
    },
    "sympy__sympy-12454": {
        "sympy/matrices/matrices.py": [
            "MatrixProperties.is_upper",
            "MatrixProperties._eval_is_upper_hessenberg",
            "MatrixShaping.extract",
            "a2idx"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix.__getitem__"
        ],
        "sympy/matrices/immutable.py": []
    },
    "sympy__sympy-12481": {
        "sympy/combinatorics/permutations.py": [
            "Permutation",
            "Permutation.__new__",
            "Permutation._af_new",
            "Permutation.cyclic_form",
            "Permutation.full_cyclic_form",
            "Permutation.__mul__",
            "Permutation.__rmul__",
            "Permutation.rmul",
            "Permutation.rmul_with_af"
        ],
        "sympy/combinatorics/__init__.py": [],
        "sympy/combinatorics/perm_groups.py": []
    },
    "sympy__sympy-13031": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockMatrix",
            "BlockDiagMatrix"
        ],
        "sympy/matrices/matrices.py": [
            "MatrixBase.hstack",
            "MatrixBase.vstack"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix",
            "MutableDenseMatrix"
        ]
    },
    "sympy__sympy-13043": {
        "sympy/integrals/intpoly.py": [
            "decompose",
            "polytope_integrate",
            "main_integrate",
            "integration_reduction",
            "left_integral",
            "integration_reduction_dynamic",
            "gradient_terms",
            "hyperplane_parameters",
            "best_origin",
            "clockwise_sort",
            "norm",
            "intersection",
            "is_vertex",
            "plot_polytope",
            "plot_polynomial"
        ],
        "sympy/integrals/benchmarks/bench_integrate.py": [
            "bench_integrate_sin",
            "bench_integrate_x1sin",
            "bench_integrate_x2sin",
            "bench_integrate_x3sin"
        ],
        "sympy/integrals/__init__.py": []
    },
    "sympy__sympy-13146": {
        "sympy/core/expr.py": [
            "Expr.simplify"
        ],
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/power.py": [
            "Pow"
        ]
    },
    "sympy__sympy-13177": {
        "sympy/core/mod.py": [
            "Mod.eval"
        ],
        "sympy/core/power.py": [
            "Pow.base",
            "Pow.exp"
        ],
        "sympy/core/expr.py": [
            "Expr.__mod__",
            "Expr.__rmod__"
        ]
    },
    "sympy__sympy-13437": {
        "sympy/functions/combinatorial/numbers.py": [
            "bell"
        ],
        "sympy/series/limits.py": [
            "limit",
            "heuristics",
            "Limit"
        ],
        "sympy/series/limitseq.py": [
            "_limit_inf",
            "limit_seq"
        ]
    },
    "sympy__sympy-13471": {
        "sympy/core/numbers.py": [
            "Float",
            "Float.__new__",
            "Float.__getnewargs__",
            "Float.__getstate__"
        ],
        "sympy/core/compatibility.py": [],
        "sympy/core/sympify.py": []
    },
    "sympy__sympy-13480": {
        "sympy/functions/elementary/hyperbolic.py": [
            "coth",
            "coth.eval"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "cot",
            "cot.eval"
        ],
        "sympy/functions/elementary/__init__.py": []
    },
    "sympy__sympy-13647": {
        "sympy/matrices/dense.py": [
            "MutableDenseMatrix.col_insert"
        ],
        "sympy/matrices/common.py": [
            "MatrixShaping.col_insert",
            "MatrixShaping._eval_col_insert"
        ],
        "sympy/matrices/matrices.py": []
    },
    "sympy__sympy-13773": {
        "sympy/matrices/expressions/matmul.py": [
            "MatMul.__new__",
            "newmul"
        ],
        "sympy/matrices/matrices.py": [
            "MatrixBase.__matmul__",
            "MatrixBase.__rmatmul__"
        ],
        "sympy/matrices/common.py": []
    },
    "sympy__sympy-13895": {
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/expr.py": [
            "Expr._eval_power",
            "Expr.simplify"
        ],
        "sympy/core/power.py": [
            "Pow"
        ]
    },
    "sympy__sympy-13915": {
        "sympy/core/expr.py": [
            "Expr.subs",
            "Expr._eval_subs",
            "Expr._eval_as_leading_term",
            "Expr.limit"
        ],
        "sympy/core/basic.py": [
            "Basic.subs",
            "Basic._subs",
            "Basic._eval_subs",
            "Basic.limit"
        ],
        "sympy/core/evaluate.py": []
    },
    "sympy__sympy-13971": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_SeqFormula"
        ],
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_SeqFormula"
        ],
        "sympy/printing/str.py": [
            "StrPrinter._print_SeqFormula"
        ]
    },
    "sympy__sympy-14024": {
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/expr.py": [
            "Expr._eval_power",
            "Expr.simplify"
        ],
        "sympy/core/power.py": [
            "Pow"
        ]
    },
    "sympy__sympy-14308": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_BasisDependent",
            "PrettyPrinter._print_Mul"
        ],
        "sympy/printing/latex.py": [
            "LatexPrinter._print_BasisDependent",
            "LatexPrinter._print_Mul"
        ],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ]
    },
    "sympy__sympy-14317": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_Poly"
        ],
        "sympy/printing/str.py": [
            "StrPrinter._print_Poly"
        ],
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Poly"
        ]
    },
    "sympy__sympy-14396": {
        "sympy/polys/polyoptions.py": [
            "Domain",
            "Domain.preprocess"
        ],
        "sympy/polys/polytools.py": [
            "Poly.__new__"
        ],
        "sympy/polys/polyerrors.py": [
            "OptionError"
        ]
    },
    "sympy__sympy-14774": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_Function",
            "latex"
        ],
        "sympy/printing/printer.py": [],
        "sympy/printing/preview.py": []
    },
    "sympy__sympy-14817": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_MatAdd"
        ],
        "sympy/matrices/expressions/matadd.py": [
            "MatAdd"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixSymbol"
        ]
    },
    "sympy__sympy-15011": {
        "sympy/core/symbol.py": [
            "symbols",
            "Symbol.__new__",
            "Symbol.__new_stage2__",
            "Symbol.as_dummy"
        ],
        "sympy/utilities/lambdify.py": [
            "lambdify",
            "_EvaluatorPrinter._preprocess",
            "_EvaluatorPrinter._subexpr"
        ],
        "sympy/printing/pycode.py": [
            "pycode",
            "PythonCodePrinter"
        ]
    },
    "sympy__sympy-15308": {
        "sympy/printing/latex.py": [
            "LatexPrinter",
            "LatexPrinter._print_Trace",
            "latex"
        ],
        "sympy/matrices/expressions/trace.py": [
            "Trace",
            "trace"
        ],
        "sympy/matrices/expressions/matexpr.py": []
    },
    "sympy__sympy-15345": {
        "sympy/printing/mathematica.py": [
            "MCodePrinter._print_Function",
            "mathematica_code"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter"
        ],
        "sympy/printing/printer.py": [
            "Printer"
        ]
    },
    "sympy__sympy-15346": {
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/simplify/trigsimp.py": [
            "trigsimp"
        ],
        "sympy/core/expr.py": [
            "Expr.simplify",
            "Expr.trigsimp"
        ]
    },
    "sympy__sympy-15609": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_Indexed",
            "LatexPrinter._print_IndexedBase",
            "LatexPrinter._print_Sum"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixElement",
            "MatrixSymbol"
        ],
        "sympy/tensor/indexed.py": [
            "Indexed",
            "IndexedBase"
        ]
    },
    "sympy__sympy-15678": {
        "sympy/geometry/util.py": [
            "idiff"
        ],
        "sympy/core/relational.py": [
            "Equality"
        ],
        "sympy/core/function.py": [
            "Function"
        ]
    },
    "sympy__sympy-16106": {
        "sympy/printing/mathml.py": [
            "MathMLContentPrinter._print_Basic",
            "MathMLPresentationPrinter._print_Basic"
        ],
        "sympy/tensor/indexed.py": [
            "Indexed",
            "IndexedBase"
        ],
        "sympy/printing/printer.py": [
            "Printer"
        ]
    },
    "sympy__sympy-16281": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Product"
        ],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ],
        "sympy/printing/str.py": []
    },
    "sympy__sympy-16503": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Sum",
            "PrettyPrinter._print_Add"
        ],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ],
        "sympy/printing/pretty/pretty_symbology.py": []
    },
    "sympy__sympy-16792": {
        "sympy/utilities/autowrap.py": [
            "autowrap",
            "CythonCodeWrapper",
            "CythonCodeWrapper._prototype_arg",
            "CythonCodeWrapper._declare_arg",
            "CythonCodeWrapper._prepare_files"
        ],
        "sympy/codegen/cnodes.py": [
            "struct"
        ],
        "sympy/codegen/algorithms.py": []
    },
    "sympy__sympy-16988": {
        "sympy/sets/handlers/intersection.py": [
            "intersection_sets"
        ],
        "sympy/sets/sets.py": [
            "Intersection",
            "Set.intersection",
            "Set.intersect"
        ],
        "sympy/sets/conditionset.py": [
            "ConditionSet"
        ]
    },
    "sympy__sympy-17022": {
        "sympy/utilities/lambdify.py": [
            "lambdify"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "Identity"
        ],
        "sympy/printing/python.py": [
            "PythonPrinter"
        ]
    },
    "sympy__sympy-17139": {
        "sympy/simplify/fu.py": [
            "TR6",
            "_TR56",
            "_f"
        ],
        "sympy/simplify/simplify.py": [
            "bottom_up"
        ],
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "futrig",
            "_futrig"
        ]
    },
    "sympy__sympy-17630": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockMatrix._blockmul",
            "BlockMatrix.colblocksizes",
            "block_collapse",
            "bc_matmul"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "ZeroMatrix"
        ],
        "sympy/matrices/expressions/matmul.py": []
    },
    "sympy__sympy-17655": {
        "sympy/geometry/point.py": [
            "Point.__add__",
            "Point.__mul__",
            "Point._normalize_dimension"
        ],
        "sympy/geometry/exceptions.py": [
            "GeometryError"
        ],
        "sympy/core/mul.py": [
            "Mul"
        ]
    },
    "sympy__sympy-18057": {
        "sympy/core/expr.py": [
            "Expr.__eq__"
        ],
        "sympy/core/sympify.py": [
            "sympify"
        ],
        "sympy/core/relational.py": []
    },
    "sympy__sympy-18087": {
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "trigsimp_groebner",
            "trigsimp_old",
            "_trigsimp",
            "__trigsimp"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "TrigonometricFunction",
            "sin",
            "cos",
            "tan",
            "cot",
            "ReciprocalTrigonometricFunction",
            "sec",
            "csc"
        ],
        "sympy/simplify/simplify.py": [
            "simplify"
        ]
    },
    "sympy__sympy-18189": {
        "sympy/solvers/diophantine.py": [
            "diophantine",
            "merge_solution",
            "diop_solve",
            "classify_diop"
        ],
        "sympy/core/expr.py": [
            "Expr.sort_key"
        ],
        "sympy/core/symbol.py": [
            "Symbol.sort_key"
        ]
    },
    "sympy__sympy-18199": {
        "sympy/ntheory/residue_ntheory.py": [
            "nthroot_mod"
        ],
        "sympy/ntheory/modular.py": [],
        "sympy/ntheory/__init__.py": []
    },
    "sympy__sympy-18532": {
        "sympy/core/expr.py": [
            "Expr.atoms"
        ],
        "sympy/core/basic.py": [
            "Basic.atoms"
        ],
        "sympy/core/function.py": []
    },
    "sympy__sympy-18621": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockDiagMatrix",
            "BlockDiagMatrix.__new__",
            "BlockDiagMatrix.blocks",
            "BlockDiagMatrix._entry"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix._handle_creation_inputs"
        ],
        "sympy/matrices/matrices.py": []
    },
    "sympy__sympy-18698": {
        "sympy/polys/sqfreetools.py": [
            "dup_sqf_list",
            "dmp_sqf_list"
        ],
        "sympy/polys/polytools.py": [
            "Poly.sqf_list",
            "sqf_list"
        ],
        "sympy/polys/polyclasses.py": [
            "DMP.sqf_list"
        ]
    },
    "sympy__sympy-18835": {
        "sympy/utilities/iterables.py": [
            "uniq"
        ],
        "sympy/utilities/runtests.py": [],
        "sympy/utilities/decorator.py": []
    },
    "sympy__sympy-19007": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockMatrix._entry"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixExpr.__getitem__",
            "MatrixElement"
        ],
        "sympy/matrices/expressions/matadd.py": []
    },
    "sympy__sympy-19254": {
        "sympy/polys/factortools.py": [
            "dup_zz_mignotte_bound",
            "dmp_zz_mignotte_bound"
        ],
        "sympy/polys/densearith.py": [
            "dup_max_norm",
            "dmp_max_norm"
        ],
        "sympy/polys/polyutils.py": [
            "_nsort",
            "_sort_gens",
            "_unify_gens",
            "_analyze_gens",
            "_sort_factors",
            "_not_a_coeff",
            "_parallel_dict_from_expr_if_gens",
            "_parallel_dict_from_expr_no_gens",
            "_dict_from_expr_if_gens",
            "_dict_from_expr_no_gens",
            "parallel_dict_from_expr",
            "_parallel_dict_from_expr",
            "dict_from_expr",
            "_dict_from_expr",
            "expr_from_dict",
            "_dict_reorder",
            "PicklableWithSlots"
        ]
    },
    "sympy__sympy-19487": {
        "sympy/core/function.py": [
            "Function"
        ],
        "sympy/core/expr.py": [
            "Expr"
        ],
        "sympy/functions/elementary/miscellaneous.py": [
            "MinMaxBase"
        ]
    },
    "sympy__sympy-20049": {
        "sympy/physics/vector/point.py": [
            "Point.vel",
            "Point.set_vel",
            "Point.set_pos"
        ],
        "sympy/physics/vector/frame.py": [
            "ReferenceFrame"
        ],
        "sympy/physics/vector/functions.py": [
            "time_derivative"
        ]
    },
    "sympy__sympy-20154": {
        "sympy/utilities/iterables.py": [
            "partitions"
        ],
        "sympy/combinatorics/partitions.py": [],
        "sympy/combinatorics/util.py": []
    },
    "sympy__sympy-20212": {
        "sympy/core/power.py": [
            "Pow"
        ],
        "sympy/core/numbers.py": [
            "Zero",
            "ComplexInfinity"
        ],
        "sympy/core/__init__.py": []
    },
    "sympy__sympy-20322": {
        "sympy/core/sympify.py": [
            "sympify"
        ],
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/expr.py": [
            "Expr",
            "UnevaluatedExpr"
        ]
    },
    "sympy__sympy-20442": {
        "sympy/physics/units/quantities.py": [
            "Quantity.convert_to"
        ],
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem.get_quantity_dimension",
            "UnitSystem.get_quantity_scale_factor",
            "UnitSystem.get_dimensional_expr",
            "UnitSystem._collect_factor_and_dimension"
        ],
        "sympy/physics/units/util.py": [
            "convert_to",
            "_get_conversion_matrix_for_expr",
            "quantity_simplify",
            "check_dimensions"
        ]
    },
    "sympy__sympy-20590": {
        "sympy/core/symbol.py": [
            "Symbol",
            "Dummy",
            "Wild"
        ],
        "sympy/core/basic.py": [
            "Basic",
            "Atom"
        ],
        "sympy/core/__init__.py": []
    },
    "sympy__sympy-20639": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Pow"
        ],
        "sympy/printing/latex.py": [
            "LatexPrinter._print_Pow"
        ],
        "sympy/printing/str.py": [
            "StrPrinter._print_Pow"
        ]
    },
    "sympy__sympy-21055": {
        "sympy/assumptions/refine.py": [
            "refine",
            "refine_abs",
            "refine_Pow",
            "refine_atan2",
            "refine_re",
            "refine_im",
            "_refine_reim",
            "refine_sign",
            "refine_matrixelement"
        ],
        "sympy/assumptions/ask.py": [
            "AssumptionKeys",
            "ask",
            "ask_full_inference",
            "register_handler",
            "remove_handler",
            "single_fact_lookup",
            "compute_known_facts",
            "get_known_facts_keys",
            "get_known_facts"
        ],
        "sympy/assumptions/predicates/order.py": [
            "PositivePredicate"
        ]
    },
    "sympy__sympy-21171": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_SingularityFunction",
            "LatexPrinter._print_Function",
            "LatexPrinter._print_Pow"
        ],
        "sympy/functions/special/singularity_functions.py": [
            "SingularityFunction"
        ],
        "sympy/printing/printer.py": [
            "Printer"
        ]
    },
    "sympy__sympy-21379": {
        "sympy/core/expr.py": [
            "Expr.as_poly",
            "Expr.is_polynomial",
            "Expr._eval_is_polynomial"
        ],
        "sympy/core/assumptions.py": [
            "assumptions",
            "check_assumptions"
        ],
        "sympy/functions/elementary/piecewise.py": [
            "Piecewise._eval_subs",
            "Piecewise._eval_is_polynomial",
            "Piecewise.is_polynomial"
        ]
    },
    "sympy__sympy-21612": {
        "sympy/parsing/latex/_parse_latex_antlr.py": [
            "parse_latex",
            "convert_frac"
        ],
        "sympy/parsing/latex/__init__.py": [
            "parse_latex"
        ],
        "sympy/parsing/latex/errors.py": []
    },
    "sympy__sympy-21614": {
        "sympy/core/kind.py": [
            "KindDispatcher"
        ],
        "sympy/core/function.py": [
            "Derivative",
            "Derivative.__new__"
        ],
        "sympy/core/expr.py": [
            "Expr"
        ]
    },
    "sympy__sympy-21627": {
        "sympy/core/expr.py": [
            "Expr"
        ],
        "sympy/functions/elementary/hyperbolic.py": [
            "cosh",
            "acosh"
        ],
        "sympy/core/sympify.py": [
            "sympify"
        ]
    },
    "sympy__sympy-21847": {
        "sympy/polys/monomials.py": [
            "itermonomials",
            "monomial_count",
            "monomial_deg"
        ],
        "sympy/polys/polytools.py": [
            "total_degree"
        ],
        "sympy/polys/polyutils.py": []
    },
    "sympy__sympy-22005": {
        "sympy/solvers/polysys.py": [
            "solve_poly_system",
            "_solve_reduced_system"
        ],
        "sympy/solvers/solveset.py": [],
        "sympy/solvers/solvers.py": []
    },
    "sympy__sympy-22714": {
        "sympy/core/sympify.py": [
            "sympify"
        ],
        "sympy/geometry/point.py": [
            "Point",
            "Point2D"
        ],
        "sympy/parsing/sympy_parser.py": [
            "parse_expr",
            "eval_expr"
        ]
    },
    "sympy__sympy-22840": {
        "sympy/simplify/cse_main.py": [
            "cse",
            "opt_cse",
            "tree_cse"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixExpr",
            "MatrixSymbol",
            "MatrixElement"
        ],
        "sympy/printing/ccode.py": []
    },
    "sympy__sympy-23117": {
        "sympy/tensor/array/ndim_array.py": [
            "NDimArray",
            "NDimArray._scan_iterable_shape",
            "NDimArray._handle_ndarray_creation_inputs"
        ],
        "sympy/tensor/array/dense_ndim_array.py": [
            "DenseNDimArray",
            "DenseNDimArray.__new__",
            "ImmutableDenseNDimArray._new",
            "MutableDenseNDimArray._new"
        ],
        "sympy/tensor/array/__init__.py": []
    },
    "sympy__sympy-23191": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter",
            "PrettyPrinter._print_Cross",
            "PrettyPrinter._print_Curl",
            "PrettyPrinter._print_BasisDependent"
        ],
        "sympy/vector/coordsysrect.py": [
            "CoordSys3D"
        ],
        "sympy/vector/vector.py": [
            "Vector",
            "BaseVector",
            "VectorAdd",
            "VectorMul",
            "Cross"
        ]
    },
    "sympy__sympy-23262": {
        "sympy/printing/pycode.py": [
            "AbstractPythonCodePrinter._print_Tuple",
            "PythonCodePrinter"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-24066": {
        "sympy/physics/units/systems/si.py": [],
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem._collect_factor_and_dimension",
            "UnitSystem.get_dimension_system"
        ],
        "sympy/physics/units/dimensions.py": [
            "DimensionSystem.is_dimensionless"
        ]
    },
    "sympy__sympy-24102": {
        "sympy/parsing/mathematica.py": [
            "parse_mathematica",
            "MathematicaParser"
        ],
        "sympy/parsing/ast_parser.py": [],
        "sympy/parsing/sym_expr.py": []
    },
    "sympy__sympy-24152": {
        "sympy/physics/quantum/tensorproduct.py": [
            "TensorProduct._eval_expand_tensorproduct"
        ],
        "sympy/physics/quantum/qapply.py": [
            "qapply",
            "qapply_Mul"
        ],
        "sympy/physics/quantum/commutator.py": []
    },
    "sympy__sympy-24213": {
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem._collect_factor_and_dimension"
        ],
        "sympy/physics/units/quantities.py": [
            "Quantity._collect_factor_and_dimension"
        ],
        "sympy/physics/units/systems/si.py": []
    },
    "sympy__sympy-24909": {
        "sympy/physics/units/prefixes.py": [
            "Prefix",
            "Prefix.__mul__"
        ],
        "sympy/physics/units/quantities.py": [
            "Quantity"
        ],
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem"
        ]
    }
}