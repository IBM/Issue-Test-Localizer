{
    "astropy__astropy-12907": {
        "astropy/modeling/separable.py": [
            "separability_matrix",
            "_separable",
            "_cstack",
            "_cdot"
        ],
        "astropy/modeling/core.py": [
            "CompoundModel",
            "Model"
        ],
        "astropy/modeling/models.py": []
    },
    "astropy__astropy-14182": {
        "astropy/io/ascii/rst.py": [
            "RST",
            "SimpleRSTHeader",
            "SimpleRSTData"
        ],
        "astropy/io/ascii/core.py": [
            "BaseHeader",
            "_get_writer"
        ],
        "astropy/io/ascii/ui.py": [
            "get_writer",
            "write"
        ]
    },
    "astropy__astropy-14365": {
        "astropy/io/ascii/qdp.py": [
            "_line_type",
            "_get_type_from_list_of_lines",
            "_interpret_err_lines",
            "_get_tables_from_qdp_file",
            "_understand_err_col",
            "_read_table_qdp",
            "QDP"
        ],
        "astropy/io/ascii/core.py": [
            "DefaultSplitter"
        ],
        "astropy/io/ascii/ui.py": []
    },
    "astropy__astropy-14995": {
        "astropy/nddata/mixins/ndarithmetic.py": [
            "NDArithmeticMixin",
            "NDArithmeticMixin._arithmetic_mask",
            "NDArithmeticMixin._arithmetic",
            "NDArithmeticMixin.multiply"
        ],
        "astropy/nddata/nddata.py": [
            "NDData"
        ],
        "astropy/nddata/nddata_base.py": [
            "NDDataBase"
        ]
    },
    "astropy__astropy-6938": {
        "astropy/io/fits/fitsrec.py": [
            "FITS_rec._scale_back_ascii",
            "FITS_rec._convert_ascii"
        ],
        "astropy/io/fits/util.py": [
            "encode_ascii",
            "decode_ascii"
        ],
        "astropy/io/fits/column.py": []
    },
    "astropy__astropy-7746": {
        "astropy/wcs/wcs.py": [
            "WCS",
            "WCS._array_converter",
            "WCS._denormalize_sky",
            "WCS._normalize_sky",
            "WCS.wcs_pix2world"
        ],
        "astropy/wcs/utils.py": [],
        "astropy/wcs/_docutil.py": []
    },
    "django__django-10914": {
        "django/conf/global_settings.py": [],
        "django/core/files/storage.py": [
            "FileSystemStorage"
        ],
        "django/core/files/uploadedfile.py": [
            "TemporaryUploadedFile",
            "InMemoryUploadedFile"
        ]
    },
    "django__django-10924": {
        "django/db/models/fields/__init__.py": [
            "FilePathField"
        ],
        "django/forms/fields.py": [
            "FilePathField"
        ],
        "django/db/models/fields/files.py": []
    },
    "django__django-11001": {
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_order_by"
        ],
        "django/db/models/expressions.py": [
            "RawSQL",
            "OrderBy"
        ],
        "django/db/models/query.py": [
            "QuerySet.order_by"
        ]
    },
    "django__django-11019": {
        "django/forms/widgets.py": [
            "Media",
            "MediaDefiningClass",
            "Widget",
            "MediaOrderConflictWarning",
            "Media.merge",
            "Media.__add__",
            "media_property"
        ],
        "django/forms/utils.py": [],
        "django/forms/__init__.py": []
    },
    "django__django-11039": {
        "django/core/management/commands/sqlmigrate.py": [
            "Command"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor"
        ],
        "django/db/backends/sqlite3/schema.py": [
            "DatabaseSchemaEditor"
        ]
    },
    "django__django-11049": {
        "django/forms/fields.py": [
            "DurationField"
        ],
        "django/db/models/fields/__init__.py": [
            "DurationField"
        ],
        "django/utils/duration.py": [
            "duration_string",
            "duration_iso_string"
        ]
    },
    "django__django-11099": {
        "django/contrib/auth/validators.py": [
            "ASCIIUsernameValidator",
            "UnicodeUsernameValidator"
        ],
        "django/core/validators.py": [],
        "django/contrib/auth/migrations/0008_alter_user_username_max_length.py": []
    },
    "django__django-11133": {
        "django/http/response.py": [
            "HttpResponse",
            "HttpResponse.content",
            "HttpResponse.content.setter",
            "HttpResponse.make_bytes",
            "HttpResponse.serialize"
        ],
        "django/http/__init__.py": [],
        "django/core/handlers/wsgi.py": []
    },
    "django__django-11179": {
        "django/db/models/deletion.py": [
            "Collector",
            "Collector.delete"
        ],
        "django/db/models/base.py": [
            "Model.delete"
        ],
        "django/db/models/query.py": [
            "QuerySet.delete",
            "QuerySet._raw_delete"
        ]
    },
    "django__django-11283": {
        "django/contrib/auth/migrations/0011_update_proxy_permissions.py": [
            "update_proxy_model_permissions",
            "revert_proxy_model_permissions",
            "Migration"
        ],
        "django/contrib/auth/models.py": [
            "Permission",
            "PermissionManager"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor"
        ]
    },
    "django__django-11422": {
        "django/utils/autoreload.py": [
            "iter_all_python_module_files",
            "iter_modules_and_files",
            "StatReloader",
            "get_reloader"
        ],
        "django/core/management/commands/runserver.py": [
            "Command",
            "inner_run"
        ],
        "django/core/management/base.py": []
    },
    "django__django-11564": {
        "django/templatetags/static.py": [
            "StaticNode",
            "PrefixNode",
            "static"
        ],
        "django/core/files/storage.py": [
            "FileSystemStorage",
            "Storage"
        ],
        "django/contrib/staticfiles/storage.py": [
            "StaticFilesStorage",
            "HashedFilesMixin",
            "ManifestFilesMixin",
            "ManifestStaticFilesStorage"
        ]
    },
    "django__django-11583": {
        "django/utils/autoreload.py": [
            "iter_all_python_module_files",
            "iter_modules_and_files",
            "StatReloader"
        ],
        "django/core/management/commands/runserver.py": [
            "Command"
        ],
        "django/core/management/base.py": [
            "BaseCommand"
        ]
    },
    "django__django-11620": {
        "django/urls/converters.py": [
            "IntConverter",
            "StringConverter",
            "UUIDConverter",
            "SlugConverter",
            "PathConverter"
        ],
        "django/urls/resolvers.py": [
            "RoutePattern",
            "_route_to_regex",
            "URLResolver"
        ],
        "django/core/handlers/exception.py": [
            "convert_exception_to_response",
            "response_for_exception",
            "get_exception_response"
        ]
    },
    "django__django-11630": {
        "django/core/checks/model_checks.py": [
            "check_all_models",
            "_check_lazy_references",
            "check_lazy_references"
        ],
        "django/db/models/options.py": [
            "Options"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor"
        ]
    },
    "django__django-11742": {
        "django/db/models/fields/__init__.py": [
            "Field",
            "CharField"
        ],
        "django/forms/fields.py": [
            "CharField",
            "ChoiceField",
            "TypedChoiceField",
            "MultipleChoiceField",
            "TypedMultipleChoiceField"
        ],
        "django/core/validators.py": [
            "MaxLengthValidator"
        ]
    },
    "django__django-11797": {
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_group_by",
            "SQLCompiler.as_sql",
            "SQLCompiler.as_subquery_condition"
        ],
        "django/db/models/sql/query.py": [
            "Query",
            "Query.set_group_by",
            "Query.build_filter"
        ],
        "django/db/models/query.py": [
            "QuerySet.filter",
            "QuerySet._filter_or_exclude"
        ]
    },
    "django__django-11815": {
        "django/db/migrations/writer.py": [
            "MigrationWriter"
        ],
        "django/db/models/enums.py": [
            "Choices",
            "TextChoices"
        ],
        "django/db/models/fields/__init__.py": [
            "CharField"
        ]
    },
    "django__django-11848": {
        "django/utils/http.py": [
            "parse_http_date"
        ],
        "django/utils/datetime_safe.py": [],
        "django/utils/dates.py": []
    },
    "django__django-11905": {
        "django/db/models/lookups.py": [
            "IsNull",
            "Lookup",
            "QuerySet._filter_or_exclude"
        ],
        "django/db/models/query.py": [],
        "django/db/models/sql/where.py": []
    },
    "django__django-11910": {
        "django/db/migrations/operations/fields.py": [
            "RenameField",
            "AlterField"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector.generate_renamed_fields",
            "MigrationAutodetector.generate_altered_fields"
        ],
        "django/db/models/fields/related.py": [
            "ForeignKey",
            "RelatedField"
        ]
    },
    "django__django-11964": {
        "django/db/models/fields/__init__.py": [
            "CharField",
            "Field",
            "Field.to_python",
            "Field.get_prep_value",
            "Field.value_to_string"
        ],
        "django/db/models/enums.py": [
            "TextChoices",
            "IntegerChoices",
            "Choices",
            "ChoicesMeta"
        ],
        "django/db/models/base.py": [
            "Model",
            "Model.__str__",
            "Model.serializable_value"
        ]
    },
    "django__django-11999": {
        "django/db/models/base.py": [
            "Model._get_FIELD_display"
        ],
        "django/db/models/fields/__init__.py": [
            "Field"
        ],
        "django/db/models/options.py": []
    },
    "django__django-12113": {
        "django/db/backends/sqlite3/base.py": [
            "DatabaseWrapper",
            "SQLiteCursorWrapper",
            "get_new_connection",
            "create_cursor",
            "close",
            "_set_autocommit"
        ],
        "django/db/backends/base/base.py": [
            "BaseDatabaseWrapper",
            "connect",
            "ensure_connection",
            "_cursor",
            "_commit",
            "_rollback",
            "_close"
        ],
        "django/db/backends/utils.py": [
            "CursorWrapper",
            "execute",
            "_execute_with_wrappers",
            "_execute"
        ]
    },
    "django__django-12125": {
        "django/db/migrations/serializer.py": [
            "DeconstructableSerializer",
            "ModelFieldSerializer"
        ],
        "django/db/migrations/writer.py": [
            "MigrationWriter"
        ],
        "django/db/migrations/autodetector.py": []
    },
    "django__django-12184": {
        "django/urls/resolvers.py": [
            "URLPattern",
            "RegexPattern",
            "ResolverMatch"
        ],
        "django/core/handlers/base.py": [
            "BaseHandler._get_response"
        ],
        "django/urls/base.py": []
    },
    "django__django-12284": {
        "django/db/models/fields/__init__.py": [
            "Field",
            "Model._get_FIELD_display"
        ],
        "django/db/models/base.py": [
            "Model"
        ],
        "django/db/models/options.py": []
    },
    "django__django-12286": {
        "django/core/checks/translation.py": [
            "check_language_settings_consistent"
        ],
        "django/utils/translation/trans_real.py": [
            "get_supported_language_variant"
        ],
        "django/conf/global_settings.py": []
    },
    "django__django-12308": {
        "django/contrib/admin/utils.py": [
            "display_for_field",
            "display_for_value"
        ],
        "django/db/models/fields/json.py": [
            "JSONField"
        ],
        "django/contrib/admin/options.py": []
    },
    "django__django-12453": {
        "django/db/backends/base/creation.py": [
            "BaseDatabaseCreation.serialize_db_to_string",
            "BaseDatabaseCreation.deserialize_db_from_string",
            "BaseDatabaseCreation.create_test_db"
        ],
        "django/core/serializers/__init__.py": [
            "sort_dependencies",
            "serialize",
            "deserialize"
        ],
        "django/db/transaction.py": [
            "Atomic",
            "atomic"
        ]
    },
    "django__django-12470": {
        "django/db/models/query.py": [
            "QuerySet",
            "QuerySet.order_by",
            "QuerySet._clone"
        ],
        "django/db/models/options.py": [
            "Options",
            "Options._prepare",
            "Options.get_ordering"
        ],
        "django/db/models/sql/query.py": [
            "Query",
            "Query.add_ordering",
            "Query.clear_ordering",
            "get_order_dir"
        ]
    },
    "django__django-12497": {
        "django/db/models/fields/related.py": [
            "ForeignKey",
            "ManyToManyField",
            "resolve_relation"
        ],
        "django/db/models/fields/__init__.py": [],
        "django/core/exceptions.py": []
    },
    "django__django-12589": {
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_group_by",
            "SQLCompiler.collapse_group_by",
            "SQLCompiler.as_sql"
        ],
        "django/db/models/query.py": [
            "QuerySet.values",
            "QuerySet.annotate",
            "QuerySet._clone"
        ],
        "django/db/backends/postgresql/operations.py": [
            "DatabaseOperations"
        ]
    },
    "django__django-12700": {
        "django/views/debug.py": [
            "SafeExceptionReporterFilter",
            "SafeExceptionReporterFilter.cleanse_setting",
            "SafeExceptionReporterFilter.get_safe_settings"
        ],
        "django/core/handlers/exception.py": [
            "get_exception_response",
            "handle_uncaught_exception"
        ],
        "django/conf/global_settings.py": []
    },
    "django__django-12708": {
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor",
            "BaseDatabaseSchemaEditor._delete_composed_index",
            "BaseDatabaseSchemaEditor._constraint_names",
            "BaseDatabaseSchemaEditor.alter_index_together",
            "BaseDatabaseSchemaEditor.alter_unique_together"
        ],
        "django/db/migrations/operations/models.py": [
            "AlterIndexTogether",
            "AlterUniqueTogether",
            "AlterTogetherOptionOperation"
        ],
        "django/db/models/options.py": [
            "normalize_together"
        ]
    },
    "django__django-12747": {
        "django/db/models/deletion.py": [
            "Collector",
            "Collector.delete"
        ],
        "django/db/models/query.py": [
            "QuerySet.delete",
            "QuerySet._raw_delete"
        ],
        "django/db/models/sql/compiler.py": []
    },
    "django__django-12856": {
        "django/db/models/constraints.py": [
            "UniqueConstraint"
        ],
        "django/core/checks/model_checks.py": [
            "check_all_models"
        ],
        "django/db/migrations/operations/models.py": [
            "AddConstraint"
        ]
    },
    "django__django-12908": {
        "django/db/models/query.py": [
            "QuerySet.distinct",
            "QuerySet.union",
            "QuerySet._combinator_query"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_distinct",
            "SQLCompiler.get_combinator_sql",
            "SQLCompiler.as_sql"
        ],
        "django/db/models/sql/query.py": [
            "Query.combine",
            "Query.add_distinct_fields"
        ]
    },
    "django__django-12915": {
        "django/contrib/staticfiles/handlers.py": [
            "StaticFilesHandlerMixin",
            "StaticFilesHandlerMixin.get_response_async"
        ],
        "django/core/handlers/base.py": [
            "BaseHandler.get_response_async",
            "BaseHandler._get_response_async"
        ],
        "django/core/handlers/asgi.py": [
            "ASGIHandler"
        ]
    },
    "django__django-12983": {
        "django/utils/text.py": [
            "slugify"
        ],
        "django/utils/html.py": [],
        "django/utils/http.py": []
    },
    "django__django-13028": {
        "django/db/models/sql/query.py": [
            "Query.check_filterable",
            "Query.build_filter",
            "Query._add_q"
        ],
        "django/db/models/query.py": [
            "QuerySet._filter_or_exclude",
            "QuerySet.filter"
        ],
        "django/db/models/lookups.py": []
    },
    "django__django-13033": {
        "django/db/models/query.py": [
            "QuerySet.order_by",
            "QuerySet._clone"
        ],
        "django/db/models/sql/query.py": [
            "Query.add_ordering",
            "Query.build_filter",
            "Query.setup_joins",
            "Query.find_ordering_name"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler.get_order_by",
            "SQLCompiler.find_ordering_name",
            "SQLCompiler._setup_joins"
        ]
    },
    "django__django-13158": {
        "django/db/models/query.py": [
            "QuerySet",
            "QuerySet.none",
            "QuerySet.union",
            "QuerySet._combinator_query"
        ],
        "django/forms/models.py": [
            "ModelMultipleChoiceField",
            "ModelMultipleChoiceField.clean",
            "ModelMultipleChoiceField._check_values"
        ],
        "django/db/models/sql/query.py": []
    },
    "django__django-13220": {
        "django/core/exceptions.py": [
            "ValidationError"
        ],
        "django/core/validators.py": [
            "RegexValidator",
            "EmailValidator",
            "BaseValidator",
            "DecimalValidator",
            "FileExtensionValidator",
            "ProhibitNullCharactersValidator"
        ],
        "django/core/checks/messages.py": [
            "CheckMessage"
        ]
    },
    "django__django-13230": {
        "django/contrib/syndication/views.py": [
            "Feed"
        ],
        "django/utils/feedgenerator.py": [
            "SyndicationFeed",
            "RssFeed",
            "RssUserland091Feed",
            "Rss201rev2Feed",
            "Atom1Feed"
        ],
        "django/contrib/syndication/__init__.py": []
    },
    "django__django-13265": {
        "django/db/migrations/operations/models.py": [
            "AlterOrderWithRespectTo",
            "AddIndex",
            "CreateModel"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector",
            "MigrationAutodetector.generate_altered_order_with_respect_to",
            "MigrationAutodetector._optimize_migrations"
        ],
        "django/db/migrations/optimizer.py": [
            "MigrationOptimizer"
        ]
    },
    "django__django-13315": {
        "django/db/models/fields/related.py": [
            "ForeignKey",
            "ForeignKey.formfield"
        ],
        "django/forms/models.py": [
            "ModelChoiceField",
            "ModelChoiceField._get_choices",
            "ModelChoiceField.get_limit_choices_to",
            "ModelChoiceIterator"
        ],
        "django/forms/fields.py": [
            "ChoiceField"
        ]
    },
    "django__django-13321": {
        "django/contrib/sessions/backends/base.py": [
            "SessionBase.decode",
            "SessionBase._legacy_decode",
            "SessionBase._get_session"
        ],
        "django/contrib/sessions/backends/db.py": [
            "SessionStore.load"
        ],
        "django/core/signing.py": [
            "TimestampSigner",
            "Signer",
            "loads",
            "b64_decode"
        ]
    },
    "django__django-13401": {
        "django/db/models/fields/__init__.py": [
            "Field",
            "Field.__eq__",
            "Field.__lt__",
            "Field.__hash__"
        ],
        "django/db/models/fields/related.py": [],
        "django/db/models/fields/mixins.py": []
    },
    "django__django-13447": {
        "django/contrib/admin/sites.py": [
            "AdminSite._build_app_dict",
            "AdminSite.get_app_list",
            "AdminSite.index",
            "AdminSite.app_index"
        ],
        "django/contrib/admin/views/main.py": [],
        "django/contrib/admin/apps.py": []
    },
    "django__django-13448": {
        "django/db/backends/base/creation.py": [
            "BaseDatabaseCreation"
        ],
        "django/db/backends/postgresql/creation.py": [
            "DatabaseCreation"
        ],
        "django/db/backends/mysql/creation.py": [
            "DatabaseCreation"
        ]
    },
    "django__django-13551": {
        "django/contrib/auth/tokens.py": [
            "PasswordResetTokenGenerator",
            "PasswordResetTokenGenerator._make_hash_value"
        ],
        "django/contrib/auth/models.py": [
            "AbstractUser",
            "User"
        ],
        "django/contrib/auth/base_user.py": [
            "AbstractBaseUser"
        ]
    },
    "django__django-13590": {
        "django/db/models/sql/query.py": [
            "Query.resolve_lookup_value",
            "JoinInfo"
        ],
        "django/db/models/query.py": [
            "QuerySet",
            "QuerySet._filter_or_exclude",
            "QuerySet.filter",
            "QuerySet.exclude"
        ],
        "django/db/models/lookups.py": [
            "Range",
            "In"
        ]
    },
    "django__django-13658": {
        "django/core/management/__init__.py": [
            "ManagementUtility"
        ],
        "django/core/management/base.py": [
            "CommandParser"
        ],
        "django/core/management/commands/__init__.py": []
    },
    "django__django-13660": {
        "django/core/management/commands/shell.py": [
            "Command.handle"
        ],
        "django/core/management/base.py": [
            "BaseCommand"
        ],
        "django/__main__.py": []
    },
    "django__django-13710": {
        "django/contrib/admin/options.py": [
            "InlineModelAdmin",
            "StackedInline",
            "TabularInline"
        ],
        "django/contrib/admin/helpers.py": [
            "InlineAdminFormSet",
            "InlineAdminForm",
            "InlineFieldset"
        ],
        "django/contrib/admin/forms.py": []
    },
    "django__django-13757": {
        "django/db/models/fields/json.py": [
            "KeyTransformIsNull",
            "HasKeyLookup",
            "KeyTransform"
        ],
        "django/db/backends/sqlite3/operations.py": [
            "DatabaseOperations"
        ],
        "django/db/backends/oracle/operations.py": [
            "DatabaseOperations"
        ]
    },
    "django__django-13768": {
        "django/dispatch/dispatcher.py": [
            "Signal.send_robust"
        ],
        "django/core/signals.py": [],
        "django/db/models/signals.py": []
    },
    "django__django-13925": {
        "django/conf/global_settings.py": [],
        "django/db/models/base.py": [
            "Model",
            "Model._check_default_pk"
        ],
        "django/db/models/options.py": [
            "Options",
            "Options._get_default_pk_class"
        ]
    },
    "django__django-13933": {
        "django/forms/models.py": [
            "ModelChoiceField",
            "ModelMultipleChoiceField"
        ],
        "django/core/exceptions.py": [
            "ValidationError"
        ],
        "django/forms/fields.py": []
    },
    "django__django-13964": {
        "django/db/models/fields/related.py": [
            "ForeignKey",
            "ForeignObject",
            "RelatedField"
        ],
        "django/db/models/base.py": [
            "Model",
            "Model._save_parents",
            "Model._save_table",
            "Model._prepare_related_fields_for_save"
        ],
        "django/db/models/fields/__init__.py": [
            "Field",
            "Field.get_pk_value_on_save",
            "Field.pre_save"
        ]
    },
    "django__django-14016": {
        "django/db/models/query_utils.py": [
            "Q",
            "Q._combine",
            "Q.__or__"
        ],
        "django/db/models/lookups.py": [
            "In",
            "In.process_rhs",
            "In.get_rhs_op",
            "In.as_sql"
        ],
        "django/db/models/query.py": []
    },
    "django__django-14017": {
        "django/db/models/query_utils.py": [
            "Q"
        ],
        "django/db/models/expressions.py": [
            "Exists"
        ],
        "django/db/models/sql/query.py": []
    },
    "django__django-14155": {
        "django/urls/resolvers.py": [
            "ResolverMatch",
            "get_callable"
        ],
        "django/urls/base.py": [],
        "django/urls/utils.py": []
    },
    "django__django-14238": {
        "django/db/models/fields/__init__.py": [
            "AutoFieldMeta",
            "AutoField",
            "BigAutoField",
            "SmallAutoField"
        ],
        "django/db/models/options.py": [
            "Options._get_default_pk_class"
        ],
        "django/db/models/base.py": [
            "ModelBase"
        ]
    },
    "django__django-14382": {
        "django/core/management/templates.py": [
            "TemplateCommand",
            "TemplateCommand.validate_name",
            "TemplateCommand.handle"
        ],
        "django/core/management/commands/startapp.py": [
            "Command",
            "Command.handle"
        ],
        "django/core/management/commands/__init__.py": []
    },
    "django__django-14411": {
        "django/contrib/auth/forms.py": [
            "ReadOnlyPasswordHashWidget",
            "ReadOnlyPasswordHashField",
            "UserChangeForm"
        ],
        "django/contrib/admin/widgets.py": [],
        "django/contrib/admin/forms.py": []
    },
    "django__django-14534": {
        "django/forms/boundfield.py": [
            "BoundWidget",
            "BoundWidget.id_for_label"
        ],
        "django/forms/widgets.py": [
            "ChoiceWidget",
            "ChoiceWidget.id_for_label",
            "ChoiceWidget.create_option",
            "ChoiceWidget.options",
            "ChoiceWidget.subwidgets",
            "CheckboxSelectMultiple"
        ],
        "django/forms/fields.py": []
    },
    "django__django-14580": {
        "django/db/migrations/writer.py": [
            "MigrationWriter"
        ],
        "django/db/migrations/serializer.py": [
            "DeconstructableSerializer",
            "ModelFieldSerializer",
            "Serializer"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector"
        ]
    },
    "django__django-14608": {
        "django/forms/formsets.py": [
            "BaseFormSet",
            "BaseFormSet.non_form_errors",
            "BaseFormSet.errors"
        ],
        "django/forms/utils.py": [
            "ErrorList"
        ],
        "django/forms/__init__.py": []
    },
    "django__django-14667": {
        "django/db/models/query.py": [
            "QuerySet.defer",
            "QuerySet.only",
            "QuerySet._clone"
        ],
        "django/db/models/sql/query.py": [
            "Query.clear_deferred_loading",
            "Query.add_deferred_loading",
            "Query.add_immediate_loading",
            "Query.get_loaded_field_names",
            "Query.get_loaded_field_names_cb"
        ],
        "django/db/models/sql/compiler.py": []
    },
    "django__django-14672": {
        "django/db/models/fields/reverse_related.py": [
            "ManyToManyRel",
            "ManyToManyRel.identity",
            "ManyToManyRel.__init__"
        ],
        "django/utils/hashable.py": [
            "make_hashable"
        ],
        "django/db/models/fields/related.py": []
    },
    "django__django-14730": {
        "django/db/models/fields/related.py": [
            "ManyToManyField",
            "ManyToManyField.__init__",
            "ManyToManyField.check"
        ],
        "django/db/models/fields/related_descriptors.py": [],
        "django/db/models/fields/__init__.py": []
    },
    "django__django-14752": {
        "django/contrib/admin/views/autocomplete.py": [
            "AutocompleteJsonView"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin"
        ],
        "django/contrib/admin/widgets.py": [
            "AutocompleteMixin",
            "AutocompleteSelect",
            "AutocompleteSelectMultiple"
        ]
    },
    "django__django-14787": {
        "django/utils/decorators.py": [
            "_update_method_wrapper",
            "method_decorator",
            "_multi_decorate"
        ],
        "django/views/decorators/common.py": [],
        "django/core/handlers/base.py": []
    },
    "django__django-14855": {
        "django/contrib/admin/helpers.py": [
            "AdminReadonlyField",
            "AdminReadonlyField.get_admin_url"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin"
        ],
        "django/contrib/admin/sites.py": [
            "AdminSite"
        ]
    },
    "django__django-14915": {
        "django/forms/models.py": [
            "ModelChoiceIteratorValue",
            "ModelChoiceField",
            "ModelMultipleChoiceField"
        ],
        "django/forms/widgets.py": [
            "Select",
            "SelectMultiple",
            "ChoiceWidget",
            "ChoiceWidget.create_option"
        ],
        "django/forms/fields.py": []
    },
    "django__django-14997": {
        "django/db/backends/sqlite3/schema.py": [
            "DatabaseSchemaEditor"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor._unique_sql",
            "BaseDatabaseSchemaEditor._create_unique_sql",
            "BaseDatabaseSchemaEditor._delete_unique_sql"
        ],
        "django/db/models/constraints.py": [
            "UniqueConstraint"
        ]
    },
    "django__django-14999": {
        "django/db/migrations/operations/models.py": [
            "RenameModel",
            "AlterModelTable"
        ],
        "django/db/backends/sqlite3/schema.py": [
            "DatabaseSchemaEditor.alter_db_table",
            "DatabaseSchemaEditor._remake_table"
        ],
        "django/db/backends/postgresql/schema.py": [
            "DatabaseSchemaEditor._alter_field"
        ]
    },
    "django__django-15061": {
        "django/forms/widgets.py": [
            "MultiWidget",
            "MultiWidget.id_for_label",
            "ChoiceWidget",
            "ChoiceWidget.id_for_label"
        ],
        "django/forms/boundfield.py": [
            "BoundField",
            "BoundField.label_tag",
            "BoundField.id_for_label"
        ],
        "django/forms/forms.py": []
    },
    "django__django-15202": {
        "django/forms/fields.py": [
            "URLField",
            "Field.clean",
            "Field.run_validators"
        ],
        "django/core/validators.py": [
            "URLValidator"
        ],
        "django/forms/utils.py": []
    },
    "django__django-15213": {
        "django/db/models/expressions.py": [
            "ExpressionWrapper",
            "Q"
        ],
        "django/db/models/query.py": [
            "QuerySet",
            "QuerySet.annotate"
        ],
        "django/db/models/sql/query.py": [
            "Query",
            "Query.add_annotation"
        ]
    },
    "django__django-15252": {
        "django/db/migrations/recorder.py": [
            "MigrationRecorder"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor.apply_migration",
            "MigrationExecutor.record_migration"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor"
        ]
    },
    "django__django-15320": {
        "django/db/models/expressions.py": [
            "Subquery",
            "Subquery.as_sql"
        ],
        "django/db/models/sql/subqueries.py": [],
        "django/db/models/query.py": []
    },
    "django__django-15347": {
        "django/contrib/messages/storage/cookie.py": [
            "MessageEncoder",
            "MessageDecoder"
        ],
        "django/contrib/messages/storage/base.py": [
            "Message"
        ],
        "django/contrib/messages/api.py": [
            "add_message",
            "debug",
            "info",
            "success",
            "warning",
            "error"
        ]
    },
    "django__django-15388": {
        "django/core/management/commands/runserver.py": [
            "Command"
        ],
        "django/utils/autoreload.py": [
            "trigger_reload",
            "restart_with_reloader",
            "BaseReloader",
            "StatReloader",
            "WatchmanReloader",
            "get_reloader",
            "run_with_reloader"
        ],
        "django/template/loaders/filesystem.py": [
            "Loader"
        ]
    },
    "django__django-15400": {
        "django/utils/functional.py": [
            "SimpleLazyObject",
            "LazyObject",
            "new_method_proxy"
        ],
        "django/utils/decorators.py": [],
        "django/core/handlers/base.py": []
    },
    "django__django-15498": {
        "django/http/response.py": [
            "HttpResponseNotModified"
        ],
        "django/middleware/http.py": [
            "ConditionalGetMiddleware"
        ],
        "django/http/request.py": [
            "HttpHeaders"
        ]
    },
    "django__django-15695": {
        "django/db/migrations/operations/models.py": [
            "RenameIndex"
        ],
        "django/db/backends/base/schema.py": [
            "BaseDatabaseSchemaEditor.rename_index",
            "BaseDatabaseSchemaEditor._rename_index_sql"
        ],
        "django/db/backends/postgresql/schema.py": [
            "DatabaseSchemaEditor"
        ]
    },
    "django__django-15738": {
        "django/db/migrations/operations/models.py": [
            "AlterUniqueTogether",
            "AlterTogetherOptionOperation"
        ],
        "django/db/migrations/state.py": [
            "ProjectState",
            "ModelState.get_constraint_by_name"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector._generate_removed_altered_foo_together",
            "MigrationAutodetector.generate_removed_altered_unique_together",
            "MigrationAutodetector._generate_altered_foo_together",
            "MigrationAutodetector.generate_altered_unique_together"
        ]
    },
    "django__django-15781": {
        "django/core/management/base.py": [
            "DjangoHelpFormatter",
            "BaseCommand"
        ],
        "django/core/management/commands/__init__.py": [],
        "django/core/management/color.py": []
    },
    "django__django-15789": {
        "django/utils/html.py": [
            "json_script"
        ],
        "django/template/defaultfilters.py": [
            "json_script"
        ],
        "django/template/library.py": [
            "Library"
        ]
    },
    "django__django-15790": {
        "django/template/library.py": [
            "Library",
            "import_library"
        ],
        "django/core/checks/templates.py": [
            "check_for_template_tags_with_the_same_name"
        ],
        "django/template/base.py": [
            "Parser"
        ]
    },
    "django__django-15814": {
        "django/db/models/sql/query.py": [
            "Query"
        ],
        "django/db/models/query.py": [
            "RelatedPopulator",
            "get_related_populators",
            "QuerySet"
        ],
        "django/db/models/fields/proxy.py": []
    },
    "django__django-15819": {
        "django/core/management/commands/inspectdb.py": [
            "Command",
            "Command.get_field_type"
        ],
        "django/db/models/fields/related.py": [
            "RelatedField",
            "ForeignKey",
            "OneToOneField",
            "ManyToManyField"
        ],
        "django/db/models/fields/related_descriptors.py": [
            "ForwardManyToOneDescriptor",
            "ReverseManyToOneDescriptor",
            "ManyToManyDescriptor"
        ]
    },
    "django__django-15851": {
        "django/core/management/commands/dbshell.py": [
            "Command"
        ],
        "django/db/backends/postgresql/client.py": [
            "DatabaseClient"
        ],
        "django/db/backends/base/client.py": [
            "BaseDatabaseClient"
        ]
    },
    "django__django-15902": {
        "django/forms/formsets.py": [
            "ManagementForm",
            "BaseFormSet"
        ],
        "django/forms/renderers.py": [
            "BaseRenderer",
            "DjangoTemplates",
            "Jinja2",
            "DjangoDivFormRenderer",
            "Jinja2DivFormRenderer",
            "TemplatesSetting",
            "get_default_renderer"
        ],
        "django/forms/forms.py": [
            "BaseForm"
        ]
    },
    "django__django-15996": {
        "django/db/migrations/serializer.py": [
            "EnumSerializer",
            "RegexSerializer",
            "Serializer",
            "serializer_factory"
        ],
        "django/db/models/enums.py": [
            "ChoicesMeta",
            "Choices"
        ],
        "django/core/serializers/base.py": [
            "Serializer"
        ]
    },
    "django__django-16041": {
        "django/forms/formsets.py": [
            "BaseFormSet",
            "BaseFormSet.empty_form",
            "BaseFormSet._construct_form",
            "BaseFormSet.get_form_kwargs"
        ],
        "django/forms/models.py": [
            "BaseModelFormSet",
            "BaseModelFormSet._construct_form"
        ],
        "django/forms/forms.py": [
            "BaseForm"
        ]
    },
    "django__django-16046": {
        "django/utils/numberformat.py": [
            "format"
        ],
        "django/utils/formats.py": [
            "number_format"
        ],
        "django/utils/translation/__init__.py": []
    },
    "django__django-16139": {
        "django/contrib/auth/forms.py": [
            "UserChangeForm"
        ],
        "django/contrib/auth/admin.py": [
            "UserAdmin"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin.get_object",
            "ModelAdmin.changeform_view",
            "ModelAdmin._changeform_view"
        ]
    },
    "django__django-16229": {
        "django/forms/models.py": [
            "BaseModelForm",
            "ModelForm",
            "BaseInlineFormSet",
            "modelform_factory",
            "inlineformset_factory"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin",
            "InlineModelAdmin",
            "TabularInline"
        ],
        "django/forms/forms.py": [
            "BaseForm",
            "BaseForm._clean_fields",
            "BaseForm.clean"
        ]
    },
    "django__django-16255": {
        "django/contrib/sitemaps/__init__.py": [
            "Sitemap",
            "Sitemap.get_latest_lastmod",
            "GenericSitemap"
        ],
        "django/contrib/sitemaps/views.py": [
            "index",
            "_get_latest_lastmod"
        ],
        "django/contrib/sitemaps/apps.py": []
    },
    "django__django-16379": {
        "django/core/cache/backends/filebased.py": [
            "FileBasedCache.has_key",
            "FileBasedCache._is_expired",
            "FileBasedCache._delete"
        ],
        "django/core/cache/backends/base.py": [
            "BaseCache.get_or_set",
            "BaseCache.has_key"
        ],
        "django/core/cache/backends/db.py": []
    },
    "django__django-16400": {
        "django/core/management/commands/migrate.py": [
            "Command"
        ],
        "django/db/migrations/executor.py": [
            "MigrationExecutor"
        ],
        "django/contrib/auth/management/__init__.py": [
            "create_permissions",
            "get_default_username"
        ]
    },
    "django__django-16408": {
        "django/db/models/query.py": [
            "QuerySet._merge_known_related_objects",
            "QuerySet.select_related",
            "QuerySet.annotate",
            "QuerySet._annotate"
        ],
        "django/db/models/fields/related_descriptors.py": [
            "ForwardManyToOneDescriptor",
            "RelatedPopulator"
        ],
        "django/db/models/sql/query.py": [
            "Query.setup_joins",
            "Query.add_filtered_relation",
            "Query.build_filtered_relation_q"
        ]
    },
    "django__django-16527": {
        "django/contrib/admin/templatetags/admin_modify.py": [
            "submit_row"
        ],
        "django/contrib/admin/options.py": [
            "ModelAdmin",
            "has_add_permission",
            "has_change_permission"
        ],
        "django/contrib/admin/checks.py": []
    },
    "django__django-16595": {
        "django/db/migrations/optimizer.py": [
            "MigrationOptimizer"
        ],
        "django/db/migrations/operations/fields.py": [
            "AlterField",
            "AlterField.reduce",
            "AlterField.is_same_field_operation"
        ],
        "django/db/migrations/operations/base.py": []
    },
    "django__django-16816": {
        "django/contrib/admin/checks.py": [
            "BaseModelAdminChecks",
            "ModelAdminChecks"
        ],
        "django/contrib/admin/options.py": [
            "BaseModelAdmin",
            "ModelAdmin"
        ],
        "django/contrib/admin/utils.py": [
            "_get_non_gfk_field",
            "label_for_field",
            "lookup_field"
        ]
    },
    "django__django-16820": {
        "django/db/migrations/operations/models.py": [
            "AlterIndexTogether",
            "AddIndex",
            "RemoveIndex"
        ],
        "django/db/migrations/autodetector.py": [
            "MigrationAutodetector.generate_removed_altered_index_together",
            "MigrationAutodetector.generate_altered_index_together",
            "MigrationAutodetector._get_altered_foo_together_operations",
            "MigrationAutodetector._generate_removed_altered_foo_together",
            "MigrationAutodetector._generate_altered_foo_together"
        ],
        "django/db/migrations/optimizer.py": [
            "MigrationOptimizer.optimize",
            "MigrationOptimizer.optimize_inner"
        ]
    },
    "django__django-16873": {
        "django/template/defaultfilters.py": [
            "join"
        ],
        "django/template/base.py": [
            "FilterExpression",
            "Variable"
        ],
        "django/template/engine.py": []
    },
    "django__django-16910": {
        "django/db/models/query.py": [
            "QuerySet",
            "QuerySet.only",
            "QuerySet.select_related",
            "QuerySet._fetch_all"
        ],
        "django/db/models/sql/query.py": [
            "Query",
            "Query.get_select_mask",
            "Query._get_only_select_mask",
            "Query._get_defer_select_mask"
        ],
        "django/db/models/sql/compiler.py": [
            "SQLCompiler",
            "SQLCompiler.get_default_columns",
            "SQLCompiler.get_related_selections"
        ]
    },
    "django__django-17051": {
        "django/db/models/query.py": [
            "QuerySet.bulk_create",
            "QuerySet._insert",
            "QuerySet._batched_insert"
        ],
        "django/db/backends/postgresql/operations.py": [
            "DatabaseOperations.return_insert_columns",
            "DatabaseOperations.bulk_insert_sql",
            "DatabaseOperations.on_conflict_suffix_sql"
        ],
        "django/db/backends/base/operations.py": [
            "BaseDatabaseOperations.return_insert_columns",
            "BaseDatabaseOperations.on_conflict_suffix_sql"
        ]
    },
    "django__django-17087": {
        "django/db/models/fields/__init__.py": [
            "Field",
            "Field.get_default",
            "Field._get_default",
            "Field.has_default"
        ],
        "django/db/migrations/writer.py": [
            "MigrationWriter",
            "MigrationWriter.serialize"
        ],
        "django/db/migrations/serializer.py": [
            "DeconstructableSerializer",
            "ModelFieldSerializer",
            "serializer_factory"
        ]
    },
    "matplotlib__matplotlib-18869": {
        "lib/matplotlib/__init__.py": [
            "RcParams"
        ],
        "lib/matplotlib/_api/__init__.py": [
            "classproperty"
        ],
        "matplotlib/setup.py": []
    },
    "matplotlib__matplotlib-22711": {
        "lib/matplotlib/widgets.py": [
            "RangeSlider",
            "RangeSlider.set_val"
        ],
        "examples/widgets/range_slider.py": [],
        "lib/matplotlib/axis.py": []
    },
    "matplotlib__matplotlib-22835": {
        "lib/matplotlib/artist.py": [
            "Artist.format_cursor_data",
            "Artist.get_cursor_data"
        ],
        "lib/matplotlib/colors.py": [
            "BoundaryNorm",
            "Normalize"
        ],
        "lib/matplotlib/backend_bases.py": [
            "LocationEvent",
            "MouseEvent"
        ]
    },
    "matplotlib__matplotlib-23299": {
        "lib/matplotlib/_pylab_helpers.py": [
            "Gcf"
        ],
        "lib/matplotlib/__init__.py": [
            "get_backend",
            "rc_context",
            "use"
        ],
        "lib/matplotlib/backends/__init__.py": []
    },
    "matplotlib__matplotlib-23314": {
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D"
        ],
        "lib/matplotlib/projections/__init__.py": [
            "ProjectionRegistry"
        ],
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase"
        ]
    },
    "matplotlib__matplotlib-23476": {
        "lib/matplotlib/figure.py": [
            "Figure",
            "Figure.__setstate__",
            "Figure._get_dpi",
            "Figure._set_dpi"
        ],
        "lib/matplotlib/backend_bases.py": [
            "FigureCanvasBase",
            "FigureCanvasBase._set_device_pixel_ratio",
            "FigureCanvasBase.get_width_height"
        ],
        "lib/matplotlib/backends/backend_macosx.py": [
            "FigureCanvasMac",
            "FigureCanvasMac.__init__",
            "FigureCanvasMac.resize"
        ]
    },
    "matplotlib__matplotlib-23562": {
        "lib/mpl_toolkits/mplot3d/art3d.py": [
            "Poly3DCollection",
            "Poly3DCollection.get_facecolors"
        ],
        "lib/matplotlib/collections.py": [
            "Collection",
            "PolyCollection"
        ],
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D.plot_surface"
        ]
    },
    "matplotlib__matplotlib-23563": {
        "lib/mpl_toolkits/mplot3d/art3d.py": [
            "Line3D",
            "Line3D.draw",
            "Line3D.set_3d_properties"
        ],
        "lib/mpl_toolkits/mplot3d/axes3d.py": [
            "Axes3D",
            "Axes3D.plot",
            "Axes3D.draw"
        ],
        "lib/matplotlib/lines.py": [
            "Line2D",
            "Line2D.draw"
        ]
    },
    "matplotlib__matplotlib-23913": {
        "lib/matplotlib/legend.py": [
            "Legend",
            "DraggableLegend"
        ],
        "examples/text_labels_and_annotations/legend.py": [],
        "examples/text_labels_and_annotations/legend_demo.py": []
    },
    "matplotlib__matplotlib-23964": {
        "lib/matplotlib/backends/backend_ps.py": [
            "RendererPS",
            "RendererPS.draw_text",
            "RendererPS.draw_tex"
        ],
        "lib/matplotlib/text.py": [
            "Text",
            "Text.draw"
        ],
        "lib/matplotlib/backend_bases.py": [
            "RendererBase",
            "RendererBase.draw_text",
            "RendererBase.draw_tex"
        ]
    },
    "matplotlib__matplotlib-23987": {
        "lib/matplotlib/figure.py": [
            "Figure",
            "Figure.subplots_adjust",
            "Figure.set_layout_engine",
            "Figure._check_layout_engines_compat"
        ],
        "lib/matplotlib/layout_engine.py": [
            "LayoutEngine",
            "ConstrainedLayoutEngine",
            "PlaceHolderLayoutEngine"
        ],
        "lib/matplotlib/_constrained_layout.py": [
            "do_constrained_layout"
        ]
    },
    "matplotlib__matplotlib-24149": {
        "lib/matplotlib/axes/_axes.py": [
            "Axes._convert_dx",
            "Axes.bar"
        ],
        "lib/matplotlib/cbook/__init__.py": [
            "_safe_first_finite",
            "sanitize_sequence"
        ],
        "lib/matplotlib/collections.py": [
            "Collection"
        ]
    },
    "matplotlib__matplotlib-24265": {
        "lib/matplotlib/style/core.py": [
            "reload_library",
            "read_style_directory",
            "update_user_library",
            "update_nested_dict"
        ],
        "lib/matplotlib/pyplot.py": [],
        "lib/matplotlib/style/__init__.py": []
    },
    "matplotlib__matplotlib-24334": {
        "lib/matplotlib/axis.py": [
            "Axis",
            "Axis.set_ticks",
            "Axis.set_ticklabels"
        ],
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase",
            "_AxesBase.set_xticks",
            "_AxesBase.set_yticks"
        ],
        "lib/matplotlib/ticker.py": []
    },
    "matplotlib__matplotlib-24970": {
        "lib/matplotlib/colors.py": [
            "ListedColormap",
            "ListedColormap._init"
        ],
        "lib/matplotlib/cm.py": [],
        "lib/matplotlib/_cm.py": []
    },
    "matplotlib__matplotlib-25079": {
        "lib/matplotlib/colors.py": [
            "Normalize",
            "LogNorm",
            "make_norm_from_scale"
        ],
        "lib/matplotlib/cm.py": [
            "ScalarMappable",
            "_auto_norm_from_scale"
        ],
        "lib/matplotlib/colorbar.py": [
            "Colorbar"
        ]
    },
    "matplotlib__matplotlib-25311": {
        "lib/matplotlib/legend.py": [
            "DraggableLegend",
            "Legend"
        ],
        "lib/matplotlib/backends/backend_qt.py": [
            "FigureCanvasQT"
        ],
        "lib/matplotlib/backend_bases.py": [
            "FigureCanvasBase"
        ]
    },
    "matplotlib__matplotlib-25332": {
        "lib/matplotlib/figure.py": [
            "Figure.__getstate__",
            "Figure.__setstate__",
            "Figure.align_labels",
            "Figure.align_xlabels",
            "Figure.align_ylabels"
        ],
        "lib/matplotlib/text.py": [
            "Text",
            "Text.__getstate__"
        ],
        "lib/matplotlib/artist.py": [
            "Artist.__getstate__"
        ]
    },
    "matplotlib__matplotlib-25433": {
        "lib/matplotlib/widgets.py": [
            "RangeSlider",
            "Widget",
            "AxesWidget",
            "SliderBase"
        ],
        "lib/matplotlib/pyplot.py": [
            "clf",
            "draw"
        ],
        "lib/matplotlib/backend_bases.py": [
            "FigureCanvasBase"
        ]
    },
    "matplotlib__matplotlib-25442": {
        "lib/matplotlib/offsetbox.py": [
            "DraggableBase",
            "DraggableBase._check_still_parented",
            "DraggableBase.disconnect",
            "DraggableBase.on_release"
        ],
        "lib/matplotlib/backend_bases.py": [
            "FigureCanvasBase",
            "FigureCanvasBase.mpl_disconnect"
        ],
        "lib/matplotlib/backends/backend_qt.py": []
    },
    "matplotlib__matplotlib-25498": {
        "lib/matplotlib/colorbar.py": [
            "Colorbar.update_normal",
            "Colorbar.update_bruteforce",
            "Colorbar._process_values",
            "Colorbar._uniform_y"
        ],
        "lib/matplotlib/colors.py": [
            "LogNorm",
            "Normalize"
        ],
        "lib/matplotlib/figure.py": [
            "Figure.colorbar"
        ]
    },
    "matplotlib__matplotlib-26011": {
        "lib/matplotlib/axes/_base.py": [
            "_AxesBase.set_xlim"
        ],
        "lib/matplotlib/axes/_axes.py": [
            "Axes"
        ],
        "lib/matplotlib/backend_bases.py": [
            "FigureCanvasBase"
        ]
    },
    "matplotlib__matplotlib-26020": {
        "lib/mpl_toolkits/axes_grid1/axes_grid.py": [
            "_tick_only",
            "Grid",
            "ImageGrid",
            "AxesGrid"
        ],
        "lib/mpl_toolkits/axes_grid1/mpl_axes.py": [
            "Axes",
            "SimpleAxisArtist",
            "SimpleChainedObjects"
        ],
        "lib/mpl_toolkits/axes_grid1/axes_divider.py": [
            "Divider",
            "AxesDivider"
        ]
    },
    "mwaskom__seaborn-2848": {
        "seaborn/axisgrid.py": [
            "PairGrid",
            "PairGrid._map_bivariate",
            "PairGrid._plot_bivariate"
        ],
        "seaborn/relational.py": [
            "_ScatterPlotter",
            "scatterplot"
        ],
        "seaborn/_decorators.py": []
    },
    "mwaskom__seaborn-3010": {
        "seaborn/_stats/regression.py": [
            "PolyFit",
            "PolyFit._fit_predict"
        ],
        "seaborn/_core/plot.py": [
            "Plotter._compute_stats"
        ],
        "seaborn/_core/groupby.py": [
            "GroupBy.apply"
        ]
    },
    "mwaskom__seaborn-3190": {
        "seaborn/_core/scales.py": [
            "ContinuousBase",
            "Scale",
            "Nominal"
        ],
        "seaborn/_core/plot.py": [
            "Plot._plot",
            "Plotter._setup_scales",
            "Plotter._get_scale"
        ],
        "seaborn/_marks/bar.py": [
            "Bar",
            "BarBase"
        ]
    },
    "mwaskom__seaborn-3407": {
        "seaborn/axisgrid.py": [
            "PairGrid",
            "pairplot",
            "PairGrid.map_diag",
            "PairGrid._plot_bivariate",
            "PairGrid._find_numeric_cols"
        ],
        "seaborn/_core/data.py": [
            "PlotData"
        ],
        "seaborn/matrix.py": []
    },
    "pallets__flask-4045": {
        "src/flask/blueprints.py": [
            "Blueprint",
            "Blueprint.__init__"
        ],
        "src/flask/debughelpers.py": [],
        "src/flask/__init__.py": []
    },
    "pallets__flask-4992": {
        "src/flask/config.py": [
            "Config.from_file"
        ],
        "src/flask/helpers.py": [],
        "src/flask/scaffold.py": []
    },
    "pallets__flask-5063": {
        "src/flask/cli.py": [
            "routes_command"
        ],
        "src/flask/app.py": [
            "Flask"
        ],
        "src/flask/blueprints.py": [
            "Blueprint",
            "BlueprintSetupState"
        ]
    },
    "psf__requests-1963": {
        "requests/sessions.py": [
            "SessionRedirectMixin",
            "Session.resolve_redirects",
            "Session.send",
            "Session.request"
        ],
        "requests/models.py": [
            "PreparedRequest",
            "Response.is_redirect"
        ],
        "requests/adapters.py": [
            "HTTPAdapter.send"
        ]
    },
    "psf__requests-2148": {
        "requests/exceptions.py": [
            "ConnectionError",
            "RequestException"
        ],
        "requests/packages/urllib3/response.py": [
            "HTTPResponse",
            "HTTPResponse.read",
            "HTTPResponse.stream"
        ],
        "requests/models.py": [
            "Response",
            "Response.iter_content",
            "Response.content",
            "Response.text"
        ]
    },
    "psf__requests-2317": {
        "requests/sessions.py": [
            "Session.request",
            "Session.prepare_request"
        ],
        "requests/utils.py": [
            "to_native_string"
        ],
        "requests/compat.py": []
    },
    "psf__requests-2674": {
        "requests/exceptions.py": [
            "RequestException",
            "HTTPError",
            "ConnectionError",
            "Timeout",
            "ContentDecodingError"
        ],
        "requests/packages/urllib3/exceptions.py": [
            "HTTPError",
            "DecodeError",
            "TimeoutError",
            "ReadTimeoutError",
            "ConnectTimeoutError"
        ],
        "requests/adapters.py": [
            "HTTPAdapter",
            "HTTPAdapter.send",
            "HTTPAdapter.build_response"
        ]
    },
    "psf__requests-3362": {
        "requests/models.py": [
            "Response",
            "Response.iter_content",
            "Response.text",
            "Response.content"
        ],
        "requests/utils.py": [
            "stream_decode_response_unicode",
            "get_unicode_from_response",
            "get_encoding_from_headers"
        ],
        "requests/adapters.py": []
    },
    "psf__requests-863": {
        "requests/models.py": [
            "Request",
            "Request.register_hook",
            "Request._build_response"
        ],
        "requests/hooks.py": [
            "dispatch_hook"
        ],
        "requests/sessions.py": [
            "merge_kwargs",
            "Session"
        ]
    },
    "pydata__xarray-3364": {
        "xarray/core/concat.py": [
            "concat",
            "_calc_concat_over",
            "_dataset_concat",
            "_dataarray_concat"
        ],
        "xarray/core/combine.py": [
            "_combine_nd",
            "_combine_all_along_first_dim",
            "_combine_1d",
            "combine_nested",
            "combine_by_coords",
            "auto_combine",
            "_auto_concat"
        ],
        "xarray/core/dataset.py": [
            "Dataset"
        ]
    },
    "pydata__xarray-4094": {
        "xarray/core/dataset.py": [
            "Dataset.to_stacked_array",
            "Dataset.unstack"
        ],
        "xarray/core/dataarray.py": [
            "DataArray.to_unstacked_dataset",
            "DataArray.unstack"
        ],
        "xarray/core/merge.py": [
            "merge_core",
            "merge_collected",
            "MergeError"
        ]
    },
    "pydata__xarray-4248": {
        "xarray/core/formatting.py": [
            "summarize_coord",
            "summarize_datavar",
            "dataset_repr"
        ],
        "xarray/core/dataset.py": [
            "Dataset"
        ],
        "xarray/core/variable.py": [
            "Variable"
        ]
    },
    "pydata__xarray-4493": {
        "xarray/core/dataset.py": [
            "Dataset.update",
            "Dataset._replace",
            "Dataset._replace_with_new_dims",
            "Dataset._replace_vars_and_dims"
        ],
        "xarray/core/dataarray.py": [
            "DataArray._to_temp_dataset",
            "DataArray._from_temp_dataset"
        ],
        "xarray/core/dask_array_ops.py": []
    },
    "pydata__xarray-5131": {
        "xarray/core/groupby.py": [
            "GroupBy.__repr__",
            "DatasetGroupBy"
        ],
        "xarray/core/formatting.py": [
            "_mapping_repr"
        ],
        "xarray/core/formatting_html.py": []
    },
    "pylint-dev__pylint-5859": {
        "pylint/checkers/misc.py": [
            "EncodingChecker"
        ],
        "pylint/utils/pragma_parser.py": [],
        "pylint/checkers/base_checker.py": []
    },
    "pylint-dev__pylint-6506": {
        "pylint/config/exceptions.py": [
            "_UnrecognizedOptionError"
        ],
        "pylint/config/config_initialization.py": [
            "_config_initialization"
        ],
        "pylint/lint/run.py": [
            "Run"
        ]
    },
    "pylint-dev__pylint-7080": {
        "pylint/lint/expand_modules.py": [
            "_is_in_ignore_list_re",
            "_is_ignored_file",
            "expand_modules"
        ],
        "pylint/lint/pylinter.py": [
            "_expand_files",
            "_discover_files",
            "check"
        ],
        "pylint/lint/run.py": [
            "Run"
        ]
    },
    "pylint-dev__pylint-7114": {
        "pylint/lint/expand_modules.py": [
            "_modpath_from_file",
            "expand_modules"
        ],
        "pylint/lint/pylinter.py": [
            "_expand_files",
            "_iterate_file_descrs",
            "should_analyze_file",
            "_discover_files"
        ],
        "pylint/lint/utils.py": [
            "fix_import_path",
            "_patch_sys_path"
        ]
    },
    "pylint-dev__pylint-7228": {
        "pylint/config/option.py": [
            "_regexp_validator",
            "Option"
        ],
        "pylint/config/arguments_manager.py": [
            "_ArgumentsManager._parse_configuration_file"
        ],
        "pylint/config/option_parser.py": []
    },
    "pylint-dev__pylint-7993": {
        "pylint/reporters/text.py": [
            "TextReporter",
            "ColorizedTextReporter"
        ],
        "pylint/message/message.py": [
            "Message",
            "Message.format"
        ],
        "pylint/message/message_definition.py": [
            "MessageDefinition"
        ]
    },
    "pytest-dev__pytest-11143": {
        "src/_pytest/assertion/rewrite.py": [
            "AssertionRewriter",
            "_rewrite_test",
            "rewrite_asserts",
            "is_rewrite_disabled"
        ],
        "src/_pytest/python.py": [
            "Module",
            "_importtestmodule"
        ],
        "src/_pytest/runner.py": []
    },
    "pytest-dev__pytest-11148": {
        "src/_pytest/logging.py": [
            "LogCaptureHandler",
            "LogCaptureFixture",
            "LoggingPlugin",
            "_FileHandler",
            "_LiveLoggingStreamHandler",
            "_LiveLoggingNullHandler"
        ],
        "src/_pytest/fixtures.py": [
            "FixtureRequest",
            "SubRequest",
            "FixtureDef",
            "FixtureManager",
            "pytest_fixture_setup",
            "resolve_fixture_function"
        ],
        "src/_pytest/__init__.py": []
    },
    "pytest-dev__pytest-5103": {
        "src/_pytest/assertion/rewrite.py": [
            "AssertionRewriter",
            "visit_Call_35",
            "visit_Call_legacy",
            "visit_Assert"
        ],
        "src/_pytest/assertion/util.py": [
            "assertrepr_compare",
            "_format_lines",
            "isiterable",
            "_compare_eq_iterable"
        ],
        "src/_pytest/assertion/__init__.py": []
    },
    "pytest-dev__pytest-5221": {
        "src/_pytest/fixtures.py": [
            "FixtureDef",
            "FixtureFunctionMarker",
            "FixtureManager"
        ],
        "src/_pytest/helpconfig.py": [
            "showhelp",
            "pytest_addoption"
        ],
        "src/_pytest/config/argparsing.py": []
    },
    "pytest-dev__pytest-5227": {
        "src/_pytest/logging.py": [
            "ColoredLevelFormatter",
            "LoggingPlugin",
            "_LiveLoggingStreamHandler"
        ],
        "src/_pytest/terminal.py": [
            "TerminalReporter"
        ],
        "src/_pytest/config/__init__.py": [
            "Config"
        ]
    },
    "pytest-dev__pytest-5413": {
        "src/_pytest/python_api.py": [
            "RaisesContext",
            "raises"
        ],
        "src/_pytest/_code/code.py": [
            "ExceptionInfo"
        ],
        "src/_pytest/outcomes.py": []
    },
    "pytest-dev__pytest-5495": {
        "src/_pytest/assertion/rewrite.py": [
            "_saferepr",
            "_format_assertmsg",
            "_call_reprcompare",
            "AssertionRewriter"
        ],
        "src/_pytest/assertion/util.py": [
            "assertrepr_compare",
            "_diff_text",
            "_compare_eq_verbose",
            "_compare_eq_sequence"
        ],
        "src/_pytest/assertion/__init__.py": []
    },
    "pytest-dev__pytest-5692": {
        "src/_pytest/junitxml.py": [
            "LogXML",
            "_NodeReporter",
            "pytest_configure",
            "pytest_sessionstart",
            "pytest_sessionfinish"
        ],
        "src/_pytest/reports.py": [],
        "src/_pytest/nodes.py": []
    },
    "pytest-dev__pytest-6116": {
        "src/_pytest/config/argparsing.py": [
            "Parser",
            "OptionGroup",
            "MyOptionParser"
        ],
        "src/_pytest/main.py": [
            "pytest_addoption",
            "Session"
        ],
        "src/_pytest/config/__init__.py": []
    },
    "pytest-dev__pytest-7168": {
        "src/_pytest/_io/saferepr.py": [
            "_format_repr_exception",
            "SafeRepr"
        ],
        "src/_pytest/reports.py": [
            "TestReport"
        ],
        "src/_pytest/_code/code.py": [
            "ExceptionInfo",
            "FormattedExcinfo"
        ]
    },
    "pytest-dev__pytest-7220": {
        "src/_pytest/terminal.py": [
            "_locationline",
            "_getfailureheadline",
            "TerminalReporter"
        ],
        "src/_pytest/nodes.py": [
            "get_fslocation_from_item",
            "Item"
        ],
        "src/_pytest/fixtures.py": []
    },
    "pytest-dev__pytest-7373": {
        "src/_pytest/mark/evaluate.py": [
            "cached_eval",
            "MarkEvaluator"
        ],
        "src/_pytest/skipping.py": [
            "pytest_runtest_setup",
            "pytest_pyfunc_call",
            "check_xfail_no_run",
            "check_strict_xfail",
            "pytest_runtest_makereport"
        ],
        "src/_pytest/mark/__init__.py": [
            "pytest_collection_modifyitems",
            "pytest_configure",
            "pytest_unconfigure"
        ]
    },
    "pytest-dev__pytest-7432": {
        "src/_pytest/skipping.py": [
            "pytest_runtest_makereport"
        ],
        "src/_pytest/reports.py": [
            "TestReport",
            "BaseReport"
        ],
        "src/_pytest/runner.py": [
            "pytest_runtest_makereport",
            "CallInfo"
        ]
    },
    "pytest-dev__pytest-7490": {
        "src/_pytest/skipping.py": [
            "evaluate_xfail_marks",
            "pytest_runtest_call",
            "pytest_runtest_makereport"
        ],
        "src/_pytest/mark/structures.py": [
            "Mark",
            "MarkDecorator",
            "MarkGenerator"
        ],
        "src/_pytest/nodes.py": [
            "Node",
            "Node.add_marker",
            "Node.iter_markers"
        ]
    },
    "pytest-dev__pytest-8365": {
        "src/_pytest/tmpdir.py": [
            "get_user",
            "TempPathFactory",
            "TempdirFactory"
        ],
        "src/_pytest/pathlib.py": [
            "make_numbered_dir",
            "make_numbered_dir_with_cleanup"
        ],
        "src/_pytest/fixtures.py": []
    },
    "pytest-dev__pytest-8906": {
        "src/_pytest/outcomes.py": [
            "Skipped",
            "skip"
        ],
        "src/_pytest/skipping.py": [
            "Skip",
            "evaluate_skip_marks",
            "pytest_runtest_setup"
        ],
        "doc/en/example/multipython.py": []
    },
    "pytest-dev__pytest-9359": {
        "src/_pytest/assertion/rewrite.py": [
            "AssertionRewriter",
            "_get_assertion_exprs",
            "rewrite_asserts",
            "_write_pyc_fp",
            "_rewrite_test"
        ],
        "src/_pytest/assertion/__init__.py": [
            "AssertionState",
            "install_importhook"
        ],
        "src/_pytest/assertion/util.py": []
    },
    "scikit-learn__scikit-learn-10297": {
        "sklearn/linear_model/ridge.py": [
            "RidgeClassifierCV",
            "_BaseRidgeCV",
            "_RidgeGCV"
        ],
        "sklearn/linear_model/__init__.py": [],
        "examples/linear_model/plot_ridge_path.py": []
    },
    "scikit-learn__scikit-learn-10508": {
        "sklearn/preprocessing/label.py": [
            "LabelEncoder"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "column_or_1d"
        ],
        "sklearn/preprocessing/_target.py": []
    },
    "scikit-learn__scikit-learn-10949": {
        "sklearn/utils/validation.py": [
            "check_array",
            "as_float_array"
        ],
        "sklearn/utils/estimator_checks.py": [],
        "sklearn/base.py": []
    },
    "scikit-learn__scikit-learn-11040": {
        "sklearn/neighbors/base.py": [
            "NeighborsBase",
            "KNeighborsMixin"
        ],
        "sklearn/neighbors/unsupervised.py": [
            "NearestNeighbors"
        ],
        "sklearn/neighbors/__init__.py": []
    },
    "scikit-learn__scikit-learn-11281": {
        "sklearn/mixture/gaussian_mixture.py": [
            "GaussianMixture"
        ],
        "sklearn/mixture/base.py": [
            "BaseMixture"
        ],
        "sklearn/mixture/bayesian_mixture.py": [
            "BayesianGaussianMixture"
        ]
    },
    "scikit-learn__scikit-learn-12471": {
        "sklearn/preprocessing/_encoders.py": [
            "_BaseEncoder",
            "OneHotEncoder",
            "OneHotEncoder._transform_new",
            "OneHotEncoder._transform"
        ],
        "sklearn/preprocessing/base.py": [],
        "sklearn/preprocessing/__init__.py": []
    },
    "scikit-learn__scikit-learn-13142": {
        "sklearn/mixture/base.py": [
            "BaseMixture.fit",
            "BaseMixture.fit_predict",
            "BaseMixture.predict",
            "BaseMixture._initialize_parameters",
            "BaseMixture._e_step"
        ],
        "sklearn/mixture/gaussian_mixture.py": [
            "GaussianMixture",
            "_estimate_gaussian_parameters",
            "_compute_precision_cholesky"
        ],
        "sklearn/mixture/__init__.py": []
    },
    "scikit-learn__scikit-learn-13241": {
        "sklearn/decomposition/kernel_pca.py": [
            "KernelPCA",
            "KernelPCA._fit_transform",
            "KernelPCA._get_kernel"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "check_random_state"
        ],
        "sklearn/decomposition/base.py": []
    },
    "scikit-learn__scikit-learn-13439": {
        "sklearn/pipeline.py": [
            "Pipeline"
        ],
        "sklearn/utils/metaestimators.py": [
            "_BaseComposition"
        ],
        "sklearn/utils/estimator_checks.py": [
            "check_estimator",
            "_yield_all_checks",
            "check_pipeline_consistency"
        ]
    },
    "scikit-learn__scikit-learn-13496": {
        "sklearn/ensemble/iforest.py": [
            "IsolationForest"
        ],
        "examples/ensemble/plot_isolation_forest.py": [
            "plot_isolation_forest"
        ],
        "sklearn/ensemble/forest.py": [
            "BaseForest"
        ]
    },
    "scikit-learn__scikit-learn-13497": {
        "sklearn/feature_selection/mutual_info_.py": [
            "_estimate_mi",
            "mutual_info_regression",
            "mutual_info_classif"
        ],
        "sklearn/utils/validation.py": [],
        "sklearn/utils/estimator_checks.py": []
    },
    "scikit-learn__scikit-learn-13584": {
        "sklearn/linear_model/logistic.py": [
            "LogisticRegressionCV",
            "_logistic_regression_path",
            "_log_reg_scoring_path"
        ],
        "sklearn/_config.py": [
            "set_config"
        ],
        "sklearn/base.py": [
            "BaseEstimator.__repr__"
        ]
    },
    "scikit-learn__scikit-learn-13779": {
        "sklearn/ensemble/voting.py": [
            "_parallel_fit_estimator",
            "VotingClassifier",
            "VotingRegressor"
        ],
        "sklearn/ensemble/base.py": [],
        "sklearn/utils/validation.py": []
    },
    "scikit-learn__scikit-learn-14087": {
        "sklearn/linear_model/logistic.py": [
            "LogisticRegressionCV",
            "_logistic_regression_path",
            "_log_reg_scoring_path"
        ],
        "sklearn/linear_model/__init__.py": [],
        "sklearn/linear_model/base.py": []
    },
    "scikit-learn__scikit-learn-14092": {
        "sklearn/neighbors/nca.py": [
            "NeighborhoodComponentsAnalysis"
        ],
        "sklearn/model_selection/_search.py": [
            "ParameterGrid",
            "_check_param_grid",
            "GridSearchCV"
        ],
        "sklearn/utils/validation.py": [
            "check_scalar"
        ]
    },
    "scikit-learn__scikit-learn-14894": {
        "sklearn/svm/base.py": [
            "BaseLibSVM._sparse_fit",
            "BaseLibSVM._get_coef",
            "BaseLibSVM"
        ],
        "sklearn/svm/classes.py": [
            "SVR"
        ],
        "sklearn/svm/bounds.py": []
    },
    "scikit-learn__scikit-learn-14983": {
        "sklearn/model_selection/_split.py": [
            "_RepeatedSplits",
            "RepeatedKFold",
            "RepeatedStratifiedKFold",
            "_build_repr"
        ],
        "sklearn/base.py": [
            "BaseEstimator"
        ],
        "sklearn/utils/_pprint.py": [
            "_EstimatorPrettyPrinter"
        ]
    },
    "scikit-learn__scikit-learn-15512": {
        "sklearn/cluster/_affinity_propagation.py": [
            "affinity_propagation",
            "AffinityPropagation"
        ],
        "examples/cluster/plot_affinity_propagation.py": [],
        "sklearn/cluster/__init__.py": []
    },
    "scikit-learn__scikit-learn-15535": {
        "sklearn/metrics/cluster/_unsupervised.py": [
            "check_number_of_labels"
        ],
        "sklearn/metrics/cluster/__init__.py": [],
        "sklearn/metrics/cluster/setup.py": []
    },
    "scikit-learn__scikit-learn-25500": {
        "sklearn/calibration.py": [
            "_CalibratedClassifier",
            "CalibratedClassifierCV",
            "_fit_calibrator"
        ],
        "sklearn/isotonic.py": [
            "IsotonicRegression"
        ],
        "sklearn/utils/_set_output.py": [
            "_wrap_in_pandas_container",
            "_wrap_data_with_container"
        ]
    },
    "scikit-learn__scikit-learn-25570": {
        "sklearn/compose/_column_transformer.py": [
            "ColumnTransformer",
            "_hstack",
            "_add_prefix_for_feature_names_out",
            "_iter",
            "_is_empty_column_selection"
        ],
        "sklearn/utils/_set_output.py": [
            "_wrap_in_pandas_container",
            "_wrap_data_with_container"
        ],
        "sklearn/pipeline.py": [
            "Pipeline"
        ]
    },
    "scikit-learn__scikit-learn-25638": {
        "sklearn/utils/multiclass.py": [
            "unique_labels",
            "type_of_target",
            "_unique_multiclass"
        ],
        "sklearn/utils/validation.py": [
            "check_array",
            "_pandas_dtype_needs_early_conversion"
        ],
        "sklearn/utils/_encode.py": [
            "_unique",
            "_unique_np",
            "_encode"
        ]
    },
    "scikit-learn__scikit-learn-25747": {
        "sklearn/pipeline.py": [
            "FeatureUnion",
            "_transform_one",
            "_hstack"
        ],
        "sklearn/utils/_set_output.py": [
            "_wrap_in_pandas_container",
            "_wrap_data_with_container",
            "_wrap_method_output"
        ],
        "sklearn/compose/__init__.py": []
    },
    "sphinx-doc__sphinx-10325": {
        "sphinx/ext/autodoc/__init__.py": [
            "inherited_members_option",
            "ClassDocumenter",
            "ModuleDocumenter",
            "get_class_members"
        ],
        "sphinx/ext/autodoc/directive.py": [],
        "sphinx/ext/autodoc/importer.py": []
    },
    "sphinx-doc__sphinx-10451": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints",
            "modify_field_list",
            "augment_descriptions_with_types"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "MethodDocumenter",
            "FunctionDocumenter"
        ],
        "sphinx/domains/python.py": [
            "PyTypedField"
        ]
    },
    "sphinx-doc__sphinx-11445": {
        "sphinx/domains/std.py": [
            "StandardDomain",
            "process_doc"
        ],
        "sphinx/environment/collectors/title.py": [
            "TitleCollector",
            "process_doc"
        ],
        "sphinx/transforms/references.py": [
            "SphinxDomains"
        ]
    },
    "sphinx-doc__sphinx-7686": {
        "sphinx/ext/autosummary/generate.py": [
            "generate_autosummary_content",
            "generate_autosummary_docs"
        ],
        "sphinx/ext/autosummary/__init__.py": [
            "Autosummary",
            "import_by_name",
            "_import_by_name"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "get_module_members",
            "get_object_members"
        ]
    },
    "sphinx-doc__sphinx-7738": {
        "sphinx/ext/napoleon/docstring.py": [
            "GoogleDocstring",
            "NumpyDocstring"
        ],
        "sphinx/domains/python.py": [
            "PyAttribute"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "AttributeDocumenter",
            "InstanceAttributeDocumenter",
            "SlotsAttributeDocumenter"
        ]
    },
    "sphinx-doc__sphinx-7975": {
        "sphinx/builders/html/__init__.py": [
            "StandaloneHTMLBuilder.write_genindex",
            "StandaloneHTMLBuilder.gen_indices"
        ],
        "sphinx/domains/index.py": [
            "IndexDomain",
            "IndexDirective",
            "IndexRole"
        ],
        "sphinx/environment/collectors/indexentries.py": [
            "IndexEntriesCollector"
        ]
    },
    "sphinx-doc__sphinx-8273": {
        "sphinx/builders/manpage.py": [
            "ManualPageBuilder",
            "default_man_pages",
            "setup"
        ],
        "sphinx/writers/manpage.py": [
            "ManualPageWriter",
            "ManualPageTranslator"
        ],
        "sphinx/config.py": [
            "Config"
        ]
    },
    "sphinx-doc__sphinx-8282": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints"
        ],
        "sphinx/ext/autodoc/__init__.py": [
            "FunctionDocumenter",
            "MethodDocumenter"
        ],
        "sphinx/domains/python.py": [
            "PyFunction",
            "PyMethod"
        ]
    },
    "sphinx-doc__sphinx-8435": {
        "sphinx/ext/autodoc/__init__.py": [
            "DataDocumenter",
            "AttributeDocumenter",
            "InstanceAttributeDocumenter",
            "SlotsAttributeDocumenter"
        ],
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints"
        ],
        "sphinx/ext/autodoc/directive.py": []
    },
    "sphinx-doc__sphinx-8474": {
        "sphinx/builders/latex/__init__.py": [
            "LaTeXBuilder"
        ],
        "sphinx/builders/singlehtml.py": [
            "SingleFileHTMLBuilder",
            "SingleFileHTMLBuilder.assemble_toc_fignumbers",
            "SingleFileHTMLBuilder.assemble_toc_secnumbers"
        ],
        "sphinx/roles.py": [
            "XRefRole"
        ]
    },
    "sphinx-doc__sphinx-8506": {
        "sphinx/domains/std.py": [
            "Cmdoption",
            "OptionXRefRole"
        ],
        "sphinx/directives/other.py": [],
        "sphinx/util/docutils.py": []
    },
    "sphinx-doc__sphinx-8595": {
        "sphinx/ext/autodoc/__init__.py": [
            "ModuleDocumenter",
            "_All",
            "_Empty"
        ],
        "sphinx/ext/autodoc/importer.py": [
            "get_module_members"
        ],
        "sphinx/ext/autodoc/directive.py": []
    },
    "sphinx-doc__sphinx-8627": {
        "sphinx/ext/autodoc/typehints.py": [
            "record_typehints",
            "merge_typehints"
        ],
        "sphinx/domains/python.py": [
            "type_to_xref",
            "_parse_annotation",
            "PyXrefRole",
            "PythonDomain"
        ],
        "sphinx/ext/autodoc/__init__.py": []
    },
    "sphinx-doc__sphinx-8713": {
        "sphinx/ext/napoleon/docstring.py": [
            "GoogleDocstring._parse_other_parameters_section",
            "GoogleDocstring._parse_parameters_section",
            "GoogleDocstring._format_docutils_params",
            "GoogleDocstring._format_fields"
        ],
        "sphinx/ext/napoleon/__init__.py": [
            "Config"
        ],
        "sphinx/addnodes.py": []
    },
    "sphinx-doc__sphinx-8721": {
        "sphinx/ext/viewcode.py": [
            "should_generate_module_page",
            "collect_pages",
            "setup"
        ],
        "sphinx/builders/_epub_base.py": [
            "EpubBuilder"
        ],
        "sphinx/builders/epub3.py": [
            "Epub3Builder",
            "setup"
        ]
    },
    "sphinx-doc__sphinx-8801": {
        "sphinx/ext/autodoc/__init__.py": [
            "AttributeDocumenter",
            "ClassDocumenter",
            "DataDocumenter"
        ],
        "sphinx/domains/python.py": [
            "PyAttribute",
            "PyClasslike"
        ],
        "sphinx/ext/autodoc/directive.py": []
    },
    "sympy__sympy-11400": {
        "sympy/printing/ccode.py": [
            "CCodePrinter"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "sinc"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter"
        ]
    },
    "sympy__sympy-11870": {
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "exptrigsimp"
        ],
        "sympy/functions/elementary/exponential.py": [
            "exp"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "sin",
            "sinc"
        ]
    },
    "sympy__sympy-11897": {
        "sympy/printing/latex.py": [
            "LatexPrinter",
            "latex"
        ],
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter",
            "pretty",
            "pretty_print",
            "pprint"
        ],
        "sympy/printing/printer.py": [
            "Printer"
        ]
    },
    "sympy__sympy-12171": {
        "sympy/printing/mathematica.py": [
            "MCodePrinter",
            "MCodePrinter._print_Derivative",
            "MCodePrinter._print_Float"
        ],
        "sympy/printing/codeprinter.py": [
            "CodePrinter._print_Derivative"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-12236": {
        "sympy/polys/partfrac.py": [
            "apart",
            "apart_undetermined_coeffs",
            "apart_full_decomposition"
        ],
        "sympy/core/expr.py": [
            "Expr.apart"
        ],
        "sympy/polys/polytools.py": [
            "Poly"
        ]
    },
    "sympy__sympy-12419": {
        "sympy/matrices/expressions/matexpr.py": [
            "Identity",
            "MatrixElement",
            "MatrixExpr"
        ],
        "sympy/concrete/summations.py": [
            "Sum",
            "eval_sum",
            "eval_sum_direct",
            "eval_sum_symbolic"
        ],
        "sympy/assumptions/refine.py": [
            "refine"
        ]
    },
    "sympy__sympy-12454": {
        "sympy/matrices/matrices.py": [
            "MatrixProperties.is_upper",
            "a2idx"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix"
        ],
        "sympy/matrices/immutable.py": []
    },
    "sympy__sympy-12481": {
        "sympy/combinatorics/permutations.py": [
            "Permutation",
            "Permutation.__new__",
            "Permutation._af_new",
            "_af_rmul"
        ],
        "sympy/combinatorics/__init__.py": [],
        "sympy/combinatorics/perm_groups.py": []
    },
    "sympy__sympy-13031": {
        "sympy/matrices/common.py": [
            "MatrixShaping",
            "MatrixShaping.hstack",
            "MatrixShaping.vstack",
            "MatrixShaping._eval_col_join",
            "MatrixShaping._eval_row_join"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix",
            "MutableDenseMatrix"
        ],
        "sympy/matrices/matrices.py": [
            "MatrixBase"
        ]
    },
    "sympy__sympy-13043": {
        "sympy/integrals/intpoly.py": [
            "decompose",
            "clockwise_sort"
        ],
        "sympy/core/compatibility.py": [
            "ordered",
            "default_sort_key"
        ],
        "sympy/core/expr.py": []
    },
    "sympy__sympy-13146": {
        "sympy/simplify/simplify.py": [
            "simplify",
            "nsimplify"
        ],
        "sympy/core/power.py": [
            "Pow"
        ],
        "sympy/core/evalf.py": [
            "evalf",
            "evalf_pow",
            "EvalfMixin"
        ]
    },
    "sympy__sympy-13177": {
        "sympy/core/mod.py": [
            "Mod"
        ],
        "sympy/core/power.py": [
            "Pow"
        ],
        "sympy/core/numbers.py": [
            "Float",
            "Rational",
            "Integer"
        ]
    },
    "sympy__sympy-13437": {
        "sympy/functions/combinatorial/numbers.py": [
            "bell"
        ],
        "sympy/series/limits.py": [
            "limit",
            "heuristics",
            "Limit"
        ],
        "sympy/core/function.py": [
            "Function"
        ]
    },
    "sympy__sympy-13471": {
        "sympy/core/numbers.py": [
            "Float",
            "Float.__getnewargs__",
            "Float.__getstate__",
            "Float._hashable_content",
            "Float._as_mpf_val"
        ],
        "sympy/core/compatibility.py": [
            "with_metaclass"
        ],
        "sympy/core/basic.py": []
    },
    "sympy__sympy-13480": {
        "sympy/functions/elementary/hyperbolic.py": [
            "coth",
            "coth.eval"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "tan",
            "tan.eval"
        ],
        "sympy/core/function.py": [
            "Function"
        ]
    },
    "sympy__sympy-13647": {
        "sympy/matrices/common.py": [
            "MatrixShaping",
            "MatrixShaping._eval_col_insert",
            "MatrixShaping.col_insert"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix",
            "MutableDenseMatrix"
        ],
        "sympy/matrices/matrices.py": [
            "MatrixBase"
        ]
    },
    "sympy__sympy-13773": {
        "sympy/matrices/expressions/matmul.py": [
            "MatMul"
        ],
        "sympy/matrices/dense.py": [
            "DenseMatrix",
            "DenseMatrix._eval_matrix_mul",
            "DenseMatrix._eval_scalar_mul",
            "DenseMatrix._eval_scalar_rmul"
        ],
        "sympy/matrices/matrices.py": [
            "MatrixBase",
            "MatrixBase.multiply"
        ]
    },
    "sympy__sympy-13895": {
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/power.py": [
            "Pow"
        ],
        "sympy/core/expr.py": [
            "Expr._eval_power",
            "Expr.simplify"
        ]
    },
    "sympy__sympy-13915": {
        "sympy/core/expr.py": [
            "Expr",
            "Expr.subs",
            "Expr._eval_subs",
            "Expr.limit"
        ],
        "sympy/core/basic.py": [
            "Basic.subs",
            "Basic._subs",
            "Basic._eval_subs"
        ],
        "sympy/core/function.py": [
            "Function",
            "Function._eval_subs",
            "Subs",
            "Subs._eval_subs"
        ]
    },
    "sympy__sympy-14024": {
        "sympy/simplify/simplify.py": [
            "simplify"
        ],
        "sympy/core/power.py": [
            "Pow",
            "Pow._eval_power",
            "Pow._eval_is_positive",
            "Pow._eval_is_negative",
            "Pow._eval_is_real",
            "Pow._eval_subs",
            "Pow.as_base_exp"
        ],
        "sympy/core/expr.py": [
            "Expr._eval_power",
            "Expr.as_base_exp",
            "Expr.could_extract_minus_sign"
        ]
    },
    "sympy__sympy-14308": {
        "sympy/printing/pretty/pretty.py": [
            "_print_BasisDependent",
            "_print_Pow",
            "PrettyPrinter"
        ],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-14317": {
        "sympy/printing/latex.py": [
            "_print_Poly"
        ],
        "sympy/printing/printer.py": [
            "_as_ordered_terms"
        ],
        "sympy/polys/polytools.py": [
            "Poly"
        ]
    },
    "sympy__sympy-14396": {
        "sympy/polys/polyoptions.py": [
            "Domain",
            "Domain.preprocess"
        ],
        "sympy/polys/polytools.py": [
            "Poly",
            "build_options"
        ],
        "sympy/polys/domains/realfield.py": [
            "RealField"
        ]
    },
    "sympy__sympy-14774": {
        "sympy/printing/latex.py": [
            "LatexPrinter"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "acsc",
            "asec"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-14817": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_MatAdd",
            "PrettyPrinter"
        ],
        "sympy/matrices/expressions/matadd.py": [
            "MatAdd",
            "validate",
            "factor_of",
            "matrix_of",
            "combine",
            "merge_explicit",
            "canonicalize"
        ],
        "sympy/core/sympify.py": [
            "SympifyError",
            "sympify",
            "_sympify"
        ]
    },
    "sympy__sympy-15011": {
        "sympy/utilities/lambdify.py": [
            "lambdify",
            "_EvaluatorPrinter",
            "lambdastr"
        ],
        "sympy/printing/lambdarepr.py": [
            "LambdaPrinter",
            "TensorflowPrinter",
            "NumExprPrinter",
            "lambdarepr"
        ],
        "sympy/core/symbol.py": [
            "Symbol",
            "Dummy"
        ]
    },
    "sympy__sympy-15308": {
        "sympy/printing/latex.py": [
            "LatexPrinter",
            "_print_Tr",
            "_print_trace"
        ],
        "sympy/matrices/expressions/trace.py": [
            "Trace"
        ],
        "sympy/core/trace.py": [
            "Tr"
        ]
    },
    "sympy__sympy-15345": {
        "sympy/printing/mathematica.py": [
            "MCodePrinter",
            "mathematica_code"
        ],
        "sympy/printing/precedence.py": [
            "precedence"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-15346": {
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "_trigsimp",
            "__trigsimp"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "sin",
            "cos",
            "TrigonometricFunction"
        ],
        "sympy/core/numbers.py": [
            "Rational",
            "Float"
        ]
    },
    "sympy__sympy-15609": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_MatrixElement",
            "LatexPrinter._print_Indexed",
            "LatexPrinter._print_Sum"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixElement",
            "MatrixSymbol"
        ],
        "sympy/matrices/expressions/matmul.py": [
            "MatMul"
        ]
    },
    "sympy__sympy-15678": {
        "sympy/geometry/util.py": [
            "idiff"
        ],
        "sympy/core/function.py": [
            "Function",
            "AppliedUndef",
            "UndefinedFunction"
        ],
        "sympy/core/relational.py": [
            "Equality"
        ]
    },
    "sympy__sympy-16106": {
        "sympy/printing/mathml.py": [
            "MathMLContentPrinter",
            "MathMLContentPrinter._print_Indexed",
            "MathMLContentPrinter._print_IndexedBase",
            "MathMLPresentationPrinter",
            "MathMLPresentationPrinter._print_Indexed",
            "MathMLPresentationPrinter._print_IndexedBase"
        ],
        "sympy/tensor/indexed.py": [
            "Indexed",
            "IndexedBase"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-16281": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Product"
        ],
        "sympy/printing/pretty/pretty_symbology.py": [],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ]
    },
    "sympy__sympy-16503": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter._print_Sum"
        ],
        "sympy/printing/pretty/stringpict.py": [
            "stringPict",
            "prettyForm"
        ],
        "sympy/concrete/summations.py": []
    },
    "sympy__sympy-16792": {
        "sympy/utilities/autowrap.py": [
            "CythonCodeWrapper",
            "autowrap"
        ],
        "sympy/utilities/codegen.py": [
            "CCodeGen",
            "get_prototype",
            "_declare_arguments",
            "make_routine"
        ],
        "sympy/codegen/cnodes.py": []
    },
    "sympy__sympy-16988": {
        "sympy/sets/sets.py": [
            "Intersection",
            "Intersection._handle_finite_sets",
            "simplify_intersection"
        ],
        "sympy/sets/handlers/intersection.py": [
            "intersection_sets"
        ],
        "sympy/sets/__init__.py": []
    },
    "sympy__sympy-17022": {
        "sympy/utilities/lambdify.py": [
            "lambdify"
        ],
        "sympy/printing/pycode.py": [
            "NumPyPrinter",
            "SciPyPrinter"
        ],
        "sympy/printing/printer.py": [
            "Printer"
        ]
    },
    "sympy__sympy-17139": {
        "sympy/simplify/fu.py": [
            "_TR56",
            "TR6"
        ],
        "sympy/core/expr.py": [
            "Expr.__lt__"
        ],
        "sympy/simplify/trigsimp.py": [
            "futrig",
            "_futrig"
        ]
    },
    "sympy__sympy-17630": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockMatrix",
            "block_collapse",
            "bc_matmul"
        ],
        "sympy/core/numbers.py": [
            "Zero"
        ],
        "sympy/matrices/expressions/matmul.py": [
            "MatMul",
            "any_zeros"
        ]
    },
    "sympy__sympy-17655": {
        "sympy/geometry/point.py": [
            "Point.__add__",
            "Point.__mul__",
            "Point.__rmul__",
            "Point._normalize_dimension"
        ],
        "sympy/core/mul.py": [
            "Mul"
        ],
        "sympy/geometry/entity.py": [
            "GeometryEntity"
        ]
    },
    "sympy__sympy-18057": {
        "sympy/core/expr.py": [
            "Expr.__eq__"
        ],
        "sympy/core/sympify.py": [
            "sympify",
            "_sympify"
        ],
        "sympy/parsing/sympy_parser.py": [
            "parse_expr",
            "eval_expr",
            "stringify_expr"
        ]
    },
    "sympy__sympy-18087": {
        "sympy/simplify/trigsimp.py": [
            "trigsimp",
            "_trigsimp",
            "__trigsimp",
            "futrig",
            "_futrig"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "sin",
            "cos"
        ],
        "sympy/core/function.py": []
    },
    "sympy__sympy-18189": {
        "sympy/solvers/diophantine.py": [
            "diophantine",
            "_diop_quadratic",
            "diop_quadratic",
            "_sorted_tuple",
            "merge_solution",
            "diop_solve",
            "classify_diop"
        ],
        "sympy/core/symbol.py": [
            "Symbol"
        ],
        "sympy/solvers/solvers.py": []
    },
    "sympy__sympy-18199": {
        "sympy/ntheory/residue_ntheory.py": [
            "nthroot_mod",
            "_nthroot_mod1",
            "_nthroot_mod2"
        ],
        "sympy/ntheory/__init__.py": [],
        "sympy/ntheory/modular.py": []
    },
    "sympy__sympy-18532": {
        "sympy/core/basic.py": [
            "Basic.atoms",
            "Atom"
        ],
        "sympy/core/expr.py": [
            "AtomicExpr",
            "Expr"
        ],
        "sympy/core/function.py": [
            "Function",
            "WildFunction"
        ]
    },
    "sympy__sympy-18621": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockDiagMatrix",
            "BlockDiagMatrix._entry",
            "BlockDiagMatrix.blocks"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "OneMatrix",
            "MatrixExpr.as_explicit",
            "MatrixExpr._entry"
        ],
        "sympy/matrices/dense.py": [
            "MutableDenseMatrix",
            "MutableDenseMatrix._new"
        ]
    },
    "sympy__sympy-18698": {
        "sympy/polys/sqfreetools.py": [
            "dup_sqf_list",
            "dmp_sqf_list",
            "dup_sqf_list_include",
            "dmp_sqf_list_include"
        ],
        "sympy/polys/polytools.py": [
            "sqf_list",
            "sqf",
            "Poly"
        ],
        "sympy/polys/factortools.py": [
            "dup_factor_list",
            "dmp_factor_list",
            "dup_factor_list_include",
            "dmp_factor_list_include"
        ]
    },
    "sympy__sympy-18835": {
        "sympy/utilities/iterables.py": [
            "uniq",
            "multiset"
        ],
        "sympy/core/containers.py": [
            "OrderedSet"
        ],
        "sympy/core/basic.py": []
    },
    "sympy__sympy-19007": {
        "sympy/matrices/expressions/blockmatrix.py": [
            "BlockMatrix._entry",
            "bounds",
            "blockcut"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixExpr.__getitem__",
            "MatrixExpr._entry",
            "MatrixElement"
        ],
        "sympy/matrices/expressions/slice.py": [
            "normalize",
            "MatrixSlice"
        ]
    },
    "sympy__sympy-19254": {
        "sympy/polys/factortools.py": [
            "dup_zz_mignotte_bound",
            "dmp_zz_mignotte_bound"
        ],
        "sympy/polys/densetools.py": [],
        "sympy/polys/polytools.py": []
    },
    "sympy__sympy-19487": {
        "sympy/functions/elementary/complexes.py": [
            "sign",
            "Abs"
        ],
        "sympy/core/function.py": [
            "Function"
        ],
        "sympy/core/expr.py": []
    },
    "sympy__sympy-20049": {
        "sympy/physics/vector/point.py": [
            "Point.vel",
            "Point.set_pos"
        ],
        "sympy/physics/vector/vector.py": [
            "Vector.dt"
        ],
        "sympy/physics/vector/frame.py": [
            "ReferenceFrame"
        ]
    },
    "sympy__sympy-20154": {
        "sympy/utilities/iterables.py": [
            "partitions"
        ],
        "sympy/combinatorics/partitions.py": [
            "IntegerPartition"
        ],
        "sympy/utilities/enumerative.py": []
    },
    "sympy__sympy-20212": {
        "sympy/core/power.py": [
            "Pow"
        ],
        "sympy/core/numbers.py": [
            "Zero",
            "Infinity",
            "NegativeInfinity",
            "ComplexInfinity"
        ],
        "sympy/core/expr.py": []
    },
    "sympy__sympy-20322": {
        "sympy/core/sympify.py": [
            "sympify",
            "_sympify"
        ],
        "sympy/functions/elementary/integers.py": [
            "ceiling",
            "RoundFunction"
        ],
        "sympy/core/function.py": [
            "Function"
        ]
    },
    "sympy__sympy-20442": {
        "sympy/physics/units/util.py": [
            "convert_to",
            "_get_conversion_matrix_for_expr"
        ],
        "sympy/physics/units/quantities.py": [
            "Quantity.convert_to",
            "Quantity._collect_factor_and_dimension",
            "Quantity.get_dimensional_expr"
        ],
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem.get_dimensional_expr",
            "UnitSystem._collect_factor_and_dimension"
        ]
    },
    "sympy__sympy-20590": {
        "sympy/core/symbol.py": [
            "Symbol",
            "Dummy",
            "Wild",
            "Str"
        ],
        "sympy/core/basic.py": [
            "Basic",
            "Atom"
        ],
        "sympy/core/__init__.py": []
    },
    "sympy__sympy-20639": {
        "sympy/printing/pretty/pretty.py": [
            "_print_Pow",
            "_print_nth_root",
            "PrettyPrinter"
        ],
        "sympy/printing/pretty/pretty_symbology.py": [],
        "sympy/printing/pretty/__init__.py": []
    },
    "sympy__sympy-21055": {
        "sympy/assumptions/refine.py": [
            "refine"
        ],
        "sympy/functions/elementary/complexes.py": [
            "arg",
            "Abs"
        ],
        "sympy/core/facts.py": [
            "FactKB"
        ]
    },
    "sympy__sympy-21171": {
        "sympy/printing/latex.py": [
            "LatexPrinter._print_SingularityFunction"
        ],
        "sympy/functions/special/singularity_functions.py": [
            "SingularityFunction"
        ],
        "sympy/printing/printer.py": []
    },
    "sympy__sympy-21379": {
        "sympy/core/basic.py": [
            "Basic.subs",
            "Basic._subs",
            "Basic._eval_subs"
        ],
        "sympy/functions/elementary/piecewise.py": [
            "Piecewise",
            "Piecewise._eval_subs",
            "piecewise_fold"
        ],
        "sympy/functions/elementary/hyperbolic.py": [
            "sinh",
            "cosh",
            "tanh"
        ]
    },
    "sympy__sympy-21612": {
        "sympy/parsing/latex/_parse_latex_antlr.py": [
            "convert_frac",
            "convert_expr",
            "convert_mp",
            "parse_latex"
        ],
        "sympy/parsing/latex/__init__.py": [
            "parse_latex"
        ],
        "sympy/parsing/latex/errors.py": []
    },
    "sympy__sympy-21614": {
        "sympy/core/function.py": [
            "Derivative"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixExpr",
            "MatrixExpr._eval_derivative",
            "MatrixExpr._eval_derivative_n_times",
            "MatrixSymbol",
            "MatrixSymbol._eval_derivative",
            "MatrixSymbol._eval_derivative_matrix_lines",
            "_matrix_derivative"
        ],
        "sympy/core/kind.py": [
            "Kind",
            "KindDispatcher"
        ]
    },
    "sympy__sympy-21627": {
        "sympy/functions/elementary/hyperbolic.py": [
            "cosh",
            "cosh._eval_is_zero"
        ],
        "sympy/core/expr.py": [
            "Expr",
            "Expr.is_zero"
        ],
        "sympy/functions/elementary/trigonometric.py": [
            "TrigonometricFunction"
        ]
    },
    "sympy__sympy-21847": {
        "sympy/polys/monomials.py": [
            "itermonomials"
        ],
        "sympy/polys/orderings.py": [
            "GradedLexOrder",
            "monomial_key"
        ],
        "sympy/polys/polytools.py": []
    },
    "sympy__sympy-22005": {
        "sympy/solvers/polysys.py": [
            "solve_poly_system",
            "_solve_reduced_system"
        ],
        "sympy/solvers/solveset.py": [],
        "sympy/solvers/solvers.py": []
    },
    "sympy__sympy-22714": {
        "sympy/core/sympify.py": [
            "sympify"
        ],
        "sympy/parsing/sympy_parser.py": [
            "parse_expr",
            "eval_expr",
            "EvaluateFalseTransformer"
        ],
        "sympy/geometry/point.py": [
            "Point",
            "Point2D"
        ]
    },
    "sympy__sympy-22840": {
        "sympy/simplify/cse_main.py": [
            "cse",
            "_cse_homogeneous",
            "preprocess_for_cse",
            "postprocess_for_cse"
        ],
        "sympy/matrices/expressions/matexpr.py": [
            "MatrixSymbol",
            "MatrixExpr.__getitem__",
            "MatrixExpr._entry",
            "MatrixElement.doit"
        ],
        "sympy/core/sympify.py": [
            "sympify",
            "_sympify"
        ]
    },
    "sympy__sympy-23117": {
        "sympy/tensor/array/ndim_array.py": [
            "NDimArray._scan_iterable_shape",
            "NDimArray._handle_ndarray_creation_inputs"
        ],
        "sympy/tensor/array/dense_ndim_array.py": [
            "ImmutableDenseNDimArray.__new__",
            "ImmutableDenseNDimArray._new"
        ],
        "sympy/tensor/array/__init__.py": []
    },
    "sympy__sympy-23191": {
        "sympy/printing/pretty/pretty.py": [
            "PrettyPrinter",
            "_print_BasisDependent",
            "_print_Vector",
            "_print_BaseVector",
            "_print_VectorAdd",
            "_print_VectorMul",
            "_print_VectorZero"
        ],
        "sympy/printing/pretty/pretty_symbology.py": [
            "xobj",
            "vobj",
            "hobj"
        ],
        "sympy/vector/vector.py": [
            "Vector",
            "BaseVector",
            "VectorAdd",
            "VectorMul",
            "VectorZero"
        ]
    },
    "sympy__sympy-23262": {
        "sympy/utilities/lambdify.py": [
            "lambdify",
            "lambdastr",
            "_EvaluatorPrinter"
        ],
        "sympy/printing/pycode.py": [
            "AbstractPythonCodePrinter",
            "PythonCodePrinter"
        ],
        "sympy/printing/python.py": [
            "PythonPrinter",
            "python",
            "print_python"
        ]
    },
    "sympy__sympy-24066": {
        "sympy/physics/units/quantities.py": [
            "Quantity._collect_factor_and_dimension"
        ],
        "sympy/physics/units/dimensions.py": [
            "DimensionSystem",
            "DimensionSystem.is_dimensionless"
        ],
        "sympy/physics/units/systems/si.py": []
    },
    "sympy__sympy-24102": {
        "sympy/parsing/mathematica.py": [
            "parse_mathematica",
            "mathematica",
            "MathematicaParser"
        ],
        "sympy/parsing/sym_expr.py": [],
        "sympy/parsing/ast_parser.py": []
    },
    "sympy__sympy-24152": {
        "sympy/physics/quantum/tensorproduct.py": [
            "TensorProduct",
            "tensor_product_simp"
        ],
        "sympy/physics/quantum/qapply.py": [
            "qapply"
        ],
        "sympy/physics/quantum/operator.py": []
    },
    "sympy__sympy-24213": {
        "sympy/physics/units/unitsystem.py": [
            "UnitSystem._collect_factor_and_dimension"
        ],
        "sympy/physics/units/dimensions.py": [
            "DimensionSystem.equivalent_dims"
        ],
        "sympy/physics/units/quantities.py": [
            "Quantity._collect_factor_and_dimension"
        ]
    },
    "sympy__sympy-24909": {
        "sympy/physics/units/prefixes.py": [
            "Prefix",
            "Prefix.__mul__"
        ],
        "sympy/physics/units/quantities.py": [
            "Quantity"
        ],
        "sympy/physics/units/__init__.py": []
    }
}