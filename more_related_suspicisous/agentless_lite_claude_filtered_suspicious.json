{
  "astropy__astropy-12907": {
    "astropy/modeling/separable.py": [
      "separability_matrix",
      "_separable",
      "_cstack",
      "_cdot"
    ]
  },
  "astropy__astropy-14182": {
    "astropy/io/ascii/rst.py": [
      "RST",
      "SimpleRSTHeader",
      "SimpleRSTData"
    ]
  },
  "astropy__astropy-14365": {
    "astropy/io/ascii/qdp.py": [
      "_line_type",
      "_get_type_from_list_of_lines",
      "_interpret_err_lines",
      "_get_tables_from_qdp_file",
      "_understand_err_col",
      "_read_table_qdp",
      "QDP"
    ]
  },
  "astropy__astropy-14995": {
    "astropy/nddata/mixins/ndarithmetic.py": [
      "NDArithmeticMixin._arithmetic_mask",
      "NDArithmeticMixin._arithmetic",
      "NDArithmeticMixin.multiply"
    ]
  },
  "astropy__astropy-6938": {
    "astropy/io/fits/fitsrec.py": [
      "FITS_rec._scale_back_ascii",
      "FITS_rec._convert_ascii"
    ]
  },
  "astropy__astropy-7746": {
    "astropy/wcs/wcs.py": [
      "WCS._array_converter",
      "WCS._denormalize_sky",
      "WCS._normalize_sky",
      "WCS.wcs_pix2world"
    ]
  },
  "django__django-10914": {
    "django/conf/global_settings.py": [],
    "django/core/files/storage.py": [
      "FileSystemStorage"
    ],
    "django/core/files/uploadedfile.py": [
      "TemporaryUploadedFile",
      "InMemoryUploadedFile"
    ]
  },
  "django__django-10924": {
    "django/db/models/fields/__init__.py": [
      "FilePathField"
    ]
  },
  "django__django-11001": {
    "django/db/models/sql/compiler.py": [
      "SQLCompiler.get_order_by"
    ]
  },
  "django__django-11019": {
    "django/forms/widgets.py": [
      "MediaDefiningClass",
      "Widget",
      "MediaOrderConflictWarning",
      "Media.merge",
      "Media.__add__",
      "media_property"
    ]
  },
  "django__django-11039": {
    "django/core/management/commands/sqlmigrate.py": [
      "Command"
    ]
  },
  "django__django-11049": {
    "django/forms/fields.py": [
      "DurationField"
    ]
  },
  "django__django-11099": {
    "django/contrib/auth/validators.py": [
      "ASCIIUsernameValidator",
      "UnicodeUsernameValidator"
    ]
  },
  "django__django-11133": {
    "django/http/response.py": [
      "HttpResponse.content",
      "HttpResponse.content.setter",
      "HttpResponse.make_bytes",
      "HttpResponse.serialize"
    ]
  },
  "django__django-11179": {
    "django/db/models/deletion.py": [
      "Collector.delete"
    ]
  },
  "django__django-11283": {
    "django/contrib/auth/migrations/0011_update_proxy_permissions.py": [
      "update_proxy_model_permissions",
      "revert_proxy_model_permissions",
      "Migration"
    ]
  },
  "django__django-11422": {
    "django/utils/autoreload.py": [
      "iter_all_python_module_files",
      "iter_modules_and_files",
      "StatReloader",
      "get_reloader"
    ]
  },
  "django__django-11564": {
    "django/templatetags/static.py": [
      "StaticNode",
      "PrefixNode",
      "static"
    ],
    "django/core/files/storage.py": [
      "FileSystemStorage",
      "Storage"
    ]
  },
  "django__django-11583": {
    "django/utils/autoreload.py": [
      "iter_all_python_module_files",
      "iter_modules_and_files",
      "StatReloader"
    ]
  },
  "django__django-11620": {
    "django/urls/resolvers.py": [
      "RoutePattern",
      "_route_to_regex",
      "URLResolver"
    ]
  },
  "django__django-11630": {
    "django/core/checks/model_checks.py": [
      "check_all_models",
      "_check_lazy_references",
      "check_lazy_references"
    ]
  },
  "django__django-11742": {
    "django/db/models/fields/__init__.py": [
      "Field",
      "CharField"
    ]
  },
  "django__django-11797": {
    "django/db/models/sql/compiler.py": [
      "SQLCompiler.get_group_by",
      "SQLCompiler.as_sql",
      "SQLCompiler.as_subquery_condition"
    ],
    "django/db/models/sql/query.py": [
      "Query.set_group_by",
      "Query.build_filter"
    ]
  },
  "django__django-11815": {
    "django/db/migrations/writer.py": [
      "MigrationWriter"
    ],
    "django/db/models/fields/__init__.py": [
      "CharField"
    ]
  },
  "django__django-11848": {
    "django/utils/http.py": [
      "parse_http_date"
    ]
  },
  "django__django-11905": {
    "django/db/models/lookups.py": [
      "IsNull",
      "Lookup",
      "QuerySet._filter_or_exclude"
    ]
  },
  "django__django-11910": {
    "django/db/migrations/operations/fields.py": [
      "RenameField",
      "AlterField"
    ]
  },
  "django__django-11964": {
    "django/db/models/fields/__init__.py": [
      "CharField",
      "Field.to_python",
      "Field.get_prep_value",
      "Field.value_to_string"
    ],
    "django/db/models/base.py": [
      "Model.__str__",
      "Model.serializable_value"
    ]
  },
  "django__django-11999": {
    "django/db/models/base.py": [
      "Model._get_FIELD_display"
    ],
    "django/db/models/fields/__init__.py": [
      "Field"
    ]
  },
  "django__django-12113": {
    "django/db/backends/sqlite3/base.py": [
      "DatabaseWrapper",
      "SQLiteCursorWrapper",
      "get_new_connection",
      "create_cursor",
      "close",
      "_set_autocommit"
    ]
  },
  "django__django-12125": {
    "django/db/migrations/serializer.py": [
      "DeconstructableSerializer",
      "ModelFieldSerializer"
    ]
  },
  "django__django-12184": {
    "django/urls/resolvers.py": [
      "URLPattern",
      "RegexPattern",
      "ResolverMatch"
    ]
  },
  "django__django-12284": {
    "django/db/models/fields/__init__.py": [
      "Field",
      "Model._get_FIELD_display"
    ],
    "django/db/models/base.py": [
      "Model"
    ]
  },
  "django__django-12286": {
    "django/core/checks/translation.py": [
      "check_language_settings_consistent"
    ]
  },
  "django__django-12308": {
    "django/contrib/admin/utils.py": [
      "display_for_field",
      "display_for_value"
    ]
  },
  "django__django-12453": {
    "django/db/backends/base/creation.py": [
      "BaseDatabaseCreation.serialize_db_to_string",
      "BaseDatabaseCreation.deserialize_db_from_string",
      "BaseDatabaseCreation.create_test_db"
    ]
  },
  "django__django-12470": {
    "django/db/models/query.py": [
      "QuerySet.order_by",
      "QuerySet._clone"
    ],
    "django/db/models/sql/query.py": [
      "Query.add_ordering",
      "Query.clear_ordering",
      "get_order_dir"
    ]
  },
  "django__django-12497": {
    "django/db/models/fields/related.py": [
      "ForeignKey",
      "ManyToManyField",
      "resolve_relation"
    ]
  },
  "django__django-12589": {
    "django/db/models/sql/compiler.py": [
      "SQLCompiler.get_group_by",
      "SQLCompiler.collapse_group_by",
      "SQLCompiler.as_sql"
    ]
  },
  "django__django-12700": {
    "django/views/debug.py": [
      "SafeExceptionReporterFilter.cleanse_setting",
      "SafeExceptionReporterFilter.get_safe_settings"
    ]
  },
  "django__django-12708": {
    "django/db/backends/base/schema.py": [
      "BaseDatabaseSchemaEditor._delete_composed_index",
      "BaseDatabaseSchemaEditor._constraint_names",
      "BaseDatabaseSchemaEditor.alter_index_together",
      "BaseDatabaseSchemaEditor.alter_unique_together"
    ]
  },
  "django__django-12747": {
    "django/db/models/deletion.py": [
      "Collector.delete"
    ]
  },
  "django__django-12856": {
    "django/db/models/constraints.py": [
      "UniqueConstraint"
    ]
  },
  "django__django-12908": {
    "django/db/models/query.py": [
      "QuerySet.distinct",
      "QuerySet.union",
      "QuerySet._combinator_query"
    ],
    "django/db/models/sql/compiler.py": [
      "SQLCompiler.get_distinct",
      "SQLCompiler.get_combinator_sql",
      "SQLCompiler.as_sql"
    ]
  },
  "django__django-12915": {
    "django/contrib/staticfiles/handlers.py": [
      "StaticFilesHandlerMixin.get_response_async"
    ]
  },
  "django__django-12983": {
    "django/utils/text.py": [
      "slugify"
    ]
  },
  "django__django-13028": {
    "django/db/models/sql/query.py": [
      "Query.check_filterable",
      "Query.build_filter",
      "Query._add_q"
    ]
  },
  "django__django-13033": {
    "django/db/models/sql/compiler.py": [
      "SQLCompiler.get_order_by",
      "SQLCompiler.find_ordering_name",
      "SQLCompiler._setup_joins"
    ]
  },
  "django__django-13158": {
    "django/db/models/query.py": [
      "QuerySet.none",
      "QuerySet.union",
      "QuerySet._combinator_query"
    ],
    "django/forms/models.py": [
      "ModelMultipleChoiceField.clean",
      "ModelMultipleChoiceField._check_values"
    ]
  },
  "django__django-13220": {
    "django/core/exceptions.py": [
      "ValidationError"
    ]
  },
  "django__django-13230": {
    "django/contrib/syndication/views.py": [
      "Feed"
    ]
  },
  "django__django-13265": {
    "django/db/migrations/autodetector.py": [
      "MigrationAutodetector.generate_altered_order_with_respect_to",
      "MigrationAutodetector._optimize_migrations"
    ],
    "django/db/migrations/optimizer.py": [
      "MigrationOptimizer"
    ]
  },
  "django__django-13315": {
    "django/db/models/fields/related.py": [
      "ForeignKey.formfield"
    ],
    "django/forms/models.py": [
      "ModelChoiceField._get_choices",
      "ModelChoiceField.get_limit_choices_to",
      "ModelChoiceIterator"
    ]
  },
  "django__django-13321": {
    "django/contrib/sessions/backends/base.py": [
      "SessionBase.decode",
      "SessionBase._legacy_decode",
      "SessionBase._get_session"
    ]
  },
  "django__django-13401": {
    "django/db/models/fields/__init__.py": [
      "Field.__eq__",
      "Field.__lt__",
      "Field.__hash__"
    ]
  },
  "django__django-13447": {
    "django/contrib/admin/sites.py": [
      "AdminSite._build_app_dict",
      "AdminSite.get_app_list",
      "AdminSite.index",
      "AdminSite.app_index"
    ]
  },
  "django__django-13448": {
    "django/db/backends/base/creation.py": [
      "BaseDatabaseCreation"
    ]
  },
  "django__django-13551": {
    "django/contrib/auth/tokens.py": [
      "PasswordResetTokenGenerator._make_hash_value"
    ]
  },
  "django__django-13590": {
    "django/db/models/sql/query.py": [
      "Query.resolve_lookup_value",
      "JoinInfo"
    ]
  },
  "django__django-13658": {
    "django/core/management/__init__.py": [
      "ManagementUtility"
    ]
  },
  "django__django-13660": {
    "django/core/management/commands/shell.py": [
      "Command.handle"
    ]
  },
  "django__django-13710": {
    "django/contrib/admin/options.py": [
      "InlineModelAdmin",
      "StackedInline",
      "TabularInline"
    ]
  },
  "django__django-13757": {
    "django/db/models/fields/json.py": [
      "KeyTransformIsNull",
      "HasKeyLookup",
      "KeyTransform"
    ]
  },
  "django__django-13768": {
    "django/dispatch/dispatcher.py": [
      "Signal.send_robust"
    ]
  },
  "django__django-13925": {
    "django/db/models/options.py": [
      "Options._get_default_pk_class"
    ]
  },
  "django__django-13933": {
    "django/forms/models.py": [
      "ModelChoiceField",
      "ModelMultipleChoiceField"
    ]
  },
  "django__django-13964": {
    "django/db/models/base.py": [
      "Model._save_parents",
      "Model._save_table",
      "Model._prepare_related_fields_for_save"
    ]
  },
  "django__django-14016": {
    "django/db/models/query_utils.py": [
      "Q._combine",
      "Q.__or__"
    ]
  },
  "django__django-14017": {
    "django/db/models/query_utils.py": [
      "Q"
    ],
    "django/db/models/expressions.py": [
      "Exists"
    ]
  },
  "django__django-14155": {
    "django/urls/resolvers.py": [
      "ResolverMatch",
      "get_callable"
    ]
  },
  "django__django-14238": {
    "django/db/models/fields/__init__.py": [
      "AutoFieldMeta",
      "AutoField",
      "BigAutoField",
      "SmallAutoField"
    ]
  },
  "django__django-14382": {
    "django/core/management/templates.py": [
      "TemplateCommand.validate_name",
      "TemplateCommand.handle"
    ]
  },
  "django__django-14411": {
    "django/contrib/auth/forms.py": [
      "ReadOnlyPasswordHashWidget",
      "ReadOnlyPasswordHashField",
      "UserChangeForm"
    ]
  },
  "django__django-14534": {
    "django/forms/boundfield.py": [
      "BoundWidget.id_for_label"
    ]
  },
  "django__django-14580": {
    "django/db/migrations/writer.py": [
      "MigrationWriter"
    ],
    "django/db/migrations/serializer.py": [
      "DeconstructableSerializer",
      "ModelFieldSerializer",
      "Serializer"
    ]
  },
  "django__django-14608": {
    "django/forms/formsets.py": [
      "BaseFormSet.non_form_errors",
      "BaseFormSet.errors"
    ]
  },
  "django__django-14667": {
    "django/db/models/sql/query.py": [
      "Query.clear_deferred_loading",
      "Query.add_deferred_loading",
      "Query.add_immediate_loading",
      "Query.get_loaded_field_names",
      "Query.get_loaded_field_names_cb"
    ]
  },
  "django__django-14672": {
    "django/db/models/fields/reverse_related.py": [
      "ManyToManyRel.identity",
      "ManyToManyRel.__init__"
    ]
  },
  "django__django-14730": {
    "django/db/models/fields/related.py": [
      "ManyToManyField.__init__",
      "ManyToManyField.check"
    ]
  },
  "django__django-14752": {
    "django/contrib/admin/views/autocomplete.py": [
      "AutocompleteJsonView"
    ]
  },
  "django__django-14787": {
    "django/utils/decorators.py": [
      "_update_method_wrapper",
      "method_decorator",
      "_multi_decorate"
    ]
  },
  "django__django-14855": {
    "django/contrib/admin/helpers.py": [
      "AdminReadonlyField.get_admin_url"
    ]
  },
  "django__django-14915": {
    "django/forms/models.py": [
      "ModelChoiceIteratorValue",
      "ModelChoiceField",
      "ModelMultipleChoiceField"
    ]
  },
  "django__django-14997": {
    "django/db/backends/sqlite3/schema.py": [
      "DatabaseSchemaEditor"
    ],
    "django/db/backends/base/schema.py": [
      "BaseDatabaseSchemaEditor._unique_sql",
      "BaseDatabaseSchemaEditor._create_unique_sql",
      "BaseDatabaseSchemaEditor._delete_unique_sql"
    ],
    "django/db/models/constraints.py": [
      "UniqueConstraint"
    ]
  },
  "django__django-14999": {
    "django/db/migrations/operations/models.py": [
      "RenameModel",
      "AlterModelTable"
    ]
  },
  "django__django-15061": {
    "django/forms/widgets.py": [
      "MultiWidget.id_for_label",
      "ChoiceWidget.id_for_label"
    ]
  },
  "django__django-15202": {
    "django/forms/fields.py": [
      "URLField",
      "Field.clean",
      "Field.run_validators"
    ],
    "django/core/validators.py": [
      "URLValidator"
    ]
  },
  "django__django-15213": {
    "django/db/models/expressions.py": [
      "ExpressionWrapper",
      "Q"
    ]
  },
  "django__django-15252": {
    "django/db/migrations/recorder.py": [
      "MigrationRecorder"
    ]
  },
  "django__django-15320": {
    "django/db/models/expressions.py": [
      "Subquery.as_sql"
    ]
  },
  "django__django-15347": {
    "django/contrib/messages/storage/cookie.py": [
      "MessageEncoder",
      "MessageDecoder"
    ]
  },
  "django__django-15388": {
    "django/utils/autoreload.py": [
      "trigger_reload",
      "restart_with_reloader",
      "BaseReloader",
      "StatReloader",
      "WatchmanReloader",
      "get_reloader",
      "run_with_reloader"
    ],
    "django/template/loaders/filesystem.py": [
      "Loader"
    ]
  },
  "django__django-15400": {
    "django/utils/functional.py": [
      "SimpleLazyObject",
      "LazyObject",
      "new_method_proxy"
    ]
  },
  "django__django-15498": {
    "django/middleware/http.py": [
      "ConditionalGetMiddleware"
    ]
  },
  "django__django-15695": {
    "django/db/migrations/operations/models.py": [
      "RenameIndex"
    ]
  },
  "django__django-15738": {
    "django/db/migrations/operations/models.py": [
      "AlterUniqueTogether",
      "AlterTogetherOptionOperation"
    ],
    "django/db/migrations/state.py": [
      "ProjectState",
      "ModelState.get_constraint_by_name"
    ],
    "django/db/migrations/autodetector.py": [
      "MigrationAutodetector._generate_removed_altered_foo_together",
      "MigrationAutodetector.generate_removed_altered_unique_together",
      "MigrationAutodetector._generate_altered_foo_together",
      "MigrationAutodetector.generate_altered_unique_together"
    ]
  },
  "django__django-15781": {
    "django/core/management/base.py": [
      "DjangoHelpFormatter",
      "BaseCommand"
    ]
  },
  "django__django-15789": {
    "django/utils/html.py": [
      "json_script"
    ]
  },
  "django__django-15790": {
    "django/core/checks/templates.py": [
      "check_for_template_tags_with_the_same_name"
    ]
  },
  "django__django-15814": {
    "django/db/models/sql/query.py": [
      "Query"
    ],
    "django/db/models/query.py": [
      "RelatedPopulator",
      "get_related_populators",
      "QuerySet"
    ]
  },
  "django__django-15819": {
    "django/core/management/commands/inspectdb.py": [
      "Command.get_field_type"
    ]
  },
  "django__django-15851": {
    "django/db/backends/postgresql/client.py": [
      "DatabaseClient"
    ]
  },
  "django__django-15902": {
    "django/forms/formsets.py": [
      "ManagementForm",
      "BaseFormSet"
    ],
    "django/forms/renderers.py": [
      "BaseRenderer",
      "DjangoTemplates",
      "Jinja2",
      "DjangoDivFormRenderer",
      "Jinja2DivFormRenderer",
      "TemplatesSetting",
      "get_default_renderer"
    ]
  },
  "django__django-15996": {
    "django/db/migrations/serializer.py": [
      "EnumSerializer",
      "RegexSerializer",
      "Serializer",
      "serializer_factory"
    ]
  },
  "django__django-16041": {
    "django/forms/formsets.py": [
      "BaseFormSet.empty_form",
      "BaseFormSet._construct_form",
      "BaseFormSet.get_form_kwargs"
    ]
  },
  "django__django-16046": {
    "django/utils/numberformat.py": [
      "format"
    ]
  },
  "django__django-16139": {
    "django/contrib/auth/forms.py": [
      "UserChangeForm"
    ]
  },
  "django__django-16229": {
    "django/forms/models.py": [
      "BaseModelForm",
      "ModelForm",
      "BaseInlineFormSet",
      "modelform_factory",
      "inlineformset_factory"
    ],
    "django/contrib/admin/options.py": [
      "ModelAdmin",
      "InlineModelAdmin",
      "TabularInline"
    ],
    "django/forms/forms.py": [
      "BaseForm._clean_fields",
      "BaseForm.clean"
    ]
  },
  "django__django-16255": {
    "django/contrib/sitemaps/__init__.py": [
      "Sitemap.get_latest_lastmod",
      "GenericSitemap"
    ]
  },
  "django__django-16379": {
    "django/core/cache/backends/filebased.py": [
      "FileBasedCache.has_key",
      "FileBasedCache._is_expired",
      "FileBasedCache._delete"
    ]
  },
  "django__django-16400": {
    "django/contrib/auth/management/__init__.py": [
      "create_permissions",
      "get_default_username"
    ]
  },
  "django__django-16408": {
    "django/db/models/sql/query.py": [
      "Query.setup_joins",
      "Query.add_filtered_relation",
      "Query.build_filtered_relation_q"
    ]
  },
  "django__django-16527": {
    "django/contrib/admin/templatetags/admin_modify.py": [
      "submit_row"
    ]
  },
  "django__django-16595": {
    "django/db/migrations/operations/fields.py": [
      "AlterField.reduce",
      "AlterField.is_same_field_operation"
    ]
  },
  "django__django-16816": {
    "django/contrib/admin/checks.py": [
      "BaseModelAdminChecks",
      "ModelAdminChecks"
    ]
  },
  "django__django-16820": {
    "django/db/migrations/operations/models.py": [
      "AlterIndexTogether",
      "AddIndex",
      "RemoveIndex"
    ],
    "django/db/migrations/autodetector.py": [
      "MigrationAutodetector.generate_removed_altered_index_together",
      "MigrationAutodetector.generate_altered_index_together",
      "MigrationAutodetector._get_altered_foo_together_operations",
      "MigrationAutodetector._generate_removed_altered_foo_together",
      "MigrationAutodetector._generate_altered_foo_together"
    ]
  },
  "django__django-16873": {
    "django/template/defaultfilters.py": [
      "join"
    ]
  },
  "django__django-16910": {
    "django/db/models/query.py": [
      "QuerySet.only",
      "QuerySet.select_related",
      "QuerySet._fetch_all"
    ],
    "django/db/models/sql/query.py": [
      "Query.get_select_mask",
      "Query._get_only_select_mask",
      "Query._get_defer_select_mask"
    ]
  },
  "django__django-17051": {
    "django/db/models/query.py": [
      "QuerySet.bulk_create",
      "QuerySet._insert",
      "QuerySet._batched_insert"
    ],
    "django/db/backends/postgresql/operations.py": [
      "DatabaseOperations.return_insert_columns",
      "DatabaseOperations.bulk_insert_sql",
      "DatabaseOperations.on_conflict_suffix_sql"
    ]
  },
  "django__django-17087": {
    "django/db/migrations/serializer.py": [
      "DeconstructableSerializer",
      "ModelFieldSerializer",
      "serializer_factory"
    ]
  },
  "matplotlib__matplotlib-18869": {
    "lib/matplotlib/__init__.py": [
      "RcParams"
    ]
  },
  "matplotlib__matplotlib-22711": {
    "lib/matplotlib/widgets.py": [
      "RangeSlider.set_val"
    ]
  },
  "matplotlib__matplotlib-22835": {
    "lib/matplotlib/artist.py": [
      "Artist.format_cursor_data",
      "Artist.get_cursor_data"
    ],
    "lib/matplotlib/colors.py": [
      "BoundaryNorm",
      "Normalize"
    ]
  },
  "matplotlib__matplotlib-23299": {
    "lib/matplotlib/__init__.py": [
      "get_backend",
      "rc_context",
      "use"
    ]
  },
  "matplotlib__matplotlib-23314": {
    "lib/mpl_toolkits/mplot3d/axes3d.py": [
      "Axes3D"
    ]
  },
  "matplotlib__matplotlib-23476": {
    "lib/matplotlib/figure.py": [
      "Figure.__setstate__",
      "Figure._get_dpi",
      "Figure._set_dpi"
    ],
    "lib/matplotlib/backend_bases.py": [
      "FigureCanvasBase._set_device_pixel_ratio",
      "FigureCanvasBase.get_width_height"
    ],
    "lib/matplotlib/backends/backend_macosx.py": [
      "FigureCanvasMac.__init__",
      "FigureCanvasMac.resize"
    ]
  },
  "matplotlib__matplotlib-23562": {
    "lib/mpl_toolkits/mplot3d/art3d.py": [
      "Poly3DCollection.get_facecolors"
    ]
  },
  "matplotlib__matplotlib-23563": {
    "lib/mpl_toolkits/mplot3d/art3d.py": [
      "Line3D.draw",
      "Line3D.set_3d_properties"
    ]
  },
  "matplotlib__matplotlib-23913": {
    "lib/matplotlib/legend.py": [
      "Legend",
      "DraggableLegend"
    ]
  },
  "matplotlib__matplotlib-23964": {
    "lib/matplotlib/backends/backend_ps.py": [
      "RendererPS.draw_text",
      "RendererPS.draw_tex"
    ]
  },
  "matplotlib__matplotlib-23987": {
    "lib/matplotlib/figure.py": [
      "Figure.subplots_adjust",
      "Figure.set_layout_engine",
      "Figure._check_layout_engines_compat"
    ],
    "lib/matplotlib/layout_engine.py": [
      "LayoutEngine",
      "ConstrainedLayoutEngine",
      "PlaceHolderLayoutEngine"
    ]
  },
  "matplotlib__matplotlib-24149": {
    "lib/matplotlib/cbook/__init__.py": [
      "_safe_first_finite",
      "sanitize_sequence"
    ]
  },
  "matplotlib__matplotlib-24265": {
    "lib/matplotlib/style/core.py": [
      "reload_library",
      "read_style_directory",
      "update_user_library",
      "update_nested_dict"
    ]
  },
  "matplotlib__matplotlib-24334": {
    "lib/matplotlib/axis.py": [
      "Axis.set_ticks",
      "Axis.set_ticklabels"
    ]
  },
  "matplotlib__matplotlib-24970": {
    "lib/matplotlib/colors.py": [
      "ListedColormap._init"
    ]
  },
  "matplotlib__matplotlib-25079": {
    "lib/matplotlib/colors.py": [
      "Normalize",
      "LogNorm",
      "make_norm_from_scale"
    ],
    "lib/matplotlib/cm.py": [
      "ScalarMappable",
      "_auto_norm_from_scale"
    ],
    "lib/matplotlib/colorbar.py": [
      "Colorbar"
    ]
  },
  "matplotlib__matplotlib-25311": {
    "lib/matplotlib/legend.py": [
      "DraggableLegend",
      "Legend"
    ]
  },
  "matplotlib__matplotlib-25332": {
    "lib/matplotlib/figure.py": [
      "Figure.__getstate__",
      "Figure.__setstate__",
      "Figure.align_labels",
      "Figure.align_xlabels",
      "Figure.align_ylabels"
    ],
    "lib/matplotlib/text.py": [
      "Text.__getstate__"
    ],
    "lib/matplotlib/artist.py": [
      "Artist.__getstate__"
    ]
  },
  "matplotlib__matplotlib-25433": {
    "lib/matplotlib/widgets.py": [
      "RangeSlider",
      "Widget",
      "AxesWidget",
      "SliderBase"
    ],
    "lib/matplotlib/backend_bases.py": [
      "FigureCanvasBase"
    ]
  },
  "matplotlib__matplotlib-25442": {
    "lib/matplotlib/offsetbox.py": [
      "DraggableBase._check_still_parented",
      "DraggableBase.disconnect",
      "DraggableBase.on_release"
    ]
  },
  "matplotlib__matplotlib-25498": {
    "lib/matplotlib/colorbar.py": [
      "Colorbar.update_normal",
      "Colorbar.update_bruteforce",
      "Colorbar._process_values",
      "Colorbar._uniform_y"
    ]
  },
  "matplotlib__matplotlib-26011": {
    "lib/matplotlib/axes/_base.py": [
      "_AxesBase.set_xlim"
    ]
  },
  "matplotlib__matplotlib-26020": {
    "lib/mpl_toolkits/axes_grid1/axes_grid.py": [
      "_tick_only",
      "Grid",
      "ImageGrid",
      "AxesGrid"
    ]
  },
  "mwaskom__seaborn-2848": {
    "seaborn/axisgrid.py": [
      "PairGrid._map_bivariate",
      "PairGrid._plot_bivariate"
    ],
    "seaborn/relational.py": [
      "_ScatterPlotter",
      "scatterplot"
    ]
  },
  "mwaskom__seaborn-3010": {
    "seaborn/_stats/regression.py": [
      "PolyFit._fit_predict"
    ]
  },
  "mwaskom__seaborn-3190": {
    "seaborn/_core/scales.py": [
      "ContinuousBase",
      "Scale",
      "Nominal"
    ]
  },
  "mwaskom__seaborn-3407": {
    "seaborn/axisgrid.py": [
      "pairplot",
      "PairGrid.map_diag",
      "PairGrid._plot_bivariate",
      "PairGrid._find_numeric_cols"
    ],
    "seaborn/_core/data.py": [
      "PlotData"
    ]
  },
  "pallets__flask-4045": {
    "src/flask/blueprints.py": [
      "Blueprint.__init__"
    ]
  },
  "pallets__flask-4992": {
    "src/flask/config.py": [
      "Config.from_file"
    ]
  },
  "pallets__flask-5063": {
    "src/flask/cli.py": [
      "routes_command"
    ]
  },
  "psf__requests-1963": {
    "requests/sessions.py": [
      "SessionRedirectMixin",
      "Session.resolve_redirects",
      "Session.send",
      "Session.request"
    ]
  },
  "psf__requests-2148": {
    "requests/packages/urllib3/response.py": [
      "HTTPResponse.read",
      "HTTPResponse.stream"
    ],
    "requests/models.py": [
      "Response.iter_content",
      "Response.content",
      "Response.text"
    ]
  },
  "psf__requests-2317": {
    "requests/sessions.py": [
      "Session.request",
      "Session.prepare_request"
    ]
  },
  "psf__requests-2674": {
    "requests/adapters.py": [
      "HTTPAdapter.send",
      "HTTPAdapter.build_response"
    ]
  },
  "psf__requests-3362": {
    "requests/models.py": [
      "Response.iter_content",
      "Response.text",
      "Response.content"
    ],
    "requests/utils.py": [
      "stream_decode_response_unicode",
      "get_unicode_from_response",
      "get_encoding_from_headers"
    ]
  },
  "psf__requests-863": {
    "requests/models.py": [
      "Request.register_hook",
      "Request._build_response"
    ],
    "requests/hooks.py": [
      "dispatch_hook"
    ]
  },
  "pydata__xarray-3364": {
    "xarray/core/concat.py": [
      "concat",
      "_calc_concat_over",
      "_dataset_concat",
      "_dataarray_concat"
    ]
  },
  "pydata__xarray-4094": {
    "xarray/core/dataarray.py": [
      "DataArray.to_unstacked_dataset",
      "DataArray.unstack"
    ]
  },
  "pydata__xarray-4248": {
    "xarray/core/formatting.py": [
      "summarize_coord",
      "summarize_datavar",
      "dataset_repr"
    ]
  },
  "pydata__xarray-4493": {
    "xarray/core/dataset.py": [
      "Dataset.update",
      "Dataset._replace",
      "Dataset._replace_with_new_dims",
      "Dataset._replace_vars_and_dims"
    ]
  },
  "pydata__xarray-5131": {
    "xarray/core/groupby.py": [
      "GroupBy.__repr__",
      "DatasetGroupBy"
    ]
  },
  "pylint-dev__pylint-5859": {
    "pylint/checkers/misc.py": [
      "EncodingChecker"
    ]
  },
  "pylint-dev__pylint-6506": {
    "pylint/config/config_initialization.py": [
      "_config_initialization"
    ]
  },
  "pylint-dev__pylint-7080": {
    "pylint/lint/expand_modules.py": [
      "_is_in_ignore_list_re",
      "_is_ignored_file",
      "expand_modules"
    ],
    "pylint/lint/pylinter.py": [
      "_expand_files",
      "_discover_files",
      "check"
    ]
  },
  "pylint-dev__pylint-7114": {
    "pylint/lint/expand_modules.py": [
      "_modpath_from_file",
      "expand_modules"
    ],
    "pylint/lint/pylinter.py": [
      "_expand_files",
      "_iterate_file_descrs",
      "should_analyze_file",
      "_discover_files"
    ]
  },
  "pylint-dev__pylint-7228": {
    "pylint/config/option.py": [
      "_regexp_validator",
      "Option"
    ]
  },
  "pylint-dev__pylint-7993": {
    "pylint/reporters/text.py": [
      "TextReporter",
      "ColorizedTextReporter"
    ]
  },
  "pytest-dev__pytest-11143": {
    "src/_pytest/assertion/rewrite.py": [
      "AssertionRewriter",
      "_rewrite_test",
      "rewrite_asserts",
      "is_rewrite_disabled"
    ]
  },
  "pytest-dev__pytest-5103": {
    "src/_pytest/assertion/rewrite.py": [
      "AssertionRewriter",
      "visit_Call_35",
      "visit_Call_legacy",
      "visit_Assert"
    ]
  },
  "pytest-dev__pytest-5221": {
    "src/_pytest/helpconfig.py": [
      "showhelp",
      "pytest_addoption"
    ]
  },
  "pytest-dev__pytest-5227": {
    "src/_pytest/logging.py": [
      "ColoredLevelFormatter",
      "LoggingPlugin",
      "_LiveLoggingStreamHandler"
    ]
  },
  "pytest-dev__pytest-5413": {
    "src/_pytest/_code/code.py": [
      "ExceptionInfo"
    ]
  },
  "pytest-dev__pytest-5495": {
    "src/_pytest/assertion/rewrite.py": [
      "_saferepr",
      "_format_assertmsg",
      "_call_reprcompare",
      "AssertionRewriter"
    ],
    "src/_pytest/assertion/util.py": [
      "assertrepr_compare",
      "_diff_text",
      "_compare_eq_verbose",
      "_compare_eq_sequence"
    ]
  },
  "pytest-dev__pytest-5692": {
    "src/_pytest/junitxml.py": [
      "LogXML",
      "_NodeReporter",
      "pytest_configure",
      "pytest_sessionstart",
      "pytest_sessionfinish"
    ]
  },
  "pytest-dev__pytest-6116": {
    "src/_pytest/main.py": [
      "pytest_addoption",
      "Session"
    ]
  },
  "pytest-dev__pytest-7168": {
    "src/_pytest/_io/saferepr.py": [
      "_format_repr_exception",
      "SafeRepr"
    ]
  },
  "pytest-dev__pytest-7220": {
    "src/_pytest/terminal.py": [
      "_locationline",
      "_getfailureheadline",
      "TerminalReporter"
    ],
    "src/_pytest/nodes.py": [
      "get_fslocation_from_item",
      "Item"
    ]
  },
  "pytest-dev__pytest-7373": {
    "src/_pytest/mark/evaluate.py": [
      "cached_eval",
      "MarkEvaluator"
    ]
  },
  "pytest-dev__pytest-7432": {
    "src/_pytest/skipping.py": [
      "pytest_runtest_makereport"
    ]
  },
  "pytest-dev__pytest-7490": {
    "src/_pytest/skipping.py": [
      "evaluate_xfail_marks",
      "pytest_runtest_call",
      "pytest_runtest_makereport"
    ],
    "src/_pytest/nodes.py": [
      "Node.add_marker",
      "Node.iter_markers"
    ]
  },
  "pytest-dev__pytest-8365": {
    "src/_pytest/tmpdir.py": [
      "get_user",
      "TempPathFactory",
      "TempdirFactory"
    ]
  },
  "pytest-dev__pytest-8906": {
    "src/_pytest/outcomes.py": [
      "Skipped",
      "skip"
    ]
  },
  "pytest-dev__pytest-9359": {
    "src/_pytest/assertion/rewrite.py": [
      "AssertionRewriter",
      "_get_assertion_exprs",
      "rewrite_asserts",
      "_write_pyc_fp",
      "_rewrite_test"
    ]
  },
  "scikit-learn__scikit-learn-10297": {
    "sklearn/linear_model/ridge.py": [
      "RidgeClassifierCV",
      "_BaseRidgeCV",
      "_RidgeGCV"
    ]
  },
  "scikit-learn__scikit-learn-10508": {
    "sklearn/preprocessing/label.py": [
      "LabelEncoder"
    ]
  },
  "scikit-learn__scikit-learn-10949": {
    "sklearn/utils/validation.py": [
      "check_array",
      "as_float_array"
    ]
  },
  "scikit-learn__scikit-learn-11040": {
    "sklearn/neighbors/base.py": [
      "NeighborsBase",
      "KNeighborsMixin"
    ],
    "sklearn/neighbors/unsupervised.py": [
      "NearestNeighbors"
    ]
  },
  "scikit-learn__scikit-learn-11281": {
    "sklearn/mixture/gaussian_mixture.py": [
      "GaussianMixture"
    ],
    "sklearn/mixture/base.py": [
      "BaseMixture"
    ]
  },
  "scikit-learn__scikit-learn-12471": {
    "sklearn/preprocessing/_encoders.py": [
      "_BaseEncoder",
      "OneHotEncoder._transform_new",
      "OneHotEncoder._transform"
    ]
  },
  "scikit-learn__scikit-learn-13142": {
    "sklearn/mixture/base.py": [
      "BaseMixture.fit",
      "BaseMixture.fit_predict",
      "BaseMixture.predict",
      "BaseMixture._initialize_parameters",
      "BaseMixture._e_step"
    ]
  },
  "scikit-learn__scikit-learn-13241": {
    "sklearn/decomposition/kernel_pca.py": [
      "KernelPCA._fit_transform",
      "KernelPCA._get_kernel"
    ]
  },
  "scikit-learn__scikit-learn-13439": {
    "sklearn/pipeline.py": [
      "Pipeline"
    ]
  },
  "scikit-learn__scikit-learn-13496": {
    "sklearn/ensemble/iforest.py": [
      "IsolationForest"
    ]
  },
  "scikit-learn__scikit-learn-13497": {
    "sklearn/feature_selection/mutual_info_.py": [
      "_estimate_mi",
      "mutual_info_regression",
      "mutual_info_classif"
    ]
  },
  "scikit-learn__scikit-learn-13584": {
    "sklearn/linear_model/logistic.py": [
      "LogisticRegressionCV",
      "_logistic_regression_path",
      "_log_reg_scoring_path"
    ],
    "sklearn/_config.py": [
      "set_config"
    ],
    "sklearn/base.py": [
      "BaseEstimator.__repr__"
    ]
  },
  "scikit-learn__scikit-learn-13779": {
    "sklearn/ensemble/voting.py": [
      "_parallel_fit_estimator",
      "VotingClassifier",
      "VotingRegressor"
    ]
  },
  "scikit-learn__scikit-learn-14087": {
    "sklearn/linear_model/logistic.py": [
      "LogisticRegressionCV",
      "_logistic_regression_path",
      "_log_reg_scoring_path"
    ]
  },
  "scikit-learn__scikit-learn-14092": {
    "sklearn/neighbors/nca.py": [
      "NeighborhoodComponentsAnalysis"
    ],
    "sklearn/utils/validation.py": [
      "check_scalar"
    ]
  },
  "scikit-learn__scikit-learn-14894": {
    "sklearn/svm/base.py": [
      "BaseLibSVM._sparse_fit",
      "BaseLibSVM._get_coef"
    ]
  },
  "scikit-learn__scikit-learn-14983": {
    "sklearn/model_selection/_split.py": [
      "_RepeatedSplits",
      "RepeatedKFold",
      "RepeatedStratifiedKFold",
      "_build_repr"
    ]
  },
  "scikit-learn__scikit-learn-15512": {
    "sklearn/cluster/_affinity_propagation.py": [
      "affinity_propagation",
      "AffinityPropagation"
    ]
  },
  "scikit-learn__scikit-learn-25500": {
    "sklearn/calibration.py": [
      "_CalibratedClassifier",
      "CalibratedClassifierCV",
      "_fit_calibrator"
    ],
    "sklearn/isotonic.py": [
      "IsotonicRegression"
    ]
  },
  "scikit-learn__scikit-learn-25570": {
    "sklearn/compose/_column_transformer.py": [
      "ColumnTransformer",
      "_hstack",
      "_add_prefix_for_feature_names_out",
      "_iter",
      "_is_empty_column_selection"
    ]
  },
  "scikit-learn__scikit-learn-25638": {
    "sklearn/utils/multiclass.py": [
      "unique_labels",
      "type_of_target",
      "_unique_multiclass"
    ]
  },
  "scikit-learn__scikit-learn-25747": {
    "sklearn/pipeline.py": [
      "FeatureUnion",
      "_transform_one",
      "_hstack"
    ],
    "sklearn/utils/_set_output.py": [
      "_wrap_in_pandas_container",
      "_wrap_data_with_container",
      "_wrap_method_output"
    ]
  },
  "sphinx-doc__sphinx-10325": {
    "sphinx/ext/autodoc/__init__.py": [
      "inherited_members_option",
      "ClassDocumenter",
      "ModuleDocumenter",
      "get_class_members"
    ]
  },
  "sphinx-doc__sphinx-10451": {
    "sphinx/ext/autodoc/typehints.py": [
      "record_typehints",
      "merge_typehints",
      "modify_field_list",
      "augment_descriptions_with_types"
    ]
  },
  "sphinx-doc__sphinx-11445": {
    "sphinx/environment/collectors/title.py": [
      "TitleCollector",
      "process_doc"
    ]
  },
  "sphinx-doc__sphinx-7686": {
    "sphinx/ext/autosummary/generate.py": [
      "generate_autosummary_content",
      "generate_autosummary_docs"
    ]
  },
  "sphinx-doc__sphinx-7738": {
    "sphinx/ext/napoleon/docstring.py": [
      "GoogleDocstring",
      "NumpyDocstring"
    ]
  },
  "sphinx-doc__sphinx-7975": {
    "sphinx/builders/html/__init__.py": [
      "StandaloneHTMLBuilder.write_genindex",
      "StandaloneHTMLBuilder.gen_indices"
    ]
  },
  "sphinx-doc__sphinx-8273": {
    "sphinx/builders/manpage.py": [
      "ManualPageBuilder",
      "default_man_pages",
      "setup"
    ]
  },
  "sphinx-doc__sphinx-8282": {
    "sphinx/ext/autodoc/__init__.py": [
      "FunctionDocumenter",
      "MethodDocumenter"
    ]
  },
  "sphinx-doc__sphinx-8435": {
    "sphinx/ext/autodoc/__init__.py": [
      "DataDocumenter",
      "AttributeDocumenter",
      "InstanceAttributeDocumenter",
      "SlotsAttributeDocumenter"
    ]
  },
  "sphinx-doc__sphinx-8474": {
    "sphinx/builders/latex/__init__.py": [
      "LaTeXBuilder"
    ],
    "sphinx/builders/singlehtml.py": [
      "SingleFileHTMLBuilder.assemble_toc_fignumbers",
      "SingleFileHTMLBuilder.assemble_toc_secnumbers"
    ]
  },
  "sphinx-doc__sphinx-8506": {
    "sphinx/domains/std.py": [
      "Cmdoption",
      "OptionXRefRole"
    ]
  },
  "sphinx-doc__sphinx-8595": {
    "sphinx/ext/autodoc/__init__.py": [
      "ModuleDocumenter",
      "_All",
      "_Empty"
    ]
  },
  "sphinx-doc__sphinx-8627": {
    "sphinx/domains/python.py": [
      "type_to_xref",
      "_parse_annotation",
      "PyXrefRole",
      "PythonDomain"
    ]
  },
  "sphinx-doc__sphinx-8713": {
    "sphinx/ext/napoleon/docstring.py": [
      "GoogleDocstring._parse_other_parameters_section",
      "GoogleDocstring._parse_parameters_section",
      "GoogleDocstring._format_docutils_params",
      "GoogleDocstring._format_fields"
    ]
  },
  "sphinx-doc__sphinx-8721": {
    "sphinx/ext/viewcode.py": [
      "should_generate_module_page",
      "collect_pages",
      "setup"
    ]
  },
  "sphinx-doc__sphinx-8801": {
    "sphinx/ext/autodoc/__init__.py": [
      "AttributeDocumenter",
      "ClassDocumenter",
      "DataDocumenter"
    ]
  },
  "sympy__sympy-11400": {
    "sympy/printing/ccode.py": [
      "CCodePrinter"
    ]
  },
  "sympy__sympy-11870": {
    "sympy/simplify/trigsimp.py": [
      "trigsimp",
      "exptrigsimp"
    ],
    "sympy/functions/elementary/exponential.py": [
      "exp"
    ]
  },
  "sympy__sympy-11897": {
    "sympy/printing/latex.py": [
      "LatexPrinter",
      "latex"
    ]
  },
  "sympy__sympy-12171": {
    "sympy/printing/mathematica.py": [
      "MCodePrinter._print_Derivative",
      "MCodePrinter._print_Float"
    ]
  },
  "sympy__sympy-12236": {
    "sympy/polys/partfrac.py": [
      "apart",
      "apart_undetermined_coeffs",
      "apart_full_decomposition"
    ]
  },
  "sympy__sympy-12419": {
    "sympy/matrices/expressions/matexpr.py": [
      "Identity",
      "MatrixElement",
      "MatrixExpr"
    ],
    "sympy/concrete/summations.py": [
      "Sum",
      "eval_sum",
      "eval_sum_direct",
      "eval_sum_symbolic"
    ]
  },
  "sympy__sympy-12454": {
    "sympy/matrices/matrices.py": [
      "MatrixProperties.is_upper",
      "a2idx"
    ]
  },
  "sympy__sympy-12481": {
    "sympy/combinatorics/permutations.py": [
      "Permutation.__new__",
      "Permutation._af_new",
      "_af_rmul"
    ]
  },
  "sympy__sympy-13031": {
    "sympy/matrices/common.py": [
      "MatrixShaping.hstack",
      "MatrixShaping.vstack",
      "MatrixShaping._eval_col_join",
      "MatrixShaping._eval_row_join"
    ]
  },
  "sympy__sympy-13043": {
    "sympy/integrals/intpoly.py": [
      "decompose",
      "clockwise_sort"
    ]
  },
  "sympy__sympy-13146": {
    "sympy/simplify/simplify.py": [
      "simplify",
      "nsimplify"
    ],
    "sympy/core/power.py": [
      "Pow"
    ],
    "sympy/core/evalf.py": [
      "evalf",
      "evalf_pow",
      "EvalfMixin"
    ]
  },
  "sympy__sympy-13177": {
    "sympy/core/mod.py": [
      "Mod"
    ]
  },
  "sympy__sympy-13437": {
    "sympy/functions/combinatorial/numbers.py": [
      "bell"
    ],
    "sympy/series/limits.py": [
      "limit",
      "heuristics",
      "Limit"
    ]
  },
  "sympy__sympy-13471": {
    "sympy/core/numbers.py": [
      "Float.__getnewargs__",
      "Float.__getstate__",
      "Float._hashable_content",
      "Float._as_mpf_val"
    ]
  },
  "sympy__sympy-13480": {
    "sympy/functions/elementary/hyperbolic.py": [
      "coth.eval"
    ]
  },
  "sympy__sympy-13647": {
    "sympy/matrices/common.py": [
      "MatrixShaping._eval_col_insert",
      "MatrixShaping.col_insert"
    ]
  },
  "sympy__sympy-13773": {
    "sympy/matrices/expressions/matmul.py": [
      "MatMul"
    ],
    "sympy/matrices/dense.py": [
      "DenseMatrix._eval_matrix_mul",
      "DenseMatrix._eval_scalar_mul",
      "DenseMatrix._eval_scalar_rmul"
    ]
  },
  "sympy__sympy-13895": {
    "sympy/core/power.py": [
      "Pow"
    ]
  },
  "sympy__sympy-13915": {
    "sympy/core/basic.py": [
      "Basic.subs",
      "Basic._subs",
      "Basic._eval_subs"
    ],
    "sympy/core/function.py": [
      "Function._eval_subs",
      "Subs._eval_subs"
    ]
  },
  "sympy__sympy-13971": {
    "sympy/printing/latex.py": [
      "_print_SeqFormula"
    ]
  },
  "sympy__sympy-14024": {
    "sympy/simplify/simplify.py": [
      "simplify"
    ],
    "sympy/core/power.py": [
      "Pow._eval_power",
      "Pow._eval_is_positive",
      "Pow._eval_is_negative",
      "Pow._eval_is_real",
      "Pow._eval_subs",
      "Pow.as_base_exp"
    ]
  },
  "sympy__sympy-14308": {
    "sympy/printing/pretty/pretty.py": [
      "_print_BasisDependent",
      "_print_Pow",
      "PrettyPrinter"
    ],
    "sympy/printing/pretty/stringpict.py": [
      "stringPict",
      "prettyForm"
    ]
  },
  "sympy__sympy-14317": {
    "sympy/printing/latex.py": [
      "_print_Poly"
    ]
  },
  "sympy__sympy-14396": {
    "sympy/polys/polyoptions.py": [
      "Domain.preprocess"
    ]
  },
  "sympy__sympy-14774": {
    "sympy/printing/latex.py": [
      "LatexPrinter"
    ]
  },
  "sympy__sympy-14817": {
    "sympy/printing/pretty/pretty.py": [
      "PrettyPrinter._print_MatAdd"
    ]
  },
  "sympy__sympy-15011": {
    "sympy/utilities/lambdify.py": [
      "lambdify",
      "_EvaluatorPrinter",
      "lambdastr"
    ],
    "sympy/printing/lambdarepr.py": [
      "LambdaPrinter",
      "TensorflowPrinter",
      "NumExprPrinter",
      "lambdarepr"
    ],
    "sympy/core/symbol.py": [
      "Symbol",
      "Dummy"
    ]
  },
  "sympy__sympy-15308": {
    "sympy/printing/latex.py": [
      "LatexPrinter",
      "_print_Tr",
      "_print_trace"
    ]
  },
  "sympy__sympy-15345": {
    "sympy/printing/mathematica.py": [
      "MCodePrinter",
      "mathematica_code"
    ],
    "sympy/printing/precedence.py": [
      "precedence"
    ]
  },
  "sympy__sympy-15346": {
    "sympy/simplify/trigsimp.py": [
      "trigsimp",
      "_trigsimp",
      "__trigsimp"
    ],
    "sympy/functions/elementary/trigonometric.py": [
      "sin",
      "cos",
      "TrigonometricFunction"
    ]
  },
  "sympy__sympy-15609": {
    "sympy/printing/latex.py": [
      "LatexPrinter._print_MatrixElement",
      "LatexPrinter._print_Indexed",
      "LatexPrinter._print_Sum"
    ],
    "sympy/matrices/expressions/matmul.py": [
      "MatMul"
    ]
  },
  "sympy__sympy-15678": {
    "sympy/geometry/util.py": [
      "idiff"
    ]
  },
  "sympy__sympy-16106": {
    "sympy/printing/mathml.py": [
      "MathMLContentPrinter._print_Indexed",
      "MathMLContentPrinter._print_IndexedBase",
      "MathMLPresentationPrinter._print_Indexed",
      "MathMLPresentationPrinter._print_IndexedBase"
    ]
  },
  "sympy__sympy-16281": {
    "sympy/printing/pretty/pretty.py": [
      "PrettyPrinter._print_Product"
    ]
  },
  "sympy__sympy-16503": {
    "sympy/printing/pretty/pretty.py": [
      "PrettyPrinter._print_Sum"
    ]
  },
  "sympy__sympy-16792": {
    "sympy/utilities/autowrap.py": [
      "CythonCodeWrapper",
      "autowrap"
    ],
    "sympy/utilities/codegen.py": [
      "CCodeGen",
      "get_prototype",
      "_declare_arguments",
      "make_routine"
    ]
  },
  "sympy__sympy-16988": {
    "sympy/sets/sets.py": [
      "Intersection._handle_finite_sets",
      "simplify_intersection"
    ]
  },
  "sympy__sympy-17022": {
    "sympy/utilities/lambdify.py": [
      "lambdify"
    ],
    "sympy/printing/pycode.py": [
      "NumPyPrinter",
      "SciPyPrinter"
    ]
  },
  "sympy__sympy-17139": {
    "sympy/simplify/fu.py": [
      "_TR56",
      "TR6"
    ]
  },
  "sympy__sympy-17630": {
    "sympy/matrices/expressions/blockmatrix.py": [
      "BlockMatrix",
      "block_collapse",
      "bc_matmul"
    ],
    "sympy/matrices/expressions/matmul.py": [
      "MatMul",
      "any_zeros"
    ]
  },
  "sympy__sympy-17655": {
    "sympy/geometry/entity.py": [
      "GeometryEntity"
    ]
  },
  "sympy__sympy-18057": {
    "sympy/core/expr.py": [
      "Expr.__eq__"
    ],
    "sympy/core/sympify.py": [
      "sympify",
      "_sympify"
    ]
  },
  "sympy__sympy-18087": {
    "sympy/simplify/trigsimp.py": [
      "trigsimp",
      "_trigsimp",
      "__trigsimp",
      "futrig",
      "_futrig"
    ],
    "sympy/functions/elementary/trigonometric.py": [
      "sin",
      "cos"
    ]
  },
  "sympy__sympy-18189": {
    "sympy/solvers/diophantine.py": [
      "diophantine",
      "_diop_quadratic",
      "diop_quadratic",
      "_sorted_tuple",
      "merge_solution",
      "diop_solve",
      "classify_diop"
    ]
  },
  "sympy__sympy-18199": {
    "sympy/ntheory/residue_ntheory.py": [
      "nthroot_mod",
      "_nthroot_mod1",
      "_nthroot_mod2"
    ]
  },
  "sympy__sympy-18532": {
    "sympy/core/basic.py": [
      "Basic.atoms",
      "Atom"
    ]
  },
  "sympy__sympy-18621": {
    "sympy/matrices/expressions/blockmatrix.py": [
      "BlockDiagMatrix._entry",
      "BlockDiagMatrix.blocks"
    ],
    "sympy/matrices/expressions/matexpr.py": [
      "OneMatrix",
      "MatrixExpr.as_explicit",
      "MatrixExpr._entry"
    ]
  },
  "sympy__sympy-18698": {
    "sympy/polys/sqfreetools.py": [
      "dup_sqf_list",
      "dmp_sqf_list",
      "dup_sqf_list_include",
      "dmp_sqf_list_include"
    ]
  },
  "sympy__sympy-18835": {
    "sympy/utilities/iterables.py": [
      "uniq",
      "multiset"
    ]
  },
  "sympy__sympy-19007": {
    "sympy/matrices/expressions/blockmatrix.py": [
      "BlockMatrix._entry",
      "bounds",
      "blockcut"
    ]
  },
  "sympy__sympy-19254": {
    "sympy/polys/factortools.py": [
      "dup_zz_mignotte_bound",
      "dmp_zz_mignotte_bound"
    ]
  },
  "sympy__sympy-19487": {
    "sympy/functions/elementary/complexes.py": [
      "sign",
      "Abs"
    ]
  },
  "sympy__sympy-20049": {
    "sympy/physics/vector/point.py": [
      "Point.vel",
      "Point.set_pos"
    ]
  },
  "sympy__sympy-20154": {
    "sympy/utilities/iterables.py": [
      "partitions"
    ]
  },
  "sympy__sympy-20212": {
    "sympy/core/power.py": [
      "Pow"
    ],
    "sympy/core/numbers.py": [
      "Zero",
      "Infinity",
      "NegativeInfinity",
      "ComplexInfinity"
    ]
  },
  "sympy__sympy-20322": {
    "sympy/core/sympify.py": [
      "sympify",
      "_sympify"
    ],
    "sympy/functions/elementary/integers.py": [
      "ceiling",
      "RoundFunction"
    ]
  },
  "sympy__sympy-20442": {
    "sympy/physics/units/util.py": [
      "convert_to",
      "_get_conversion_matrix_for_expr"
    ]
  },
  "sympy__sympy-20590": {
    "sympy/core/symbol.py": [
      "Symbol",
      "Dummy",
      "Wild",
      "Str"
    ],
    "sympy/core/basic.py": [
      "Basic",
      "Atom"
    ]
  },
  "sympy__sympy-20639": {
    "sympy/printing/pretty/pretty.py": [
      "_print_Pow",
      "_print_nth_root",
      "PrettyPrinter"
    ]
  },
  "sympy__sympy-21055": {
    "sympy/functions/elementary/complexes.py": [
      "arg",
      "Abs"
    ]
  },
  "sympy__sympy-21171": {
    "sympy/printing/latex.py": [
      "LatexPrinter._print_SingularityFunction"
    ]
  },
  "sympy__sympy-21379": {
    "sympy/functions/elementary/piecewise.py": [
      "Piecewise._eval_subs",
      "piecewise_fold"
    ],
    "sympy/functions/elementary/hyperbolic.py": [
      "sinh",
      "cosh",
      "tanh"
    ]
  },
  "sympy__sympy-21612": {
    "sympy/parsing/latex/_parse_latex_antlr.py": [
      "convert_frac",
      "convert_expr",
      "convert_mp",
      "parse_latex"
    ]
  },
  "sympy__sympy-21614": {
    "sympy/core/function.py": [
      "Derivative"
    ],
    "sympy/matrices/expressions/matexpr.py": [
      "MatrixExpr._eval_derivative",
      "MatrixExpr._eval_derivative_n_times",
      "MatrixSymbol._eval_derivative",
      "MatrixSymbol._eval_derivative_matrix_lines",
      "_matrix_derivative"
    ]
  },
  "sympy__sympy-21627": {
    "sympy/functions/elementary/hyperbolic.py": [
      "cosh._eval_is_zero"
    ]
  },
  "sympy__sympy-21847": {
    "sympy/polys/monomials.py": [
      "itermonomials"
    ]
  },
  "sympy__sympy-22005": {
    "sympy/solvers/polysys.py": [
      "solve_poly_system",
      "_solve_reduced_system"
    ]
  },
  "sympy__sympy-22714": {
    "sympy/geometry/point.py": [
      "Point",
      "Point2D"
    ]
  },
  "sympy__sympy-22840": {
    "sympy/simplify/cse_main.py": [
      "cse",
      "_cse_homogeneous",
      "preprocess_for_cse",
      "postprocess_for_cse"
    ],
    "sympy/matrices/expressions/matexpr.py": [
      "MatrixSymbol",
      "MatrixExpr.__getitem__",
      "MatrixExpr._entry",
      "MatrixElement.doit"
    ]
  },
  "sympy__sympy-23117": {
    "sympy/tensor/array/ndim_array.py": [
      "NDimArray._scan_iterable_shape",
      "NDimArray._handle_ndarray_creation_inputs"
    ]
  },
  "sympy__sympy-23191": {
    "sympy/printing/pretty/pretty.py": [
      "PrettyPrinter",
      "_print_BasisDependent",
      "_print_Vector",
      "_print_BaseVector",
      "_print_VectorAdd",
      "_print_VectorMul",
      "_print_VectorZero"
    ]
  },
  "sympy__sympy-23262": {
    "sympy/utilities/lambdify.py": [
      "lambdify",
      "lambdastr",
      "_EvaluatorPrinter"
    ],
    "sympy/printing/pycode.py": [
      "AbstractPythonCodePrinter",
      "PythonCodePrinter"
    ]
  },
  "sympy__sympy-24066": {
    "sympy/physics/units/dimensions.py": [
      "DimensionSystem.is_dimensionless"
    ]
  },
  "sympy__sympy-24102": {
    "sympy/parsing/mathematica.py": [
      "parse_mathematica",
      "mathematica",
      "MathematicaParser"
    ]
  },
  "sympy__sympy-24152": {
    "sympy/physics/quantum/tensorproduct.py": [
      "TensorProduct",
      "tensor_product_simp"
    ]
  },
  "sympy__sympy-24213": {
    "sympy/physics/units/unitsystem.py": [
      "UnitSystem._collect_factor_and_dimension"
    ]
  },
  "sympy__sympy-24909": {
    "sympy/physics/units/prefixes.py": [
      "Prefix.__mul__"
    ]
  }
}